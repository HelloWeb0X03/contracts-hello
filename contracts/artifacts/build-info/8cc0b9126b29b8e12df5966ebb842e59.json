{
	"id": "8cc0b9126b29b8e12df5966ebb842e59",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MinHashCameContract_v3.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// #### 版本3\r\n// 增加LuckyToken奖励，获奖者可领取奖励\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract MinHashGameContract {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public owner;\r\n    uint256 public epochId;\r\n    uint256 public gameStartBlock;\r\n    uint256 public gameDuration;\r\n    address public currentMinAddress;\r\n    uint256 public currentMinHash;\r\n    bool public gameActive;\r\n    address public winner;\r\n    uint256 public reward;\r\n    bool public rewardClaimed;\r\n    \r\n    IERC20 public luckyToken;\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n    \r\n    modifier gameIsActive() {\r\n        require(gameActive, \"Game is not active\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _luckyTokenAddress) {\r\n        owner = msg.sender;\r\n        luckyToken = IERC20(_luckyTokenAddress);\r\n    }\r\n    \r\n    function startNewGame(uint256 _gameDuration, uint256 _reward) public onlyOwner {\r\n        require(!gameActive, \"Current game is still active\");\r\n        // 查询代币余额\r\n        require(luckyToken.balanceOf(address(this)) >= _reward, \"Insufficient token balance\");\r\n        \r\n        if (epochId > 0) {\r\n            require(rewardClaimed, \"Previous reward not claimed\");\r\n        }\r\n        \r\n        epochId++;\r\n        gameStartBlock = block.number;\r\n        gameDuration = _gameDuration;\r\n        currentMinAddress = address(0);\r\n        currentMinHash = type(uint256).max;\r\n        gameActive = true;\r\n        winner = address(0);\r\n        reward = _reward;\r\n        rewardClaimed = false;\r\n    }\r\n\r\n    function iambestone() public gameIsActive {\r\n        require(block.number < gameStartBlock + gameDuration, \"Game has ended\");\r\n        \r\n        uint256 playerHash = uint256(keccak256(abi.encodePacked(msg.sender, epochId)));\r\n        \r\n        if (currentMinAddress == address(0) || playerHash < currentMinHash) {\r\n            currentMinAddress = msg.sender;\r\n            currentMinHash = playerHash;\r\n        }\r\n    }\r\n\r\n    function endGame() public onlyOwner {\r\n        require(gameActive, \"Game is not active\");\r\n        require(block.number >= gameStartBlock + gameDuration, \"Game has not ended yet\");\r\n        \r\n        gameActive = false;\r\n        winner = currentMinAddress;\r\n    }\r\n    // 获取奖励\r\n    function claimReward() public {\r\n        require(!gameActive, \"Game is still active\");\r\n        require(msg.sender == winner, \"Only winner can claim reward\");\r\n        require(!rewardClaimed, \"Reward already claimed\");\r\n        \r\n        rewardClaimed = true;\r\n        luckyToken.safeTransfer(winner, reward);\r\n    }\r\n\r\n    // 用于合约所有者存入LuckyToken\r\n    function depositTokens(uint256 amount) public onlyOwner {\r\n        luckyToken.safeTransferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n    // 用于合约所有者提取剩余的LuckyToken\r\n    function withdrawTokens(uint256 amount) public onlyOwner {\r\n        luckyToken.safeTransfer(msg.sender, amount);\r\n    }\r\n\r\n    // 用于查看当前最小hash地址\r\n    function getCurrentMinAddress() public view returns (address) {\r\n        return currentMinAddress;\r\n    }\r\n\r\n    // 用于查看当前最小hash值\r\n    function getCurrentMinHash() public view returns (uint256) {\r\n        return currentMinHash;\r\n    }\r\n\r\n    // 用于查看当前游戏轮次\r\n    function getCurrentEpoch() public view returns (uint256) {\r\n        return epochId;\r\n    }\r\n\r\n    // 用于查看当前获胜者\r\n    function getWinner() public view returns (address) {\r\n        return winner;\r\n    }\r\n\r\n    // 用于查看当前奖励金额\r\n    function getReward() public view returns (uint256) {\r\n        return reward;\r\n    }\r\n\r\n    // 用于查看奖励是否已被领取\r\n    function isRewardClaimed() public view returns (bool) {\r\n        return rewardClaimed;\r\n    }\r\n    // 查询luckyToken余额\r\n    function getContractBalance() public view returns (uint256) {\r\n    return luckyToken.balanceOf(address(this));\r\n}\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/MinHashCameContract_v3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/MinHashCameContract_v3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MinHashCameContract_v3.sol": {
				"MinHashGameContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_luckyTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMinAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMinHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epochId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameStartBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentEpoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentMinAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentMinHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWinner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "iambestone",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRewardClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "luckyToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gameDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_reward",
									"type": "uint256"
								}
							],
							"name": "startNewGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MinHashCameContract_v3.sol\":258:4177  contract MinHashGameContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MinHashCameContract_v3.sol\":923:1050  constructor(address _luckyTokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MinHashCameContract_v3.sol\":982:992  msg.sender */\n  caller\n    /* \"contracts/MinHashCameContract_v3.sol\":974:979  owner */\n  0x00\n  dup1\n    /* \"contracts/MinHashCameContract_v3.sol\":974:992  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MinHashCameContract_v3.sol\":1023:1041  _luckyTokenAddress */\n  dup1\n    /* \"contracts/MinHashCameContract_v3.sol\":1003:1013  luckyToken */\n  0x08\n  0x01\n    /* \"contracts/MinHashCameContract_v3.sol\":1003:1042  luckyToken = IERC20(_luckyTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MinHashCameContract_v3.sol\":923:1050  constructor(address _luckyTokenAddress) {... */\n  pop\n    /* \"contracts/MinHashCameContract_v3.sol\":258:4177  contract MinHashGameContract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MinHashCameContract_v3.sol\":258:4177  contract MinHashGameContract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MinHashCameContract_v3.sol\":258:4177  contract MinHashGameContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaa9bbc0c\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xdfbf53ae\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xdfbf53ae\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe1f0c376\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xefc29372\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf020044f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf30d9470\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xfd636322\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0xaa9bbc0c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb97dd9e2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc010ce68\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd94504b9\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd49756e\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x56bf8741\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x56bf8741\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x58830d6c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6cbc2ded\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8e7ea5b2\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x01b62b78\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0d7d5599\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x228cb733\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x315a095d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3804c73d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MinHashCameContract_v3.sol\":615:640  bool public rewardClaimed */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":455:487  address public currentMinAddress */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":587:608  uint256 public reward */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":3062:3181  function withdrawTokens(uint256 amount) public onlyOwner {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/MinHashCameContract_v3.sol\":385:414  uint256 public gameStartBlock */\n    tag_7:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":3795:3878  function getReward() public view returns (uint256) {... */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":653:677  IERC20 public luckyToken */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":494:523  uint256 public currentMinHash */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":2202:2465  function endGame() public onlyOwner {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/MinHashCameContract_v3.sol\":4061:4174  function getContractBalance() public view returns (uint256) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":329:349  address public owner */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":3665:3748  function getWinner() public view returns (address) {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":356:378  uint256 public epochId */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":2492:2808  function claimReward() public {... */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/MinHashCameContract_v3.sol\":3531:3621  function getCurrentEpoch() public view returns (uint256) {... */\n    tag_17:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":3931:4024  function isRewardClaimed() public view returns (bool) {... */\n    tag_18:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":3385:3484  function getCurrentMinHash() public view returns (uint256) {... */\n    tag_19:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":2862:2999  function depositTokens(uint256 amount) public onlyOwner {... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/MinHashCameContract_v3.sol\":559:580  address public winner */\n    tag_21:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":421:448  uint256 public gameDuration */\n    tag_22:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":3232:3337  function getCurrentMinAddress() public view returns (address) {... */\n    tag_23:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":530:552  bool public gameActive */\n    tag_24:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinHashCameContract_v3.sol\":1062:1768  function startNewGame(uint256 _gameDuration, uint256 _reward) public onlyOwner {... */\n    tag_25:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/MinHashCameContract_v3.sol\":1776:2194  function iambestone() public gameIsActive {... */\n    tag_26:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/MinHashCameContract_v3.sol\":615:640  bool public rewardClaimed */\n    tag_31:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":455:487  address public currentMinAddress */\n    tag_35:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":587:608  uint256 public reward */\n    tag_39:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":3062:3181  function withdrawTokens(uint256 amount) public onlyOwner {... */\n    tag_45:\n        /* \"contracts/MinHashCameContract_v3.sol\":744:749  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":730:749  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":730:740  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":730:749  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MinHashCameContract_v3.sol\":722:787  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/MinHashCameContract_v3.sol\":3130:3173  luckyToken.safeTransfer(msg.sender, amount) */\n      tag_110\n        /* \"contracts/MinHashCameContract_v3.sol\":3154:3164  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":3166:3172  amount */\n      dup3\n        /* \"contracts/MinHashCameContract_v3.sol\":3130:3140  luckyToken */\n      0x08\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":3130:3153  luckyToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"contracts/MinHashCameContract_v3.sol\":3130:3173  luckyToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/MinHashCameContract_v3.sol\":3062:3181  function withdrawTokens(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":385:414  uint256 public gameStartBlock */\n    tag_47:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":3795:3878  function getReward() public view returns (uint256) {... */\n    tag_50:\n        /* \"contracts/MinHashCameContract_v3.sol\":3837:3844  uint256 */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":3864:3870  reward */\n      sload(0x07)\n        /* \"contracts/MinHashCameContract_v3.sol\":3857:3870  return reward */\n      swap1\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":3795:3878  function getReward() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":653:677  IERC20 public luckyToken */\n    tag_53:\n      0x08\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":494:523  uint256 public currentMinHash */\n    tag_57:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":2202:2465  function endGame() public onlyOwner {... */\n    tag_60:\n        /* \"contracts/MinHashCameContract_v3.sol\":744:749  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":730:749  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":730:740  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":730:749  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MinHashCameContract_v3.sol\":722:787  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_108\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/MinHashCameContract_v3.sol\":2257:2267  gameActive */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2249:2290  require(gameActive, \"Game is not active\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/MinHashCameContract_v3.sol\":2342:2354  gameDuration */\n      sload(0x03)\n        /* \"contracts/MinHashCameContract_v3.sol\":2325:2339  gameStartBlock */\n      sload(0x02)\n        /* \"contracts/MinHashCameContract_v3.sol\":2325:2354  gameStartBlock + gameDuration */\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"contracts/MinHashCameContract_v3.sol\":2309:2321  block.number */\n      number\n        /* \"contracts/MinHashCameContract_v3.sol\":2309:2354  block.number >= gameStartBlock + gameDuration */\n      lt\n      iszero\n        /* \"contracts/MinHashCameContract_v3.sol\":2301:2381  require(block.number >= gameStartBlock + gameDuration, \"Game has not ended yet\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/MinHashCameContract_v3.sol\":2415:2420  false */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":2402:2412  gameActive */\n      0x06\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":2402:2420  gameActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":2440:2457  currentMinAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2431:2437  winner */\n      0x06\n      0x01\n        /* \"contracts/MinHashCameContract_v3.sol\":2431:2457  winner = currentMinAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":2202:2465  function endGame() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":4061:4174  function getContractBalance() public view returns (uint256) {... */\n    tag_62:\n        /* \"contracts/MinHashCameContract_v3.sol\":4112:4119  uint256 */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":4135:4145  luckyToken */\n      0x08\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":4135:4155  luckyToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/MinHashCameContract_v3.sol\":4164:4168  this */\n      address\n        /* \"contracts/MinHashCameContract_v3.sol\":4135:4170  luckyToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_126:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/MinHashCameContract_v3.sol\":4128:4170  return luckyToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":4061:4174  function getContractBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":329:349  address public owner */\n    tag_65:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":3665:3748  function getWinner() public view returns (address) {... */\n    tag_68:\n        /* \"contracts/MinHashCameContract_v3.sol\":3707:3714  address */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":3734:3740  winner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":3727:3740  return winner */\n      swap1\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":3665:3748  function getWinner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":356:378  uint256 public epochId */\n    tag_71:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":2492:2808  function claimReward() public {... */\n    tag_74:\n        /* \"contracts/MinHashCameContract_v3.sol\":2542:2552  gameActive */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2541:2552  !gameActive */\n      iszero\n        /* \"contracts/MinHashCameContract_v3.sol\":2533:2577  require(!gameActive, \"Game is still active\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/MinHashCameContract_v3.sol\":2610:2616  winner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2596:2616  msg.sender == winner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2596:2606  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":2596:2616  msg.sender == winner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MinHashCameContract_v3.sol\":2588:2649  require(msg.sender == winner, \"Only winner can claim reward\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/MinHashCameContract_v3.sol\":2669:2682  rewardClaimed */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2668:2682  !rewardClaimed */\n      iszero\n        /* \"contracts/MinHashCameContract_v3.sol\":2660:2709  require(!rewardClaimed, \"Reward already claimed\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/MinHashCameContract_v3.sol\":2746:2750  true */\n      0x01\n        /* \"contracts/MinHashCameContract_v3.sol\":2730:2743  rewardClaimed */\n      0x08\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":2730:2750  rewardClaimed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":2761:2800  luckyToken.safeTransfer(winner, reward) */\n      tag_142\n        /* \"contracts/MinHashCameContract_v3.sol\":2785:2791  winner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2793:2799  reward */\n      sload(0x07)\n        /* \"contracts/MinHashCameContract_v3.sol\":2761:2771  luckyToken */\n      0x08\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2761:2784  luckyToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"contracts/MinHashCameContract_v3.sol\":2761:2800  luckyToken.safeTransfer(winner, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/MinHashCameContract_v3.sol\":2492:2808  function claimReward() public {... */\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":3531:3621  function getCurrentEpoch() public view returns (uint256) {... */\n    tag_76:\n        /* \"contracts/MinHashCameContract_v3.sol\":3579:3586  uint256 */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":3606:3613  epochId */\n      sload(0x01)\n        /* \"contracts/MinHashCameContract_v3.sol\":3599:3613  return epochId */\n      swap1\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":3531:3621  function getCurrentEpoch() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":3931:4024  function isRewardClaimed() public view returns (bool) {... */\n    tag_79:\n        /* \"contracts/MinHashCameContract_v3.sol\":3979:3983  bool */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":4003:4016  rewardClaimed */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":3996:4016  return rewardClaimed */\n      swap1\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":3931:4024  function isRewardClaimed() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":3385:3484  function getCurrentMinHash() public view returns (uint256) {... */\n    tag_82:\n        /* \"contracts/MinHashCameContract_v3.sol\":3435:3442  uint256 */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":3462:3476  currentMinHash */\n      sload(0x05)\n        /* \"contracts/MinHashCameContract_v3.sol\":3455:3476  return currentMinHash */\n      swap1\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":3385:3484  function getCurrentMinHash() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":2862:2999  function depositTokens(uint256 amount) public onlyOwner {... */\n    tag_86:\n        /* \"contracts/MinHashCameContract_v3.sol\":744:749  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":730:749  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":730:740  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":730:749  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MinHashCameContract_v3.sol\":722:787  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_108\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/MinHashCameContract_v3.sol\":2929:2991  luckyToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_150\n        /* \"contracts/MinHashCameContract_v3.sol\":2957:2967  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":2977:2981  this */\n      address\n        /* \"contracts/MinHashCameContract_v3.sol\":2984:2990  amount */\n      dup4\n        /* \"contracts/MinHashCameContract_v3.sol\":2929:2939  luckyToken */\n      0x08\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2929:2956  luckyToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/MinHashCameContract_v3.sol\":2929:2991  luckyToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/MinHashCameContract_v3.sol\":2862:2999  function depositTokens(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":559:580  address public winner */\n    tag_88:\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":421:448  uint256 public gameDuration */\n    tag_91:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":3232:3337  function getCurrentMinAddress() public view returns (address) {... */\n    tag_94:\n        /* \"contracts/MinHashCameContract_v3.sol\":3285:3292  address */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":3312:3329  currentMinAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":3305:3329  return currentMinAddress */\n      swap1\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":3232:3337  function getCurrentMinAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":530:552  bool public gameActive */\n    tag_97:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":1062:1768  function startNewGame(uint256 _gameDuration, uint256 _reward) public onlyOwner {... */\n    tag_102:\n        /* \"contracts/MinHashCameContract_v3.sol\":744:749  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":730:749  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":730:740  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":730:749  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MinHashCameContract_v3.sol\":722:787  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_108\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/MinHashCameContract_v3.sol\":1161:1171  gameActive */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":1160:1171  !gameActive */\n      iszero\n        /* \"contracts/MinHashCameContract_v3.sol\":1152:1204  require(!gameActive, \"Current game is still active\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/MinHashCameContract_v3.sol\":1293:1300  _reward */\n      dup1\n        /* \"contracts/MinHashCameContract_v3.sol\":1254:1264  luckyToken */\n      0x08\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":1254:1274  luckyToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/MinHashCameContract_v3.sol\":1283:1287  this */\n      address\n        /* \"contracts/MinHashCameContract_v3.sol\":1254:1289  luckyToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_160:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_163:\n        /* \"contracts/MinHashCameContract_v3.sol\":1254:1300  luckyToken.balanceOf(address(this)) >= _reward */\n      lt\n      iszero\n        /* \"contracts/MinHashCameContract_v3.sol\":1246:1331  require(luckyToken.balanceOf(address(this)) >= _reward, \"Insufficient token balance\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/MinHashCameContract_v3.sol\":1366:1367  0 */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1356:1363  epochId */\n      sload(0x01)\n        /* \"contracts/MinHashCameContract_v3.sol\":1356:1367  epochId > 0 */\n      gt\n        /* \"contracts/MinHashCameContract_v3.sol\":1352:1449  if (epochId > 0) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"contracts/MinHashCameContract_v3.sol\":1392:1405  rewardClaimed */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":1384:1437  require(rewardClaimed, \"Previous reward not claimed\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/MinHashCameContract_v3.sol\":1352:1449  if (epochId > 0) {... */\n    tag_167:\n        /* \"contracts/MinHashCameContract_v3.sol\":1469:1476  epochId */\n      0x01\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1469:1478  epochId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1506:1518  block.number */\n      number\n        /* \"contracts/MinHashCameContract_v3.sol\":1489:1503  gameStartBlock */\n      0x02\n        /* \"contracts/MinHashCameContract_v3.sol\":1489:1518  gameStartBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1544:1557  _gameDuration */\n      dup2\n        /* \"contracts/MinHashCameContract_v3.sol\":1529:1541  gameDuration */\n      0x03\n        /* \"contracts/MinHashCameContract_v3.sol\":1529:1557  gameDuration = _gameDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1596:1597  0 */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1568:1585  currentMinAddress */\n      0x04\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1568:1598  currentMinAddress = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1626:1643  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/MinHashCameContract_v3.sol\":1609:1623  currentMinHash */\n      0x05\n        /* \"contracts/MinHashCameContract_v3.sol\":1609:1643  currentMinHash = type(uint256).max */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1667:1671  true */\n      0x01\n        /* \"contracts/MinHashCameContract_v3.sol\":1654:1664  gameActive */\n      0x06\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1654:1671  gameActive = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1699:1700  0 */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1682:1688  winner */\n      0x06\n      0x01\n        /* \"contracts/MinHashCameContract_v3.sol\":1682:1701  winner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1721:1728  _reward */\n      dup1\n        /* \"contracts/MinHashCameContract_v3.sol\":1712:1718  reward */\n      0x07\n        /* \"contracts/MinHashCameContract_v3.sol\":1712:1728  reward = _reward */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1755:1760  false */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1739:1752  rewardClaimed */\n      0x08\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1739:1760  rewardClaimed = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1062:1768  function startNewGame(uint256 _gameDuration, uint256 _reward) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MinHashCameContract_v3.sol\":1776:2194  function iambestone() public gameIsActive {... */\n    tag_104:\n        /* \"contracts/MinHashCameContract_v3.sol\":862:872  gameActive */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":854:895  require(gameActive, \"Game is not active\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_119\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/MinHashCameContract_v3.sol\":1869:1881  gameDuration */\n      sload(0x03)\n        /* \"contracts/MinHashCameContract_v3.sol\":1852:1866  gameStartBlock */\n      sload(0x02)\n        /* \"contracts/MinHashCameContract_v3.sol\":1852:1881  gameStartBlock + gameDuration */\n      tag_177\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_177:\n        /* \"contracts/MinHashCameContract_v3.sol\":1837:1849  block.number */\n      number\n        /* \"contracts/MinHashCameContract_v3.sol\":1837:1881  block.number < gameStartBlock + gameDuration */\n      lt\n        /* \"contracts/MinHashCameContract_v3.sol\":1829:1900  require(block.number < gameStartBlock + gameDuration, \"Game has ended\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/MinHashCameContract_v3.sol\":1921:1939  uint256 playerHash */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":1977:1987  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":1989:1996  epochId */\n      sload(0x01)\n        /* \"contracts/MinHashCameContract_v3.sol\":1960:1997  abi.encodePacked(msg.sender, epochId) */\n      add(0x20, mload(0x40))\n      tag_181\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MinHashCameContract_v3.sol\":1950:1998  keccak256(abi.encodePacked(msg.sender, epochId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/MinHashCameContract_v3.sol\":1942:1999  uint256(keccak256(abi.encodePacked(msg.sender, epochId))) */\n      0x00\n      shr\n        /* \"contracts/MinHashCameContract_v3.sol\":1921:1999  uint256 playerHash = uint256(keccak256(abi.encodePacked(msg.sender, epochId))) */\n      swap1\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":2053:2054  0 */\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":2024:2055  currentMinAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2024:2041  currentMinAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MinHashCameContract_v3.sol\":2024:2055  currentMinAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MinHashCameContract_v3.sol\":2024:2086  currentMinAddress == address(0) || playerHash < currentMinHash */\n      dup1\n      tag_183\n      jumpi\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":2072:2086  currentMinHash */\n      sload(0x05)\n        /* \"contracts/MinHashCameContract_v3.sol\":2059:2069  playerHash */\n      dup2\n        /* \"contracts/MinHashCameContract_v3.sol\":2059:2086  playerHash < currentMinHash */\n      lt\n        /* \"contracts/MinHashCameContract_v3.sol\":2024:2086  currentMinAddress == address(0) || playerHash < currentMinHash */\n    tag_183:\n        /* \"contracts/MinHashCameContract_v3.sol\":2020:2187  if (currentMinAddress == address(0) || playerHash < currentMinHash) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"contracts/MinHashCameContract_v3.sol\":2123:2133  msg.sender */\n      caller\n        /* \"contracts/MinHashCameContract_v3.sol\":2103:2120  currentMinAddress */\n      0x04\n      0x00\n        /* \"contracts/MinHashCameContract_v3.sol\":2103:2133  currentMinAddress = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":2165:2175  playerHash */\n      dup1\n        /* \"contracts/MinHashCameContract_v3.sol\":2148:2162  currentMinHash */\n      0x05\n        /* \"contracts/MinHashCameContract_v3.sol\":2148:2175  currentMinHash = playerHash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":2020:2187  if (currentMinAddress == address(0) || playerHash < currentMinHash) {... */\n    tag_184:\n        /* \"contracts/MinHashCameContract_v3.sol\":1818:2194  {... */\n      pop\n        /* \"contracts/MinHashCameContract_v3.sol\":1776:2194  function iambestone() public gameIsActive {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_187\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_196\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_197\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_212\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_211)\n    tag_212:\n      0x60\n      swap2\n      pop\n    tag_211:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_218\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_219)\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_215)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_215:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:97   */\n    tag_226:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_227:\n        /* \"#utility.yul\":184:205   */\n      tag_281\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_226\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_33:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_283\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_227\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:560   */\n    tag_228:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":511:553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":500:554   */\n      and\n        /* \"#utility.yul\":489:554   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":566:662   */\n    tag_229:\n        /* \"#utility.yul\":603:610   */\n      0x00\n        /* \"#utility.yul\":632:656   */\n      tag_286\n        /* \"#utility.yul\":650:655   */\n      dup3\n        /* \"#utility.yul\":632:656   */\n      tag_228\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":621:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:786   */\n    tag_230:\n        /* \"#utility.yul\":755:779   */\n      tag_288\n        /* \"#utility.yul\":773:778   */\n      dup2\n        /* \"#utility.yul\":755:779   */\n      tag_229\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":750:753   */\n      dup3\n        /* \"#utility.yul\":743:780   */\n      mstore\n        /* \"#utility.yul\":668:786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":792:1014   */\n    tag_37:\n        /* \"#utility.yul\":885:889   */\n      0x00\n        /* \"#utility.yul\":923:925   */\n      0x20\n        /* \"#utility.yul\":912:921   */\n      dup3\n        /* \"#utility.yul\":908:926   */\n      add\n        /* \"#utility.yul\":900:926   */\n      swap1\n      pop\n        /* \"#utility.yul\":936:1007   */\n      tag_290\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":936:1007   */\n      tag_230\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":792:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1097   */\n    tag_231:\n        /* \"#utility.yul\":1057:1064   */\n      0x00\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1075:1091   */\n      swap1\n      pop\n        /* \"#utility.yul\":1020:1097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1103:1221   */\n    tag_232:\n        /* \"#utility.yul\":1190:1214   */\n      tag_293\n        /* \"#utility.yul\":1208:1213   */\n      dup2\n        /* \"#utility.yul\":1190:1214   */\n      tag_231\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1185:1188   */\n      dup3\n        /* \"#utility.yul\":1178:1215   */\n      mstore\n        /* \"#utility.yul\":1103:1221   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1227:1449   */\n    tag_41:\n        /* \"#utility.yul\":1320:1324   */\n      0x00\n        /* \"#utility.yul\":1358:1360   */\n      0x20\n        /* \"#utility.yul\":1347:1356   */\n      dup3\n        /* \"#utility.yul\":1343:1361   */\n      add\n        /* \"#utility.yul\":1335:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1442   */\n      tag_295\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1371:1442   */\n      tag_232\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1227:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1536:1653   */\n    tag_234:\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1642:1643   */\n      dup1\n        /* \"#utility.yul\":1635:1647   */\n      revert\n        /* \"#utility.yul\":1782:1904   */\n    tag_236:\n        /* \"#utility.yul\":1855:1879   */\n      tag_300\n        /* \"#utility.yul\":1873:1878   */\n      dup2\n        /* \"#utility.yul\":1855:1879   */\n      tag_231\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1848:1853   */\n      dup2\n        /* \"#utility.yul\":1845:1880   */\n      eq\n        /* \"#utility.yul\":1835:1898   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":1894:1895   */\n      0x00\n        /* \"#utility.yul\":1891:1892   */\n      dup1\n        /* \"#utility.yul\":1884:1896   */\n      revert\n        /* \"#utility.yul\":1835:1898   */\n    tag_301:\n        /* \"#utility.yul\":1782:1904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2049   */\n    tag_237:\n        /* \"#utility.yul\":1956:1961   */\n      0x00\n        /* \"#utility.yul\":1994:2000   */\n      dup2\n        /* \"#utility.yul\":1981:2001   */\n      calldataload\n        /* \"#utility.yul\":1972:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2010:2043   */\n      tag_303\n        /* \"#utility.yul\":2037:2042   */\n      dup2\n        /* \"#utility.yul\":2010:2043   */\n      tag_236\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1910:2049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2384   */\n    tag_44:\n        /* \"#utility.yul\":2114:2120   */\n      0x00\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2151:2160   */\n      dup3\n        /* \"#utility.yul\":2142:2149   */\n      dup5\n        /* \"#utility.yul\":2138:2161   */\n      sub\n        /* \"#utility.yul\":2134:2166   */\n      slt\n        /* \"#utility.yul\":2131:2250   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":2169:2248   */\n      tag_306\n      tag_234\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2131:2250   */\n    tag_305:\n        /* \"#utility.yul\":2289:2290   */\n      0x00\n        /* \"#utility.yul\":2314:2367   */\n      tag_307\n        /* \"#utility.yul\":2359:2366   */\n      dup5\n        /* \"#utility.yul\":2350:2356   */\n      dup3\n        /* \"#utility.yul\":2339:2348   */\n      dup6\n        /* \"#utility.yul\":2335:2357   */\n      add\n        /* \"#utility.yul\":2314:2367   */\n      tag_237\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2304:2367   */\n      swap2\n      pop\n        /* \"#utility.yul\":2260:2377   */\n      pop\n        /* \"#utility.yul\":2055:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2450   */\n    tag_238:\n        /* \"#utility.yul\":2418:2421   */\n      0x00\n        /* \"#utility.yul\":2439:2444   */\n      dup2\n        /* \"#utility.yul\":2432:2444   */\n      swap1\n      pop\n        /* \"#utility.yul\":2390:2450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2598   */\n    tag_239:\n        /* \"#utility.yul\":2506:2515   */\n      0x00\n        /* \"#utility.yul\":2539:2592   */\n      tag_310\n        /* \"#utility.yul\":2557:2591   */\n      tag_311\n        /* \"#utility.yul\":2566:2590   */\n      tag_312\n        /* \"#utility.yul\":2584:2589   */\n      dup5\n        /* \"#utility.yul\":2566:2590   */\n      tag_228\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2557:2591   */\n      tag_238\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2539:2592   */\n      tag_228\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2526:2592   */\n      swap1\n      pop\n        /* \"#utility.yul\":2456:2598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2604:2730   */\n    tag_240:\n        /* \"#utility.yul\":2654:2663   */\n      0x00\n        /* \"#utility.yul\":2687:2724   */\n      tag_314\n        /* \"#utility.yul\":2718:2723   */\n      dup3\n        /* \"#utility.yul\":2687:2724   */\n      tag_239\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2674:2724   */\n      swap1\n      pop\n        /* \"#utility.yul\":2604:2730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2736:2875   */\n    tag_241:\n        /* \"#utility.yul\":2799:2808   */\n      0x00\n        /* \"#utility.yul\":2832:2869   */\n      tag_316\n        /* \"#utility.yul\":2863:2868   */\n      dup3\n        /* \"#utility.yul\":2832:2869   */\n      tag_240\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2819:2869   */\n      swap1\n      pop\n        /* \"#utility.yul\":2736:2875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3038   */\n    tag_242:\n        /* \"#utility.yul\":2981:3031   */\n      tag_318\n        /* \"#utility.yul\":3025:3030   */\n      dup2\n        /* \"#utility.yul\":2981:3031   */\n      tag_241\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2976:2979   */\n      dup3\n        /* \"#utility.yul\":2969:3032   */\n      mstore\n        /* \"#utility.yul\":2881:3038   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3044:3292   */\n    tag_55:\n        /* \"#utility.yul\":3150:3154   */\n      0x00\n        /* \"#utility.yul\":3188:3190   */\n      0x20\n        /* \"#utility.yul\":3177:3186   */\n      dup3\n        /* \"#utility.yul\":3173:3191   */\n      add\n        /* \"#utility.yul\":3165:3191   */\n      swap1\n      pop\n        /* \"#utility.yul\":3201:3285   */\n      tag_320\n        /* \"#utility.yul\":3282:3283   */\n      0x00\n        /* \"#utility.yul\":3271:3280   */\n      dup4\n        /* \"#utility.yul\":3267:3284   */\n      add\n        /* \"#utility.yul\":3258:3264   */\n      dup5\n        /* \"#utility.yul\":3201:3285   */\n      tag_242\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3044:3292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3298:3772   */\n    tag_101:\n        /* \"#utility.yul\":3366:3372   */\n      0x00\n        /* \"#utility.yul\":3374:3380   */\n      dup1\n        /* \"#utility.yul\":3423:3425   */\n      0x40\n        /* \"#utility.yul\":3411:3420   */\n      dup4\n        /* \"#utility.yul\":3402:3409   */\n      dup6\n        /* \"#utility.yul\":3398:3421   */\n      sub\n        /* \"#utility.yul\":3394:3426   */\n      slt\n        /* \"#utility.yul\":3391:3510   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":3429:3508   */\n      tag_323\n      tag_234\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3391:3510   */\n    tag_322:\n        /* \"#utility.yul\":3549:3550   */\n      0x00\n        /* \"#utility.yul\":3574:3627   */\n      tag_324\n        /* \"#utility.yul\":3619:3626   */\n      dup6\n        /* \"#utility.yul\":3610:3616   */\n      dup3\n        /* \"#utility.yul\":3599:3608   */\n      dup7\n        /* \"#utility.yul\":3595:3617   */\n      add\n        /* \"#utility.yul\":3574:3627   */\n      tag_237\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3564:3627   */\n      swap3\n      pop\n        /* \"#utility.yul\":3520:3637   */\n      pop\n        /* \"#utility.yul\":3676:3678   */\n      0x20\n        /* \"#utility.yul\":3702:3755   */\n      tag_325\n        /* \"#utility.yul\":3747:3754   */\n      dup6\n        /* \"#utility.yul\":3738:3744   */\n      dup3\n        /* \"#utility.yul\":3727:3736   */\n      dup7\n        /* \"#utility.yul\":3723:3745   */\n      add\n        /* \"#utility.yul\":3702:3755   */\n      tag_237\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3692:3755   */\n      swap2\n      pop\n        /* \"#utility.yul\":3647:3765   */\n      pop\n        /* \"#utility.yul\":3298:3772   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3778:3947   */\n    tag_243:\n        /* \"#utility.yul\":3862:3873   */\n      0x00\n        /* \"#utility.yul\":3896:3902   */\n      dup3\n        /* \"#utility.yul\":3891:3894   */\n      dup3\n        /* \"#utility.yul\":3884:3903   */\n      mstore\n        /* \"#utility.yul\":3936:3940   */\n      0x20\n        /* \"#utility.yul\":3931:3934   */\n      dup3\n        /* \"#utility.yul\":3927:3941   */\n      add\n        /* \"#utility.yul\":3912:3941   */\n      swap1\n      pop\n        /* \"#utility.yul\":3778:3947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3953:4173   */\n    tag_244:\n        /* \"#utility.yul\":4093:4127   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4081:4087   */\n      dup3\n        /* \"#utility.yul\":4077:4091   */\n      add\n        /* \"#utility.yul\":4070:4128   */\n      mstore\n        /* \"#utility.yul\":4162:4165   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4157:4159   */\n      0x20\n        /* \"#utility.yul\":4149:4155   */\n      dup3\n        /* \"#utility.yul\":4145:4160   */\n      add\n        /* \"#utility.yul\":4138:4166   */\n      mstore\n        /* \"#utility.yul\":3953:4173   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4179:4545   */\n    tag_245:\n        /* \"#utility.yul\":4321:4324   */\n      0x00\n        /* \"#utility.yul\":4342:4409   */\n      tag_329\n        /* \"#utility.yul\":4406:4408   */\n      0x21\n        /* \"#utility.yul\":4401:4404   */\n      dup4\n        /* \"#utility.yul\":4342:4409   */\n      tag_243\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4335:4409   */\n      swap2\n      pop\n        /* \"#utility.yul\":4418:4511   */\n      tag_330\n        /* \"#utility.yul\":4507:4510   */\n      dup3\n        /* \"#utility.yul\":4418:4511   */\n      tag_244\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4536:4538   */\n      0x40\n        /* \"#utility.yul\":4531:4534   */\n      dup3\n        /* \"#utility.yul\":4527:4539   */\n      add\n        /* \"#utility.yul\":4520:4539   */\n      swap1\n      pop\n        /* \"#utility.yul\":4179:4545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4551:4970   */\n    tag_108:\n        /* \"#utility.yul\":4717:4721   */\n      0x00\n        /* \"#utility.yul\":4755:4757   */\n      0x20\n        /* \"#utility.yul\":4744:4753   */\n      dup3\n        /* \"#utility.yul\":4740:4758   */\n      add\n        /* \"#utility.yul\":4732:4758   */\n      swap1\n      pop\n        /* \"#utility.yul\":4804:4813   */\n      dup2\n        /* \"#utility.yul\":4798:4802   */\n      dup2\n        /* \"#utility.yul\":4794:4814   */\n      sub\n        /* \"#utility.yul\":4790:4791   */\n      0x00\n        /* \"#utility.yul\":4779:4788   */\n      dup4\n        /* \"#utility.yul\":4775:4792   */\n      add\n        /* \"#utility.yul\":4768:4815   */\n      mstore\n        /* \"#utility.yul\":4832:4963   */\n      tag_332\n        /* \"#utility.yul\":4958:4962   */\n      dup2\n        /* \"#utility.yul\":4832:4963   */\n      tag_245\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4824:4963   */\n      swap1\n      pop\n        /* \"#utility.yul\":4551:4970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4976:5144   */\n    tag_246:\n        /* \"#utility.yul\":5116:5136   */\n      0x47616d65206973206e6f74206163746976650000000000000000000000000000\n        /* \"#utility.yul\":5112:5113   */\n      0x00\n        /* \"#utility.yul\":5104:5110   */\n      dup3\n        /* \"#utility.yul\":5100:5114   */\n      add\n        /* \"#utility.yul\":5093:5137   */\n      mstore\n        /* \"#utility.yul\":4976:5144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5150:5516   */\n    tag_247:\n        /* \"#utility.yul\":5292:5295   */\n      0x00\n        /* \"#utility.yul\":5313:5380   */\n      tag_335\n        /* \"#utility.yul\":5377:5379   */\n      0x12\n        /* \"#utility.yul\":5372:5375   */\n      dup4\n        /* \"#utility.yul\":5313:5380   */\n      tag_243\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5306:5380   */\n      swap2\n      pop\n        /* \"#utility.yul\":5389:5482   */\n      tag_336\n        /* \"#utility.yul\":5478:5481   */\n      dup3\n        /* \"#utility.yul\":5389:5482   */\n      tag_246\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5507:5509   */\n      0x20\n        /* \"#utility.yul\":5502:5505   */\n      dup3\n        /* \"#utility.yul\":5498:5510   */\n      add\n        /* \"#utility.yul\":5491:5510   */\n      swap1\n      pop\n        /* \"#utility.yul\":5150:5516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5522:5941   */\n    tag_119:\n        /* \"#utility.yul\":5688:5692   */\n      0x00\n        /* \"#utility.yul\":5726:5728   */\n      0x20\n        /* \"#utility.yul\":5715:5724   */\n      dup3\n        /* \"#utility.yul\":5711:5729   */\n      add\n        /* \"#utility.yul\":5703:5729   */\n      swap1\n      pop\n        /* \"#utility.yul\":5775:5784   */\n      dup2\n        /* \"#utility.yul\":5769:5773   */\n      dup2\n        /* \"#utility.yul\":5765:5785   */\n      sub\n        /* \"#utility.yul\":5761:5762   */\n      0x00\n        /* \"#utility.yul\":5750:5759   */\n      dup4\n        /* \"#utility.yul\":5746:5763   */\n      add\n        /* \"#utility.yul\":5739:5786   */\n      mstore\n        /* \"#utility.yul\":5803:5934   */\n      tag_338\n        /* \"#utility.yul\":5929:5933   */\n      dup2\n        /* \"#utility.yul\":5803:5934   */\n      tag_247\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5795:5934   */\n      swap1\n      pop\n        /* \"#utility.yul\":5522:5941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5947:6127   */\n    tag_248:\n        /* \"#utility.yul\":5995:6072   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5992:5993   */\n      0x00\n        /* \"#utility.yul\":5985:6073   */\n      mstore\n        /* \"#utility.yul\":6092:6096   */\n      0x11\n        /* \"#utility.yul\":6089:6090   */\n      0x04\n        /* \"#utility.yul\":6082:6097   */\n      mstore\n        /* \"#utility.yul\":6116:6120   */\n      0x24\n        /* \"#utility.yul\":6113:6114   */\n      0x00\n        /* \"#utility.yul\":6106:6121   */\n      revert\n        /* \"#utility.yul\":6133:6324   */\n    tag_121:\n        /* \"#utility.yul\":6173:6176   */\n      0x00\n        /* \"#utility.yul\":6192:6212   */\n      tag_341\n        /* \"#utility.yul\":6210:6211   */\n      dup3\n        /* \"#utility.yul\":6192:6212   */\n      tag_231\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6187:6212   */\n      swap2\n      pop\n        /* \"#utility.yul\":6226:6246   */\n      tag_342\n        /* \"#utility.yul\":6244:6245   */\n      dup4\n        /* \"#utility.yul\":6226:6246   */\n      tag_231\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6221:6246   */\n      swap3\n      pop\n        /* \"#utility.yul\":6269:6270   */\n      dup3\n        /* \"#utility.yul\":6266:6267   */\n      dup3\n        /* \"#utility.yul\":6262:6271   */\n      add\n        /* \"#utility.yul\":6255:6271   */\n      swap1\n      pop\n        /* \"#utility.yul\":6290:6293   */\n      dup1\n        /* \"#utility.yul\":6287:6288   */\n      dup3\n        /* \"#utility.yul\":6284:6294   */\n      gt\n        /* \"#utility.yul\":6281:6317   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":6297:6315   */\n      tag_344\n      tag_248\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6281:6317   */\n    tag_343:\n        /* \"#utility.yul\":6133:6324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6330:6502   */\n    tag_249:\n        /* \"#utility.yul\":6470:6494   */\n      0x47616d6520686173206e6f7420656e6465642079657400000000000000000000\n        /* \"#utility.yul\":6466:6467   */\n      0x00\n        /* \"#utility.yul\":6458:6464   */\n      dup3\n        /* \"#utility.yul\":6454:6468   */\n      add\n        /* \"#utility.yul\":6447:6495   */\n      mstore\n        /* \"#utility.yul\":6330:6502   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6874   */\n    tag_250:\n        /* \"#utility.yul\":6650:6653   */\n      0x00\n        /* \"#utility.yul\":6671:6738   */\n      tag_347\n        /* \"#utility.yul\":6735:6737   */\n      0x16\n        /* \"#utility.yul\":6730:6733   */\n      dup4\n        /* \"#utility.yul\":6671:6738   */\n      tag_243\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6664:6738   */\n      swap2\n      pop\n        /* \"#utility.yul\":6747:6840   */\n      tag_348\n        /* \"#utility.yul\":6836:6839   */\n      dup3\n        /* \"#utility.yul\":6747:6840   */\n      tag_249\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6865:6867   */\n      0x20\n        /* \"#utility.yul\":6860:6863   */\n      dup3\n        /* \"#utility.yul\":6856:6868   */\n      add\n        /* \"#utility.yul\":6849:6868   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6880:7299   */\n    tag_124:\n        /* \"#utility.yul\":7046:7050   */\n      0x00\n        /* \"#utility.yul\":7084:7086   */\n      0x20\n        /* \"#utility.yul\":7073:7082   */\n      dup3\n        /* \"#utility.yul\":7069:7087   */\n      add\n        /* \"#utility.yul\":7061:7087   */\n      swap1\n      pop\n        /* \"#utility.yul\":7133:7142   */\n      dup2\n        /* \"#utility.yul\":7127:7131   */\n      dup2\n        /* \"#utility.yul\":7123:7143   */\n      sub\n        /* \"#utility.yul\":7119:7120   */\n      0x00\n        /* \"#utility.yul\":7108:7117   */\n      dup4\n        /* \"#utility.yul\":7104:7121   */\n      add\n        /* \"#utility.yul\":7097:7144   */\n      mstore\n        /* \"#utility.yul\":7161:7292   */\n      tag_350\n        /* \"#utility.yul\":7287:7291   */\n      dup2\n        /* \"#utility.yul\":7161:7292   */\n      tag_250\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7153:7292   */\n      swap1\n      pop\n        /* \"#utility.yul\":6880:7299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7448   */\n    tag_251:\n        /* \"#utility.yul\":7362:7367   */\n      0x00\n        /* \"#utility.yul\":7393:7399   */\n      dup2\n        /* \"#utility.yul\":7387:7400   */\n      mload\n        /* \"#utility.yul\":7378:7400   */\n      swap1\n      pop\n        /* \"#utility.yul\":7409:7442   */\n      tag_352\n        /* \"#utility.yul\":7436:7441   */\n      dup2\n        /* \"#utility.yul\":7409:7442   */\n      tag_236\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7305:7448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7454:7805   */\n    tag_130:\n        /* \"#utility.yul\":7524:7530   */\n      0x00\n        /* \"#utility.yul\":7573:7575   */\n      0x20\n        /* \"#utility.yul\":7561:7570   */\n      dup3\n        /* \"#utility.yul\":7552:7559   */\n      dup5\n        /* \"#utility.yul\":7548:7571   */\n      sub\n        /* \"#utility.yul\":7544:7576   */\n      slt\n        /* \"#utility.yul\":7541:7660   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":7579:7658   */\n      tag_355\n      tag_234\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7541:7660   */\n    tag_354:\n        /* \"#utility.yul\":7699:7700   */\n      0x00\n        /* \"#utility.yul\":7724:7788   */\n      tag_356\n        /* \"#utility.yul\":7780:7787   */\n      dup5\n        /* \"#utility.yul\":7771:7777   */\n      dup3\n        /* \"#utility.yul\":7760:7769   */\n      dup6\n        /* \"#utility.yul\":7756:7778   */\n      add\n        /* \"#utility.yul\":7724:7788   */\n      tag_251\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7714:7788   */\n      swap2\n      pop\n        /* \"#utility.yul\":7670:7798   */\n      pop\n        /* \"#utility.yul\":7454:7805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7811:7981   */\n    tag_252:\n        /* \"#utility.yul\":7951:7973   */\n      0x47616d65206973207374696c6c20616374697665000000000000000000000000\n        /* \"#utility.yul\":7947:7948   */\n      0x00\n        /* \"#utility.yul\":7939:7945   */\n      dup3\n        /* \"#utility.yul\":7935:7949   */\n      add\n        /* \"#utility.yul\":7928:7974   */\n      mstore\n        /* \"#utility.yul\":7811:7981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7987:8353   */\n    tag_253:\n        /* \"#utility.yul\":8129:8132   */\n      0x00\n        /* \"#utility.yul\":8150:8217   */\n      tag_359\n        /* \"#utility.yul\":8214:8216   */\n      0x14\n        /* \"#utility.yul\":8209:8212   */\n      dup4\n        /* \"#utility.yul\":8150:8217   */\n      tag_243\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8143:8217   */\n      swap2\n      pop\n        /* \"#utility.yul\":8226:8319   */\n      tag_360\n        /* \"#utility.yul\":8315:8318   */\n      dup3\n        /* \"#utility.yul\":8226:8319   */\n      tag_252\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8344:8346   */\n      0x20\n        /* \"#utility.yul\":8339:8342   */\n      dup3\n        /* \"#utility.yul\":8335:8347   */\n      add\n        /* \"#utility.yul\":8328:8347   */\n      swap1\n      pop\n        /* \"#utility.yul\":7987:8353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8359:8778   */\n    tag_135:\n        /* \"#utility.yul\":8525:8529   */\n      0x00\n        /* \"#utility.yul\":8563:8565   */\n      0x20\n        /* \"#utility.yul\":8552:8561   */\n      dup3\n        /* \"#utility.yul\":8548:8566   */\n      add\n        /* \"#utility.yul\":8540:8566   */\n      swap1\n      pop\n        /* \"#utility.yul\":8612:8621   */\n      dup2\n        /* \"#utility.yul\":8606:8610   */\n      dup2\n        /* \"#utility.yul\":8602:8622   */\n      sub\n        /* \"#utility.yul\":8598:8599   */\n      0x00\n        /* \"#utility.yul\":8587:8596   */\n      dup4\n        /* \"#utility.yul\":8583:8600   */\n      add\n        /* \"#utility.yul\":8576:8623   */\n      mstore\n        /* \"#utility.yul\":8640:8771   */\n      tag_362\n        /* \"#utility.yul\":8766:8770   */\n      dup2\n        /* \"#utility.yul\":8640:8771   */\n      tag_253\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8632:8771   */\n      swap1\n      pop\n        /* \"#utility.yul\":8359:8778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8784:8962   */\n    tag_254:\n        /* \"#utility.yul\":8924:8954   */\n      0x4f6e6c792077696e6e65722063616e20636c61696d2072657761726400000000\n        /* \"#utility.yul\":8920:8921   */\n      0x00\n        /* \"#utility.yul\":8912:8918   */\n      dup3\n        /* \"#utility.yul\":8908:8922   */\n      add\n        /* \"#utility.yul\":8901:8955   */\n      mstore\n        /* \"#utility.yul\":8784:8962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8968:9334   */\n    tag_255:\n        /* \"#utility.yul\":9110:9113   */\n      0x00\n        /* \"#utility.yul\":9131:9198   */\n      tag_365\n        /* \"#utility.yul\":9195:9197   */\n      0x1c\n        /* \"#utility.yul\":9190:9193   */\n      dup4\n        /* \"#utility.yul\":9131:9198   */\n      tag_243\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9124:9198   */\n      swap2\n      pop\n        /* \"#utility.yul\":9207:9300   */\n      tag_366\n        /* \"#utility.yul\":9296:9299   */\n      dup3\n        /* \"#utility.yul\":9207:9300   */\n      tag_254\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9325:9327   */\n      0x20\n        /* \"#utility.yul\":9320:9323   */\n      dup3\n        /* \"#utility.yul\":9316:9328   */\n      add\n        /* \"#utility.yul\":9309:9328   */\n      swap1\n      pop\n        /* \"#utility.yul\":8968:9334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9759   */\n    tag_138:\n        /* \"#utility.yul\":9506:9510   */\n      0x00\n        /* \"#utility.yul\":9544:9546   */\n      0x20\n        /* \"#utility.yul\":9533:9542   */\n      dup3\n        /* \"#utility.yul\":9529:9547   */\n      add\n        /* \"#utility.yul\":9521:9547   */\n      swap1\n      pop\n        /* \"#utility.yul\":9593:9602   */\n      dup2\n        /* \"#utility.yul\":9587:9591   */\n      dup2\n        /* \"#utility.yul\":9583:9603   */\n      sub\n        /* \"#utility.yul\":9579:9580   */\n      0x00\n        /* \"#utility.yul\":9568:9577   */\n      dup4\n        /* \"#utility.yul\":9564:9581   */\n      add\n        /* \"#utility.yul\":9557:9604   */\n      mstore\n        /* \"#utility.yul\":9621:9752   */\n      tag_368\n        /* \"#utility.yul\":9747:9751   */\n      dup2\n        /* \"#utility.yul\":9621:9752   */\n      tag_255\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9613:9752   */\n      swap1\n      pop\n        /* \"#utility.yul\":9340:9759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9765:9937   */\n    tag_256:\n        /* \"#utility.yul\":9905:9929   */\n      0x52657761726420616c726561647920636c61696d656400000000000000000000\n        /* \"#utility.yul\":9901:9902   */\n      0x00\n        /* \"#utility.yul\":9893:9899   */\n      dup3\n        /* \"#utility.yul\":9889:9903   */\n      add\n        /* \"#utility.yul\":9882:9930   */\n      mstore\n        /* \"#utility.yul\":9765:9937   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9943:10309   */\n    tag_257:\n        /* \"#utility.yul\":10085:10088   */\n      0x00\n        /* \"#utility.yul\":10106:10173   */\n      tag_371\n        /* \"#utility.yul\":10170:10172   */\n      0x16\n        /* \"#utility.yul\":10165:10168   */\n      dup4\n        /* \"#utility.yul\":10106:10173   */\n      tag_243\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10099:10173   */\n      swap2\n      pop\n        /* \"#utility.yul\":10182:10275   */\n      tag_372\n        /* \"#utility.yul\":10271:10274   */\n      dup3\n        /* \"#utility.yul\":10182:10275   */\n      tag_256\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10300:10302   */\n      0x20\n        /* \"#utility.yul\":10295:10298   */\n      dup3\n        /* \"#utility.yul\":10291:10303   */\n      add\n        /* \"#utility.yul\":10284:10303   */\n      swap1\n      pop\n        /* \"#utility.yul\":9943:10309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10315:10734   */\n    tag_141:\n        /* \"#utility.yul\":10481:10485   */\n      0x00\n        /* \"#utility.yul\":10519:10521   */\n      0x20\n        /* \"#utility.yul\":10508:10517   */\n      dup3\n        /* \"#utility.yul\":10504:10522   */\n      add\n        /* \"#utility.yul\":10496:10522   */\n      swap1\n      pop\n        /* \"#utility.yul\":10568:10577   */\n      dup2\n        /* \"#utility.yul\":10562:10566   */\n      dup2\n        /* \"#utility.yul\":10558:10578   */\n      sub\n        /* \"#utility.yul\":10554:10555   */\n      0x00\n        /* \"#utility.yul\":10543:10552   */\n      dup4\n        /* \"#utility.yul\":10539:10556   */\n      add\n        /* \"#utility.yul\":10532:10579   */\n      mstore\n        /* \"#utility.yul\":10596:10727   */\n      tag_374\n        /* \"#utility.yul\":10722:10726   */\n      dup2\n        /* \"#utility.yul\":10596:10727   */\n      tag_257\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10588:10727   */\n      swap1\n      pop\n        /* \"#utility.yul\":10315:10734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10740:10918   */\n    tag_258:\n        /* \"#utility.yul\":10880:10910   */\n      0x43757272656e742067616d65206973207374696c6c2061637469766500000000\n        /* \"#utility.yul\":10876:10877   */\n      0x00\n        /* \"#utility.yul\":10868:10874   */\n      dup3\n        /* \"#utility.yul\":10864:10878   */\n      add\n        /* \"#utility.yul\":10857:10911   */\n      mstore\n        /* \"#utility.yul\":10740:10918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10924:11290   */\n    tag_259:\n        /* \"#utility.yul\":11066:11069   */\n      0x00\n        /* \"#utility.yul\":11087:11154   */\n      tag_377\n        /* \"#utility.yul\":11151:11153   */\n      0x1c\n        /* \"#utility.yul\":11146:11149   */\n      dup4\n        /* \"#utility.yul\":11087:11154   */\n      tag_243\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11080:11154   */\n      swap2\n      pop\n        /* \"#utility.yul\":11163:11256   */\n      tag_378\n        /* \"#utility.yul\":11252:11255   */\n      dup3\n        /* \"#utility.yul\":11163:11256   */\n      tag_258\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11281:11283   */\n      0x20\n        /* \"#utility.yul\":11276:11279   */\n      dup3\n        /* \"#utility.yul\":11272:11284   */\n      add\n        /* \"#utility.yul\":11265:11284   */\n      swap1\n      pop\n        /* \"#utility.yul\":10924:11290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11296:11715   */\n    tag_159:\n        /* \"#utility.yul\":11462:11466   */\n      0x00\n        /* \"#utility.yul\":11500:11502   */\n      0x20\n        /* \"#utility.yul\":11489:11498   */\n      dup3\n        /* \"#utility.yul\":11485:11503   */\n      add\n        /* \"#utility.yul\":11477:11503   */\n      swap1\n      pop\n        /* \"#utility.yul\":11549:11558   */\n      dup2\n        /* \"#utility.yul\":11543:11547   */\n      dup2\n        /* \"#utility.yul\":11539:11559   */\n      sub\n        /* \"#utility.yul\":11535:11536   */\n      0x00\n        /* \"#utility.yul\":11524:11533   */\n      dup4\n        /* \"#utility.yul\":11520:11537   */\n      add\n        /* \"#utility.yul\":11513:11560   */\n      mstore\n        /* \"#utility.yul\":11577:11708   */\n      tag_380\n        /* \"#utility.yul\":11703:11707   */\n      dup2\n        /* \"#utility.yul\":11577:11708   */\n      tag_259\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":11569:11708   */\n      swap1\n      pop\n        /* \"#utility.yul\":11296:11715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11721:11897   */\n    tag_260:\n        /* \"#utility.yul\":11861:11889   */\n      0x496e73756666696369656e7420746f6b656e2062616c616e6365000000000000\n        /* \"#utility.yul\":11857:11858   */\n      0x00\n        /* \"#utility.yul\":11849:11855   */\n      dup3\n        /* \"#utility.yul\":11845:11859   */\n      add\n        /* \"#utility.yul\":11838:11890   */\n      mstore\n        /* \"#utility.yul\":11721:11897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11903:12269   */\n    tag_261:\n        /* \"#utility.yul\":12045:12048   */\n      0x00\n        /* \"#utility.yul\":12066:12133   */\n      tag_383\n        /* \"#utility.yul\":12130:12132   */\n      0x1a\n        /* \"#utility.yul\":12125:12128   */\n      dup4\n        /* \"#utility.yul\":12066:12133   */\n      tag_243\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12059:12133   */\n      swap2\n      pop\n        /* \"#utility.yul\":12142:12235   */\n      tag_384\n        /* \"#utility.yul\":12231:12234   */\n      dup3\n        /* \"#utility.yul\":12142:12235   */\n      tag_260\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12260:12262   */\n      0x20\n        /* \"#utility.yul\":12255:12258   */\n      dup3\n        /* \"#utility.yul\":12251:12263   */\n      add\n        /* \"#utility.yul\":12244:12263   */\n      swap1\n      pop\n        /* \"#utility.yul\":11903:12269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12275:12694   */\n    tag_166:\n        /* \"#utility.yul\":12441:12445   */\n      0x00\n        /* \"#utility.yul\":12479:12481   */\n      0x20\n        /* \"#utility.yul\":12468:12477   */\n      dup3\n        /* \"#utility.yul\":12464:12482   */\n      add\n        /* \"#utility.yul\":12456:12482   */\n      swap1\n      pop\n        /* \"#utility.yul\":12528:12537   */\n      dup2\n        /* \"#utility.yul\":12522:12526   */\n      dup2\n        /* \"#utility.yul\":12518:12538   */\n      sub\n        /* \"#utility.yul\":12514:12515   */\n      0x00\n        /* \"#utility.yul\":12503:12512   */\n      dup4\n        /* \"#utility.yul\":12499:12516   */\n      add\n        /* \"#utility.yul\":12492:12539   */\n      mstore\n        /* \"#utility.yul\":12556:12687   */\n      tag_386\n        /* \"#utility.yul\":12682:12686   */\n      dup2\n        /* \"#utility.yul\":12556:12687   */\n      tag_261\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12548:12687   */\n      swap1\n      pop\n        /* \"#utility.yul\":12275:12694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12700:12877   */\n    tag_262:\n        /* \"#utility.yul\":12840:12869   */\n      0x50726576696f757320726577617264206e6f7420636c61696d65640000000000\n        /* \"#utility.yul\":12836:12837   */\n      0x00\n        /* \"#utility.yul\":12828:12834   */\n      dup3\n        /* \"#utility.yul\":12824:12838   */\n      add\n        /* \"#utility.yul\":12817:12870   */\n      mstore\n        /* \"#utility.yul\":12700:12877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12883:13249   */\n    tag_263:\n        /* \"#utility.yul\":13025:13028   */\n      0x00\n        /* \"#utility.yul\":13046:13113   */\n      tag_389\n        /* \"#utility.yul\":13110:13112   */\n      0x1b\n        /* \"#utility.yul\":13105:13108   */\n      dup4\n        /* \"#utility.yul\":13046:13113   */\n      tag_243\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13039:13113   */\n      swap2\n      pop\n        /* \"#utility.yul\":13122:13215   */\n      tag_390\n        /* \"#utility.yul\":13211:13214   */\n      dup3\n        /* \"#utility.yul\":13122:13215   */\n      tag_262\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13240:13242   */\n      0x20\n        /* \"#utility.yul\":13235:13238   */\n      dup3\n        /* \"#utility.yul\":13231:13243   */\n      add\n        /* \"#utility.yul\":13224:13243   */\n      swap1\n      pop\n        /* \"#utility.yul\":12883:13249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13255:13674   */\n    tag_170:\n        /* \"#utility.yul\":13421:13425   */\n      0x00\n        /* \"#utility.yul\":13459:13461   */\n      0x20\n        /* \"#utility.yul\":13448:13457   */\n      dup3\n        /* \"#utility.yul\":13444:13462   */\n      add\n        /* \"#utility.yul\":13436:13462   */\n      swap1\n      pop\n        /* \"#utility.yul\":13508:13517   */\n      dup2\n        /* \"#utility.yul\":13502:13506   */\n      dup2\n        /* \"#utility.yul\":13498:13518   */\n      sub\n        /* \"#utility.yul\":13494:13495   */\n      0x00\n        /* \"#utility.yul\":13483:13492   */\n      dup4\n        /* \"#utility.yul\":13479:13496   */\n      add\n        /* \"#utility.yul\":13472:13519   */\n      mstore\n        /* \"#utility.yul\":13536:13667   */\n      tag_392\n        /* \"#utility.yul\":13662:13666   */\n      dup2\n        /* \"#utility.yul\":13536:13667   */\n      tag_263\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13528:13667   */\n      swap1\n      pop\n        /* \"#utility.yul\":13255:13674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13680:13913   */\n    tag_172:\n        /* \"#utility.yul\":13719:13722   */\n      0x00\n        /* \"#utility.yul\":13742:13766   */\n      tag_394\n        /* \"#utility.yul\":13760:13765   */\n      dup3\n        /* \"#utility.yul\":13742:13766   */\n      tag_231\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13733:13766   */\n      swap2\n      pop\n        /* \"#utility.yul\":13788:13854   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13781:13786   */\n      dup3\n        /* \"#utility.yul\":13778:13855   */\n      sub\n        /* \"#utility.yul\":13775:13878   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":13858:13876   */\n      tag_396\n      tag_248\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13775:13878   */\n    tag_395:\n        /* \"#utility.yul\":13905:13906   */\n      0x01\n        /* \"#utility.yul\":13898:13903   */\n      dup3\n        /* \"#utility.yul\":13894:13907   */\n      add\n        /* \"#utility.yul\":13887:13907   */\n      swap1\n      pop\n        /* \"#utility.yul\":13680:13913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13919:14083   */\n    tag_264:\n        /* \"#utility.yul\":14059:14075   */\n      0x47616d652068617320656e646564000000000000000000000000000000000000\n        /* \"#utility.yul\":14055:14056   */\n      0x00\n        /* \"#utility.yul\":14047:14053   */\n      dup3\n        /* \"#utility.yul\":14043:14057   */\n      add\n        /* \"#utility.yul\":14036:14076   */\n      mstore\n        /* \"#utility.yul\":13919:14083   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14089:14455   */\n    tag_265:\n        /* \"#utility.yul\":14231:14234   */\n      0x00\n        /* \"#utility.yul\":14252:14319   */\n      tag_399\n        /* \"#utility.yul\":14316:14318   */\n      0x0e\n        /* \"#utility.yul\":14311:14314   */\n      dup4\n        /* \"#utility.yul\":14252:14319   */\n      tag_243\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":14245:14319   */\n      swap2\n      pop\n        /* \"#utility.yul\":14328:14421   */\n      tag_400\n        /* \"#utility.yul\":14417:14420   */\n      dup3\n        /* \"#utility.yul\":14328:14421   */\n      tag_264\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14446:14448   */\n      0x20\n        /* \"#utility.yul\":14441:14444   */\n      dup3\n        /* \"#utility.yul\":14437:14449   */\n      add\n        /* \"#utility.yul\":14430:14449   */\n      swap1\n      pop\n        /* \"#utility.yul\":14089:14455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14461:14880   */\n    tag_180:\n        /* \"#utility.yul\":14627:14631   */\n      0x00\n        /* \"#utility.yul\":14665:14667   */\n      0x20\n        /* \"#utility.yul\":14654:14663   */\n      dup3\n        /* \"#utility.yul\":14650:14668   */\n      add\n        /* \"#utility.yul\":14642:14668   */\n      swap1\n      pop\n        /* \"#utility.yul\":14714:14723   */\n      dup2\n        /* \"#utility.yul\":14708:14712   */\n      dup2\n        /* \"#utility.yul\":14704:14724   */\n      sub\n        /* \"#utility.yul\":14700:14701   */\n      0x00\n        /* \"#utility.yul\":14689:14698   */\n      dup4\n        /* \"#utility.yul\":14685:14702   */\n      add\n        /* \"#utility.yul\":14678:14725   */\n      mstore\n        /* \"#utility.yul\":14742:14873   */\n      tag_402\n        /* \"#utility.yul\":14868:14872   */\n      dup2\n        /* \"#utility.yul\":14742:14873   */\n      tag_265\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":14734:14873   */\n      swap1\n      pop\n        /* \"#utility.yul\":14461:14880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14886:14980   */\n    tag_266:\n        /* \"#utility.yul\":14919:14927   */\n      0x00\n        /* \"#utility.yul\":14967:14972   */\n      dup2\n        /* \"#utility.yul\":14963:14965   */\n      0x60\n        /* \"#utility.yul\":14959:14973   */\n      shl\n        /* \"#utility.yul\":14938:14973   */\n      swap1\n      pop\n        /* \"#utility.yul\":14886:14980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14986:15080   */\n    tag_267:\n        /* \"#utility.yul\":15025:15032   */\n      0x00\n        /* \"#utility.yul\":15054:15074   */\n      tag_405\n        /* \"#utility.yul\":15068:15073   */\n      dup3\n        /* \"#utility.yul\":15054:15074   */\n      tag_266\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15043:15074   */\n      swap1\n      pop\n        /* \"#utility.yul\":14986:15080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15086:15186   */\n    tag_268:\n        /* \"#utility.yul\":15125:15132   */\n      0x00\n        /* \"#utility.yul\":15154:15180   */\n      tag_407\n        /* \"#utility.yul\":15174:15179   */\n      dup3\n        /* \"#utility.yul\":15154:15180   */\n      tag_267\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":15143:15180   */\n      swap1\n      pop\n        /* \"#utility.yul\":15086:15186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15192:15349   */\n    tag_269:\n        /* \"#utility.yul\":15297:15342   */\n      tag_409\n        /* \"#utility.yul\":15317:15341   */\n      tag_410\n        /* \"#utility.yul\":15335:15340   */\n      dup3\n        /* \"#utility.yul\":15317:15341   */\n      tag_229\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":15297:15342   */\n      tag_268\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":15292:15295   */\n      dup3\n        /* \"#utility.yul\":15285:15343   */\n      mstore\n        /* \"#utility.yul\":15192:15349   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15355:15434   */\n    tag_270:\n        /* \"#utility.yul\":15394:15401   */\n      0x00\n        /* \"#utility.yul\":15423:15428   */\n      dup2\n        /* \"#utility.yul\":15412:15428   */\n      swap1\n      pop\n        /* \"#utility.yul\":15355:15434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15440:15597   */\n    tag_271:\n        /* \"#utility.yul\":15545:15590   */\n      tag_413\n        /* \"#utility.yul\":15565:15589   */\n      tag_414\n        /* \"#utility.yul\":15583:15588   */\n      dup3\n        /* \"#utility.yul\":15565:15589   */\n      tag_231\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":15545:15590   */\n      tag_270\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":15540:15543   */\n      dup3\n        /* \"#utility.yul\":15533:15591   */\n      mstore\n        /* \"#utility.yul\":15440:15597   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15603:16000   */\n    tag_182:\n        /* \"#utility.yul\":15743:15746   */\n      0x00\n        /* \"#utility.yul\":15758:15833   */\n      tag_416\n        /* \"#utility.yul\":15829:15832   */\n      dup3\n        /* \"#utility.yul\":15820:15826   */\n      dup6\n        /* \"#utility.yul\":15758:15833   */\n      tag_269\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":15858:15860   */\n      0x14\n        /* \"#utility.yul\":15853:15856   */\n      dup3\n        /* \"#utility.yul\":15849:15861   */\n      add\n        /* \"#utility.yul\":15842:15861   */\n      swap2\n      pop\n        /* \"#utility.yul\":15871:15946   */\n      tag_417\n        /* \"#utility.yul\":15942:15945   */\n      dup3\n        /* \"#utility.yul\":15933:15939   */\n      dup5\n        /* \"#utility.yul\":15871:15946   */\n      tag_271\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":15971:15973   */\n      0x20\n        /* \"#utility.yul\":15966:15969   */\n      dup3\n        /* \"#utility.yul\":15962:15974   */\n      add\n        /* \"#utility.yul\":15955:15974   */\n      swap2\n      pop\n        /* \"#utility.yul\":15991:15994   */\n      dup2\n        /* \"#utility.yul\":15984:15994   */\n      swap1\n      pop\n        /* \"#utility.yul\":15603:16000   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16006:16338   */\n    tag_188:\n        /* \"#utility.yul\":16127:16131   */\n      0x00\n        /* \"#utility.yul\":16165:16167   */\n      0x40\n        /* \"#utility.yul\":16154:16163   */\n      dup3\n        /* \"#utility.yul\":16150:16168   */\n      add\n        /* \"#utility.yul\":16142:16168   */\n      swap1\n      pop\n        /* \"#utility.yul\":16178:16249   */\n      tag_419\n        /* \"#utility.yul\":16246:16247   */\n      0x00\n        /* \"#utility.yul\":16235:16244   */\n      dup4\n        /* \"#utility.yul\":16231:16248   */\n      add\n        /* \"#utility.yul\":16222:16228   */\n      dup6\n        /* \"#utility.yul\":16178:16249   */\n      tag_230\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16259:16331   */\n      tag_420\n        /* \"#utility.yul\":16327:16329   */\n      0x20\n        /* \"#utility.yul\":16316:16325   */\n      dup4\n        /* \"#utility.yul\":16312:16330   */\n      add\n        /* \"#utility.yul\":16303:16309   */\n      dup5\n        /* \"#utility.yul\":16259:16331   */\n      tag_232\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16006:16338   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16344:16786   */\n    tag_193:\n        /* \"#utility.yul\":16493:16497   */\n      0x00\n        /* \"#utility.yul\":16531:16533   */\n      0x60\n        /* \"#utility.yul\":16520:16529   */\n      dup3\n        /* \"#utility.yul\":16516:16534   */\n      add\n        /* \"#utility.yul\":16508:16534   */\n      swap1\n      pop\n        /* \"#utility.yul\":16544:16615   */\n      tag_422\n        /* \"#utility.yul\":16612:16613   */\n      0x00\n        /* \"#utility.yul\":16601:16610   */\n      dup4\n        /* \"#utility.yul\":16597:16614   */\n      add\n        /* \"#utility.yul\":16588:16594   */\n      dup7\n        /* \"#utility.yul\":16544:16615   */\n      tag_230\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":16625:16697   */\n      tag_423\n        /* \"#utility.yul\":16693:16695   */\n      0x20\n        /* \"#utility.yul\":16682:16691   */\n      dup4\n        /* \"#utility.yul\":16678:16696   */\n      add\n        /* \"#utility.yul\":16669:16675   */\n      dup6\n        /* \"#utility.yul\":16625:16697   */\n      tag_230\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":16707:16779   */\n      tag_424\n        /* \"#utility.yul\":16775:16777   */\n      0x40\n        /* \"#utility.yul\":16764:16773   */\n      dup4\n        /* \"#utility.yul\":16760:16778   */\n      add\n        /* \"#utility.yul\":16751:16757   */\n      dup5\n        /* \"#utility.yul\":16707:16779   */\n      tag_232\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":16344:16786   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16792:16908   */\n    tag_272:\n        /* \"#utility.yul\":16862:16883   */\n      tag_426\n        /* \"#utility.yul\":16877:16882   */\n      dup2\n        /* \"#utility.yul\":16862:16883   */\n      tag_226\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":16855:16860   */\n      dup2\n        /* \"#utility.yul\":16852:16884   */\n      eq\n        /* \"#utility.yul\":16842:16902   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":16898:16899   */\n      0x00\n        /* \"#utility.yul\":16895:16896   */\n      dup1\n        /* \"#utility.yul\":16888:16900   */\n      revert\n        /* \"#utility.yul\":16842:16902   */\n    tag_427:\n        /* \"#utility.yul\":16792:16908   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16914:17051   */\n    tag_273:\n        /* \"#utility.yul\":16968:16973   */\n      0x00\n        /* \"#utility.yul\":16999:17005   */\n      dup2\n        /* \"#utility.yul\":16993:17006   */\n      mload\n        /* \"#utility.yul\":16984:17006   */\n      swap1\n      pop\n        /* \"#utility.yul\":17015:17045   */\n      tag_429\n        /* \"#utility.yul\":17039:17044   */\n      dup2\n        /* \"#utility.yul\":17015:17045   */\n      tag_272\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":16914:17051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17057:17402   */\n    tag_199:\n        /* \"#utility.yul\":17124:17130   */\n      0x00\n        /* \"#utility.yul\":17173:17175   */\n      0x20\n        /* \"#utility.yul\":17161:17170   */\n      dup3\n        /* \"#utility.yul\":17152:17159   */\n      dup5\n        /* \"#utility.yul\":17148:17171   */\n      sub\n        /* \"#utility.yul\":17144:17176   */\n      slt\n        /* \"#utility.yul\":17141:17260   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":17179:17258   */\n      tag_432\n      tag_234\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":17141:17260   */\n    tag_431:\n        /* \"#utility.yul\":17299:17300   */\n      0x00\n        /* \"#utility.yul\":17324:17385   */\n      tag_433\n        /* \"#utility.yul\":17377:17384   */\n      dup5\n        /* \"#utility.yul\":17368:17374   */\n      dup3\n        /* \"#utility.yul\":17357:17366   */\n      dup6\n        /* \"#utility.yul\":17353:17375   */\n      add\n        /* \"#utility.yul\":17324:17385   */\n      tag_273\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":17314:17385   */\n      swap2\n      pop\n        /* \"#utility.yul\":17270:17395   */\n      pop\n        /* \"#utility.yul\":17057:17402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17408:17506   */\n    tag_274:\n        /* \"#utility.yul\":17459:17465   */\n      0x00\n        /* \"#utility.yul\":17493:17498   */\n      dup2\n        /* \"#utility.yul\":17487:17499   */\n      mload\n        /* \"#utility.yul\":17477:17499   */\n      swap1\n      pop\n        /* \"#utility.yul\":17408:17506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17512:17659   */\n    tag_275:\n        /* \"#utility.yul\":17613:17624   */\n      0x00\n        /* \"#utility.yul\":17650:17653   */\n      dup2\n        /* \"#utility.yul\":17635:17653   */\n      swap1\n      pop\n        /* \"#utility.yul\":17512:17659   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17665:17804   */\n    tag_276:\n        /* \"#utility.yul\":17754:17760   */\n      dup3\n        /* \"#utility.yul\":17749:17752   */\n      dup2\n        /* \"#utility.yul\":17744:17747   */\n      dup4\n        /* \"#utility.yul\":17738:17761   */\n      mcopy\n        /* \"#utility.yul\":17795:17796   */\n      0x00\n        /* \"#utility.yul\":17786:17792   */\n      dup4\n        /* \"#utility.yul\":17781:17784   */\n      dup4\n        /* \"#utility.yul\":17777:17793   */\n      add\n        /* \"#utility.yul\":17770:17797   */\n      mstore\n        /* \"#utility.yul\":17665:17804   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17810:18196   */\n    tag_277:\n        /* \"#utility.yul\":17914:17917   */\n      0x00\n        /* \"#utility.yul\":17942:17980   */\n      tag_438\n        /* \"#utility.yul\":17974:17979   */\n      dup3\n        /* \"#utility.yul\":17942:17980   */\n      tag_274\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":17996:18084   */\n      tag_439\n        /* \"#utility.yul\":18077:18083   */\n      dup2\n        /* \"#utility.yul\":18072:18075   */\n      dup6\n        /* \"#utility.yul\":17996:18084   */\n      tag_275\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":17989:18084   */\n      swap4\n      pop\n        /* \"#utility.yul\":18093:18158   */\n      tag_440\n        /* \"#utility.yul\":18151:18157   */\n      dup2\n        /* \"#utility.yul\":18146:18149   */\n      dup6\n        /* \"#utility.yul\":18139:18143   */\n      0x20\n        /* \"#utility.yul\":18132:18137   */\n      dup7\n        /* \"#utility.yul\":18128:18144   */\n      add\n        /* \"#utility.yul\":18093:18158   */\n      tag_276\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":18183:18189   */\n      dup1\n        /* \"#utility.yul\":18178:18181   */\n      dup5\n        /* \"#utility.yul\":18174:18190   */\n      add\n        /* \"#utility.yul\":18167:18190   */\n      swap2\n      pop\n        /* \"#utility.yul\":17918:18196   */\n      pop\n        /* \"#utility.yul\":17810:18196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18202:18473   */\n    tag_209:\n        /* \"#utility.yul\":18332:18335   */\n      0x00\n        /* \"#utility.yul\":18354:18447   */\n      tag_442\n        /* \"#utility.yul\":18443:18446   */\n      dup3\n        /* \"#utility.yul\":18434:18440   */\n      dup5\n        /* \"#utility.yul\":18354:18447   */\n      tag_277\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":18347:18447   */\n      swap2\n      pop\n        /* \"#utility.yul\":18464:18467   */\n      dup2\n        /* \"#utility.yul\":18457:18467   */\n      swap1\n      pop\n        /* \"#utility.yul\":18202:18473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f6082913535f43b89bf9aebdea207fb259858c7488315dd82f1ad6880e9f0b2b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_725": {
									"entryPoint": null,
									"id": 725,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:5",
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611cfb380380611cfb83398181016040528101906100319190610115565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e4826100bb565b9050919050565b6100f4816100da565b81146100fe575f80fd5b50565b5f8151905061010f816100eb565b92915050565b5f6020828403121561012a576101296100b7565b5b5f61013784828501610101565b91505092915050565b611bae8061014d5f395ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063aa9bbc0c116100c1578063dfbf53ae1161007a578063dfbf53ae1461034a578063e1f0c37614610368578063efc2937214610386578063f020044f146103a4578063f30d9470146103c2578063fd636322146103de57610156565b8063aa9bbc0c146102ac578063b88a802f146102ca578063b97dd9e2146102d4578063c010ce68146102f2578063d94504b914610310578063dd49756e1461032e57610156565b806356bf87411161011357806356bf87411461020c57806358830d6c1461022a5780636cbc2ded146102485780636f9fb98a146102525780638da5cb5b146102705780638e7ea5b21461028e57610156565b806301b62b781461015a5780630d7d559914610178578063228cb73314610196578063315a095d146101b45780633804c73d146101d05780633d18b912146101ee575b5f80fd5b6101626103e8565b60405161016f91906112f6565b60405180910390f35b6101806103fa565b60405161018d919061134e565b60405180910390f35b61019e61041f565b6040516101ab919061137f565b60405180910390f35b6101ce60048036038101906101c991906113c6565b610425565b005b6101d8610502565b6040516101e5919061137f565b60405180910390f35b6101f6610508565b604051610203919061137f565b60405180910390f35b610214610511565b604051610221919061144c565b60405180910390f35b610232610537565b60405161023f919061137f565b60405180910390f35b61025061053d565b005b61025a6106e7565b604051610267919061137f565b60405180910390f35b610278610787565b604051610285919061134e565b60405180910390f35b6102966107aa565b6040516102a3919061134e565b60405180910390f35b6102b46107d3565b6040516102c1919061137f565b60405180910390f35b6102d26107d9565b005b6102dc610994565b6040516102e9919061137f565b60405180910390f35b6102fa61099d565b60405161030791906112f6565b60405180910390f35b6103186109b2565b604051610325919061137f565b60405180910390f35b610348600480360381019061034391906113c6565b6109bb565b005b610352610a9a565b60405161035f919061134e565b60405180910390f35b610370610ac0565b60405161037d919061137f565b60405180910390f35b61038e610ac6565b60405161039b919061134e565b60405180910390f35b6103ac610aee565b6040516103b991906112f6565b60405180910390f35b6103dc60048036038101906103d79190611465565b610b00565b005b6103e6610e1c565b005b60085f9054906101000a900460ff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a990611523565b60405180910390fd5b6104ff3382600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f979092919063ffffffff16565b50565b60025481565b5f600754905090565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c190611523565b60405180910390fd5b60065f9054906101000a900460ff16610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f9061158b565b60405180910390fd5b60035460025461062891906115d6565b43101561066a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066190611653565b60405180910390fd5b5f60065f6101000a81548160ff02191690831515021790555060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610743919061134e565b602060405180830381865afa15801561075e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107829190611685565b905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b60065f9054906101000a900460ff1615610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f906116fa565b60405180910390fd5b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af90611762565b60405180910390fd5b60085f9054906101000a900460ff1615610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe906117ca565b60405180910390fd5b600160085f6101000a81548160ff021916908315150217905550610992600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600754600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f979092919063ffffffff16565b565b5f600154905090565b5f60085f9054906101000a900460ff16905090565b5f600554905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90611523565b60405180910390fd5b610a97333083600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611016909392919063ffffffff16565b50565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b5f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065f9054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8490611523565b60405180910390fd5b60065f9054906101000a900460ff1615610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd390611832565b60405180910390fd5b80600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c38919061134e565b602060405180830381865afa158015610c53573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c779190611685565b1015610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf9061189a565b60405180910390fd5b5f6001541115610d115760085f9054906101000a900460ff16610d10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0790611902565b60405180910390fd5b5b60015f815480929190610d2390611920565b919050555043600281905550816003819055505f60045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600581905550600160065f6101000a81548160ff0219169083151502179055505f600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806007819055505f60085f6101000a81548160ff0219169083151502179055505050565b60065f9054906101000a900460ff16610e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e619061158b565b60405180910390fd5b600354600254610e7a91906115d6565b4310610ebb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb2906119b1565b60405180910390fd5b5f33600154604051602001610ed1929190611a34565b604051602081830303815290604052805190602001205f1c90505f73ffffffffffffffffffffffffffffffffffffffff1660045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f47575060055481105b15610f94573360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055505b50565b611011838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610fca929190611a5f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611098565b505050565b611092848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161104b93929190611a86565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611098565b50505050565b5f6110c2828473ffffffffffffffffffffffffffffffffffffffff1661112d90919063ffffffff16565b90505f8151141580156110e65750808060200190518101906110e49190611ae5565b155b1561112857826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161111f919061134e565b60405180910390fd5b505050565b606061113a83835f611142565b905092915050565b60608147101561118957306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611180919061134e565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516111b19190611b62565b5f6040518083038185875af1925050503d805f81146111eb576040519150601f19603f3d011682016040523d82523d5f602084013e6111f0565b606091505b509150915061120086838361120b565b925050509392505050565b6060826112205761121b82611298565b611290565b5f825114801561124657505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561128857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161127f919061134e565b60405180910390fd5b819050611291565b5b9392505050565b5f815111156112aa5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8115159050919050565b6112f0816112dc565b82525050565b5f6020820190506113095f8301846112e7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113388261130f565b9050919050565b6113488161132e565b82525050565b5f6020820190506113615f83018461133f565b92915050565b5f819050919050565b61137981611367565b82525050565b5f6020820190506113925f830184611370565b92915050565b5f80fd5b6113a581611367565b81146113af575f80fd5b50565b5f813590506113c08161139c565b92915050565b5f602082840312156113db576113da611398565b5b5f6113e8848285016113b2565b91505092915050565b5f819050919050565b5f61141461140f61140a8461130f565b6113f1565b61130f565b9050919050565b5f611425826113fa565b9050919050565b5f6114368261141b565b9050919050565b6114468161142c565b82525050565b5f60208201905061145f5f83018461143d565b92915050565b5f806040838503121561147b5761147a611398565b5b5f611488858286016113b2565b9250506020611499858286016113b2565b9150509250929050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61150d6021836114a3565b9150611518826114b3565b604082019050919050565b5f6020820190508181035f83015261153a81611501565b9050919050565b7f47616d65206973206e6f742061637469766500000000000000000000000000005f82015250565b5f6115756012836114a3565b915061158082611541565b602082019050919050565b5f6020820190508181035f8301526115a281611569565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e082611367565b91506115eb83611367565b9250828201905080821115611603576116026115a9565b5b92915050565b7f47616d6520686173206e6f7420656e64656420796574000000000000000000005f82015250565b5f61163d6016836114a3565b915061164882611609565b602082019050919050565b5f6020820190508181035f83015261166a81611631565b9050919050565b5f8151905061167f8161139c565b92915050565b5f6020828403121561169a57611699611398565b5b5f6116a784828501611671565b91505092915050565b7f47616d65206973207374696c6c206163746976650000000000000000000000005f82015250565b5f6116e46014836114a3565b91506116ef826116b0565b602082019050919050565b5f6020820190508181035f830152611711816116d8565b9050919050565b7f4f6e6c792077696e6e65722063616e20636c61696d20726577617264000000005f82015250565b5f61174c601c836114a3565b915061175782611718565b602082019050919050565b5f6020820190508181035f83015261177981611740565b9050919050565b7f52657761726420616c726561647920636c61696d6564000000000000000000005f82015250565b5f6117b46016836114a3565b91506117bf82611780565b602082019050919050565b5f6020820190508181035f8301526117e1816117a8565b9050919050565b7f43757272656e742067616d65206973207374696c6c20616374697665000000005f82015250565b5f61181c601c836114a3565b9150611827826117e8565b602082019050919050565b5f6020820190508181035f83015261184981611810565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e63650000000000005f82015250565b5f611884601a836114a3565b915061188f82611850565b602082019050919050565b5f6020820190508181035f8301526118b181611878565b9050919050565b7f50726576696f757320726577617264206e6f7420636c61696d656400000000005f82015250565b5f6118ec601b836114a3565b91506118f7826118b8565b602082019050919050565b5f6020820190508181035f830152611919816118e0565b9050919050565b5f61192a82611367565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361195c5761195b6115a9565b5b600182019050919050565b7f47616d652068617320656e6465640000000000000000000000000000000000005f82015250565b5f61199b600e836114a3565b91506119a682611967565b602082019050919050565b5f6020820190508181035f8301526119c88161198f565b9050919050565b5f8160601b9050919050565b5f6119e5826119cf565b9050919050565b5f6119f6826119db565b9050919050565b611a0e611a098261132e565b6119ec565b82525050565b5f819050919050565b611a2e611a2982611367565b611a14565b82525050565b5f611a3f82856119fd565b601482019150611a4f8284611a1d565b6020820191508190509392505050565b5f604082019050611a725f83018561133f565b611a7f6020830184611370565b9392505050565b5f606082019050611a995f83018661133f565b611aa6602083018561133f565b611ab36040830184611370565b949350505050565b611ac4816112dc565b8114611ace575f80fd5b50565b5f81519050611adf81611abb565b92915050565b5f60208284031215611afa57611af9611398565b5b5f611b0784828501611ad1565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f611b3c82611b10565b611b468185611b1a565b9350611b56818560208601611b24565b80840191505092915050565b5f611b6d8284611b32565b91508190509291505056fea2646970667358221220f6082913535f43b89bf9aebdea207fb259858c7488315dd82f1ad6880e9f0b2b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1CFB CODESIZE SUB DUP1 PUSH2 0x1CFB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x140 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4 DUP3 PUSH2 0xBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0xDA JUMP JUMPDEST DUP2 EQ PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10F DUP2 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A JUMPI PUSH2 0x129 PUSH2 0xB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x137 DUP5 DUP3 DUP6 ADD PUSH2 0x101 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BAE DUP1 PUSH2 0x14D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA9BBC0C GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xDFBF53AE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xE1F0C376 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xEFC29372 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xF020044F EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xF30D9470 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xFD636322 EQ PUSH2 0x3DE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0xAA9BBC0C EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xB97DD9E2 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC010CE68 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xD94504B9 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x32E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x56BF8741 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x56BF8741 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x58830D6C EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x6CBC2DED EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x28E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x1B62B78 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xD7D5599 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x228CB733 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3804C73D EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x53D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH2 0x7D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E6 PUSH2 0xE1C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A9 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FF CALLER DUP3 PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF97 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C1 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x661 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x782 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81F SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x992 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF97 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA97 CALLER ADDRESS DUP4 PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1016 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB84 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD3 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST LT ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 SLOAD GT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD23 SWAP1 PUSH2 0x1920 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP NUMBER PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE61 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0xE7A SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST NUMBER LT PUSH2 0xEBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF47 JUMPI POP PUSH1 0x5 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0xF94 JUMPI CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1011 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xFCA SWAP3 SWAP2 SWAP1 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1098 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1092 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x104B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1098 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10C2 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1128 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x113A DUP4 DUP4 PUSH0 PUSH2 0x1142 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1189 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x11EB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1200 DUP7 DUP4 DUP4 PUSH2 0x120B JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1220 JUMPI PUSH2 0x121B DUP3 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1246 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1288 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127F SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1291 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x12AA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F0 DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1309 PUSH0 DUP4 ADD DUP5 PUSH2 0x12E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1338 DUP3 PUSH2 0x130F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1348 DUP2 PUSH2 0x132E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1361 PUSH0 DUP4 ADD DUP5 PUSH2 0x133F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1379 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1392 PUSH0 DUP4 ADD DUP5 PUSH2 0x1370 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13A5 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP2 EQ PUSH2 0x13AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C0 DUP2 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DB JUMPI PUSH2 0x13DA PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E8 DUP5 DUP3 DUP6 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1414 PUSH2 0x140F PUSH2 0x140A DUP5 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x13F1 JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1425 DUP3 PUSH2 0x13FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1436 DUP3 PUSH2 0x141B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1446 DUP2 PUSH2 0x142C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145F PUSH0 DUP4 ADD DUP5 PUSH2 0x143D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH2 0x147A PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1488 DUP6 DUP3 DUP7 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1499 DUP6 DUP3 DUP7 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x150D PUSH1 0x21 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1518 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x153A DUP2 PUSH2 0x1501 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D65206973206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1575 PUSH1 0x12 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1580 DUP3 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15A2 DUP2 PUSH2 0x1569 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15E0 DUP3 PUSH2 0x1367 JUMP JUMPDEST SWAP2 POP PUSH2 0x15EB DUP4 PUSH2 0x1367 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1603 JUMPI PUSH2 0x1602 PUSH2 0x15A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D6520686173206E6F7420656E6465642079657400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x163D PUSH1 0x16 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1648 DUP3 PUSH2 0x1609 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x166A DUP2 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x167F DUP2 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169A JUMPI PUSH2 0x1699 PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A7 DUP5 DUP3 DUP6 ADD PUSH2 0x1671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D65206973207374696C6C20616374697665000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16E4 PUSH1 0x14 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EF DUP3 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1711 DUP2 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792077696E6E65722063616E20636C61696D2072657761726400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x174C PUSH1 0x1C DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1757 DUP3 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1779 DUP2 PUSH2 0x1740 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420616C726561647920636C61696D656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17B4 PUSH1 0x16 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E1 DUP2 PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E742067616D65206973207374696C6C2061637469766500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181C PUSH1 0x1C DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1827 DUP3 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1849 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1884 PUSH1 0x1A DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x188F DUP3 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B1 DUP2 PUSH2 0x1878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726576696F757320726577617264206E6F7420636C61696D65640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18EC PUSH1 0x1B DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F7 DUP3 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1919 DUP2 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x192A DUP3 PUSH2 0x1367 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x195C JUMPI PUSH2 0x195B PUSH2 0x15A9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D652068617320656E646564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x199B PUSH1 0xE DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A6 DUP3 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C8 DUP2 PUSH2 0x198F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19E5 DUP3 PUSH2 0x19CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19F6 DUP3 PUSH2 0x19DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0E PUSH2 0x1A09 DUP3 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x19EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2E PUSH2 0x1A29 DUP3 PUSH2 0x1367 JUMP JUMPDEST PUSH2 0x1A14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3F DUP3 DUP6 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1A4F DUP3 DUP5 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A72 PUSH0 DUP4 ADD DUP6 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x1A7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1370 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A99 PUSH0 DUP4 ADD DUP7 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x1AA6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x1AB3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1370 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1AC4 DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1ACE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ADF DUP2 PUSH2 0x1ABB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AF9 PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B07 DUP5 DUP3 DUP6 ADD PUSH2 0x1AD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3C DUP3 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x1B46 DUP2 DUP6 PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x1B56 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B24 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6D DUP3 DUP5 PUSH2 0x1B32 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 ADDMOD 0x29 SGT MSTORE8 PUSH0 NUMBER 0xB8 SWAP12 0xF9 0xAE 0xBD 0xEA KECCAK256 PUSH32 0xB259858C7488315DD82F1AD6880E9F0B2B64736F6C634300081A003300000000 ",
							"sourceMap": "258:3919:4:-:0;;;923:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;982:10;974:5;;:18;;;;;;;;;;;;;;;;;;1023;1003:10;;:39;;;;;;;;;;;;;;;;;;923:127;258:3919;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;258:3919:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 4248,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 4760,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimReward_925": {
									"entryPoint": 2009,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentMinAddress_674": {
									"entryPoint": 1018,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentMinHash_676": {
									"entryPoint": 1335,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositTokens_945": {
									"entryPoint": 2491,
									"id": 945,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@endGame_890": {
									"entryPoint": 1341,
									"id": 890,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@epochId_668": {
									"entryPoint": 2003,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 4418,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 4397,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@gameActive_678": {
									"entryPoint": 2798,
									"id": 678,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gameDuration_672": {
									"entryPoint": 2752,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gameStartBlock_670": {
									"entryPoint": 1282,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getContractBalance_1023": {
									"entryPoint": 1767,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentEpoch_985": {
									"entryPoint": 2452,
									"id": 985,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentMinAddress_969": {
									"entryPoint": 2758,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentMinHash_977": {
									"entryPoint": 2482,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReward_1001": {
									"entryPoint": 1288,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWinner_993": {
									"entryPoint": 1962,
									"id": 993,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@iambestone_861": {
									"entryPoint": 3612,
									"id": 861,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isRewardClaimed_1009": {
									"entryPoint": 2461,
									"id": 1009,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@luckyToken_687": {
									"entryPoint": 1297,
									"id": 687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_666": {
									"entryPoint": 1927,
									"id": 666,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardClaimed_684": {
									"entryPoint": 1000,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reward_682": {
									"entryPoint": 1055,
									"id": 682,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_190": {
									"entryPoint": 4118,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 3991,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startNewGame_810": {
									"entryPoint": 2816,
									"id": 810,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 4619,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@winner_680": {
									"entryPoint": 2714,
									"id": 680,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawTokens_961": {
									"entryPoint": 1061,
									"id": 961,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 6653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 6685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6751,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6948,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea": {
									"entryPoint": 6503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4": {
									"entryPoint": 5808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18476:5",
										"nodeType": "YulBlock",
										"src": "0:18476:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:5",
													"nodeType": "YulBlock",
													"src": "49:48:5",
													"statements": [
														{
															"nativeSrc": "59:32:5",
															"nodeType": "YulAssignment",
															"src": "59:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:5"
																		},
																		"nativeSrc": "77:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:5"
																},
																"nativeSrc": "70:21:5",
																"nodeType": "YulFunctionCall",
																"src": "70:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:5",
														"nodeType": "YulTypedName",
														"src": "31:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:5",
														"nodeType": "YulTypedName",
														"src": "41:7:5",
														"type": ""
													}
												],
												"src": "7:90:5"
											},
											{
												"body": {
													"nativeSrc": "162:50:5",
													"nodeType": "YulBlock",
													"src": "162:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:5"
																		},
																		"nativeSrc": "184:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:5"
																},
																"nativeSrc": "172:34:5",
																"nodeType": "YulFunctionCall",
																"src": "172:34:5"
															},
															"nativeSrc": "172:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:5",
														"nodeType": "YulTypedName",
														"src": "150:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:5",
														"nodeType": "YulTypedName",
														"src": "157:3:5",
														"type": ""
													}
												],
												"src": "103:109:5"
											},
											{
												"body": {
													"nativeSrc": "310:118:5",
													"nodeType": "YulBlock",
													"src": "310:118:5",
													"statements": [
														{
															"nativeSrc": "320:26:5",
															"nodeType": "YulAssignment",
															"src": "320:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:5",
																		"nodeType": "YulLiteral",
																		"src": "343:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:5"
																},
																"nativeSrc": "328:18:5",
																"nodeType": "YulFunctionCall",
																"src": "328:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:5",
																				"nodeType": "YulLiteral",
																				"src": "418:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:5"
																		},
																		"nativeSrc": "403:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:5"
																},
																"nativeSrc": "356:65:5",
																"nodeType": "YulFunctionCall",
																"src": "356:65:5"
															},
															"nativeSrc": "356:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:5",
														"nodeType": "YulTypedName",
														"src": "282:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:5",
														"nodeType": "YulTypedName",
														"src": "294:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:5",
														"nodeType": "YulTypedName",
														"src": "305:4:5",
														"type": ""
													}
												],
												"src": "218:210:5"
											},
											{
												"body": {
													"nativeSrc": "479:81:5",
													"nodeType": "YulBlock",
													"src": "479:81:5",
													"statements": [
														{
															"nativeSrc": "489:65:5",
															"nodeType": "YulAssignment",
															"src": "489:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "504:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:42:5",
																		"nodeType": "YulLiteral",
																		"src": "511:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:5"
																},
																"nativeSrc": "500:54:5",
																"nodeType": "YulFunctionCall",
																"src": "500:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "489:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "434:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "461:5:5",
														"nodeType": "YulTypedName",
														"src": "461:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "471:7:5",
														"nodeType": "YulTypedName",
														"src": "471:7:5",
														"type": ""
													}
												],
												"src": "434:126:5"
											},
											{
												"body": {
													"nativeSrc": "611:51:5",
													"nodeType": "YulBlock",
													"src": "611:51:5",
													"statements": [
														{
															"nativeSrc": "621:35:5",
															"nodeType": "YulAssignment",
															"src": "621:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "650:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "650:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "632:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "632:17:5"
																},
																"nativeSrc": "632:24:5",
																"nodeType": "YulFunctionCall",
																"src": "632:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "621:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "621:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "566:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "593:5:5",
														"nodeType": "YulTypedName",
														"src": "593:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "603:7:5",
														"nodeType": "YulTypedName",
														"src": "603:7:5",
														"type": ""
													}
												],
												"src": "566:96:5"
											},
											{
												"body": {
													"nativeSrc": "733:53:5",
													"nodeType": "YulBlock",
													"src": "733:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "750:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "750:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "773:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "773:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "755:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "755:17:5"
																		},
																		"nativeSrc": "755:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "755:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "743:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:5"
																},
																"nativeSrc": "743:37:5",
																"nodeType": "YulFunctionCall",
																"src": "743:37:5"
															},
															"nativeSrc": "743:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "743:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "668:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:5",
														"nodeType": "YulTypedName",
														"src": "721:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "728:3:5",
														"nodeType": "YulTypedName",
														"src": "728:3:5",
														"type": ""
													}
												],
												"src": "668:118:5"
											},
											{
												"body": {
													"nativeSrc": "890:124:5",
													"nodeType": "YulBlock",
													"src": "890:124:5",
													"statements": [
														{
															"nativeSrc": "900:26:5",
															"nodeType": "YulAssignment",
															"src": "900:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "912:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "912:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "923:2:5",
																		"nodeType": "YulLiteral",
																		"src": "923:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "908:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:5"
																},
																"nativeSrc": "908:18:5",
																"nodeType": "YulFunctionCall",
																"src": "908:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "900:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "900:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:5"
																		},
																		"nativeSrc": "989:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "936:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "936:43:5"
																},
																"nativeSrc": "936:71:5",
																"nodeType": "YulFunctionCall",
																"src": "936:71:5"
															},
															"nativeSrc": "936:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "936:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "792:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "862:9:5",
														"nodeType": "YulTypedName",
														"src": "862:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "874:6:5",
														"nodeType": "YulTypedName",
														"src": "874:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "885:4:5",
														"nodeType": "YulTypedName",
														"src": "885:4:5",
														"type": ""
													}
												],
												"src": "792:222:5"
											},
											{
												"body": {
													"nativeSrc": "1065:32:5",
													"nodeType": "YulBlock",
													"src": "1065:32:5",
													"statements": [
														{
															"nativeSrc": "1075:16:5",
															"nodeType": "YulAssignment",
															"src": "1075:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1086:5:5",
																"nodeType": "YulIdentifier",
																"src": "1086:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1075:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1075:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1020:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1047:5:5",
														"nodeType": "YulTypedName",
														"src": "1047:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1057:7:5",
														"nodeType": "YulTypedName",
														"src": "1057:7:5",
														"type": ""
													}
												],
												"src": "1020:77:5"
											},
											{
												"body": {
													"nativeSrc": "1168:53:5",
													"nodeType": "YulBlock",
													"src": "1168:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1185:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1185:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1208:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1208:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1190:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1190:17:5"
																		},
																		"nativeSrc": "1190:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1190:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1178:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:5"
																},
																"nativeSrc": "1178:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1178:37:5"
															},
															"nativeSrc": "1178:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1178:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1103:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1156:5:5",
														"nodeType": "YulTypedName",
														"src": "1156:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1163:3:5",
														"nodeType": "YulTypedName",
														"src": "1163:3:5",
														"type": ""
													}
												],
												"src": "1103:118:5"
											},
											{
												"body": {
													"nativeSrc": "1325:124:5",
													"nodeType": "YulBlock",
													"src": "1325:124:5",
													"statements": [
														{
															"nativeSrc": "1335:26:5",
															"nodeType": "YulAssignment",
															"src": "1335:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1347:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1347:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1343:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:5"
																},
																"nativeSrc": "1343:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1343:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1335:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1335:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1415:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1424:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:5"
																		},
																		"nativeSrc": "1424:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1371:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1371:43:5"
																},
																"nativeSrc": "1371:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1371:71:5"
															},
															"nativeSrc": "1371:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1371:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1227:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1297:9:5",
														"nodeType": "YulTypedName",
														"src": "1297:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1309:6:5",
														"nodeType": "YulTypedName",
														"src": "1309:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1320:4:5",
														"nodeType": "YulTypedName",
														"src": "1320:4:5",
														"type": ""
													}
												],
												"src": "1227:222:5"
											},
											{
												"body": {
													"nativeSrc": "1495:35:5",
													"nodeType": "YulBlock",
													"src": "1495:35:5",
													"statements": [
														{
															"nativeSrc": "1505:19:5",
															"nodeType": "YulAssignment",
															"src": "1505:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1521:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1521:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1515:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1515:5:5"
																},
																"nativeSrc": "1515:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1515:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1505:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1455:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1488:6:5",
														"nodeType": "YulTypedName",
														"src": "1488:6:5",
														"type": ""
													}
												],
												"src": "1455:75:5"
											},
											{
												"body": {
													"nativeSrc": "1625:28:5",
													"nodeType": "YulBlock",
													"src": "1625:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1642:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1642:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1645:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1635:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:5"
																},
																"nativeSrc": "1635:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1635:12:5"
															},
															"nativeSrc": "1635:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1635:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1536:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1536:117:5"
											},
											{
												"body": {
													"nativeSrc": "1748:28:5",
													"nodeType": "YulBlock",
													"src": "1748:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1765:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1768:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1768:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1758:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:5"
																},
																"nativeSrc": "1758:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1758:12:5"
															},
															"nativeSrc": "1758:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1758:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1659:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:117:5"
											},
											{
												"body": {
													"nativeSrc": "1825:79:5",
													"nodeType": "YulBlock",
													"src": "1825:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1882:16:5",
																"nodeType": "YulBlock",
																"src": "1882:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1891:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1894:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1894:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1884:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1884:6:5"
																			},
																			"nativeSrc": "1884:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1884:12:5"
																		},
																		"nativeSrc": "1884:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1884:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1848:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1848:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1873:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1873:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1855:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1855:17:5"
																				},
																				"nativeSrc": "1855:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1855:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1845:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1845:2:5"
																		},
																		"nativeSrc": "1845:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1845:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1838:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:5"
																},
																"nativeSrc": "1838:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1838:43:5"
															},
															"nativeSrc": "1835:63:5",
															"nodeType": "YulIf",
															"src": "1835:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1782:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1818:5:5",
														"nodeType": "YulTypedName",
														"src": "1818:5:5",
														"type": ""
													}
												],
												"src": "1782:122:5"
											},
											{
												"body": {
													"nativeSrc": "1962:87:5",
													"nodeType": "YulBlock",
													"src": "1962:87:5",
													"statements": [
														{
															"nativeSrc": "1972:29:5",
															"nodeType": "YulAssignment",
															"src": "1972:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1994:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1994:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1981:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1981:12:5"
																},
																"nativeSrc": "1981:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1981:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1972:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1972:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2037:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2037:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2010:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2010:26:5"
																},
																"nativeSrc": "2010:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2010:33:5"
															},
															"nativeSrc": "2010:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2010:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1910:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1940:6:5",
														"nodeType": "YulTypedName",
														"src": "1940:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1948:3:5",
														"nodeType": "YulTypedName",
														"src": "1948:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1956:5:5",
														"nodeType": "YulTypedName",
														"src": "1956:5:5",
														"type": ""
													}
												],
												"src": "1910:139:5"
											},
											{
												"body": {
													"nativeSrc": "2121:263:5",
													"nodeType": "YulBlock",
													"src": "2121:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2167:83:5",
																"nodeType": "YulBlock",
																"src": "2167:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2169:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2169:77:5"
																			},
																			"nativeSrc": "2169:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2169:79:5"
																		},
																		"nativeSrc": "2169:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2142:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2142:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2151:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2151:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2138:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:5"
																		},
																		"nativeSrc": "2138:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2163:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2134:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:5"
																},
																"nativeSrc": "2134:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2134:32:5"
															},
															"nativeSrc": "2131:119:5",
															"nodeType": "YulIf",
															"src": "2131:119:5"
														},
														{
															"nativeSrc": "2260:117:5",
															"nodeType": "YulBlock",
															"src": "2260:117:5",
															"statements": [
																{
																	"nativeSrc": "2275:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2275:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2289:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2289:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2279:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2279:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2304:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2304:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2339:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2339:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2350:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2350:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2335:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2335:3:5"
																				},
																				"nativeSrc": "2335:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2335:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2359:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2359:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2314:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2314:20:5"
																		},
																		"nativeSrc": "2314:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2314:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2304:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2304:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2055:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2091:9:5",
														"nodeType": "YulTypedName",
														"src": "2091:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2102:7:5",
														"nodeType": "YulTypedName",
														"src": "2102:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2114:6:5",
														"nodeType": "YulTypedName",
														"src": "2114:6:5",
														"type": ""
													}
												],
												"src": "2055:329:5"
											},
											{
												"body": {
													"nativeSrc": "2422:28:5",
													"nodeType": "YulBlock",
													"src": "2422:28:5",
													"statements": [
														{
															"nativeSrc": "2432:12:5",
															"nodeType": "YulAssignment",
															"src": "2432:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2439:5:5",
																"nodeType": "YulIdentifier",
																"src": "2439:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2432:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2432:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2390:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2408:5:5",
														"nodeType": "YulTypedName",
														"src": "2408:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2418:3:5",
														"nodeType": "YulTypedName",
														"src": "2418:3:5",
														"type": ""
													}
												],
												"src": "2390:60:5"
											},
											{
												"body": {
													"nativeSrc": "2516:82:5",
													"nodeType": "YulBlock",
													"src": "2516:82:5",
													"statements": [
														{
															"nativeSrc": "2526:66:5",
															"nodeType": "YulAssignment",
															"src": "2526:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2584:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2584:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2566:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2566:17:5"
																				},
																				"nativeSrc": "2566:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2566:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2557:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2557:8:5"
																		},
																		"nativeSrc": "2557:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2539:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2539:17:5"
																},
																"nativeSrc": "2539:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2539:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2526:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2526:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2456:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:5",
														"nodeType": "YulTypedName",
														"src": "2496:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2506:9:5",
														"nodeType": "YulTypedName",
														"src": "2506:9:5",
														"type": ""
													}
												],
												"src": "2456:142:5"
											},
											{
												"body": {
													"nativeSrc": "2664:66:5",
													"nodeType": "YulBlock",
													"src": "2664:66:5",
													"statements": [
														{
															"nativeSrc": "2674:50:5",
															"nodeType": "YulAssignment",
															"src": "2674:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2718:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2718:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2687:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2687:30:5"
																},
																"nativeSrc": "2687:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2687:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2674:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2674:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2604:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2644:5:5",
														"nodeType": "YulTypedName",
														"src": "2644:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2654:9:5",
														"nodeType": "YulTypedName",
														"src": "2654:9:5",
														"type": ""
													}
												],
												"src": "2604:126:5"
											},
											{
												"body": {
													"nativeSrc": "2809:66:5",
													"nodeType": "YulBlock",
													"src": "2809:66:5",
													"statements": [
														{
															"nativeSrc": "2819:50:5",
															"nodeType": "YulAssignment",
															"src": "2819:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2863:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2863:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2832:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2832:30:5"
																},
																"nativeSrc": "2832:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2832:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2819:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2819:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "2736:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2789:5:5",
														"nodeType": "YulTypedName",
														"src": "2789:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2799:9:5",
														"nodeType": "YulTypedName",
														"src": "2799:9:5",
														"type": ""
													}
												],
												"src": "2736:139:5"
											},
											{
												"body": {
													"nativeSrc": "2959:79:5",
													"nodeType": "YulBlock",
													"src": "2959:79:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2976:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2976:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3025:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3025:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "2981:43:5",
																			"nodeType": "YulIdentifier",
																			"src": "2981:43:5"
																		},
																		"nativeSrc": "2981:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2981:50:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2969:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2969:6:5"
																},
																"nativeSrc": "2969:63:5",
																"nodeType": "YulFunctionCall",
																"src": "2969:63:5"
															},
															"nativeSrc": "2969:63:5",
															"nodeType": "YulExpressionStatement",
															"src": "2969:63:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "2881:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2947:5:5",
														"nodeType": "YulTypedName",
														"src": "2947:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2954:3:5",
														"nodeType": "YulTypedName",
														"src": "2954:3:5",
														"type": ""
													}
												],
												"src": "2881:157:5"
											},
											{
												"body": {
													"nativeSrc": "3155:137:5",
													"nodeType": "YulBlock",
													"src": "3155:137:5",
													"statements": [
														{
															"nativeSrc": "3165:26:5",
															"nodeType": "YulAssignment",
															"src": "3165:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3177:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3177:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3188:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3188:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3173:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3173:3:5"
																},
																"nativeSrc": "3173:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3173:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3165:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3165:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3258:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3258:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3271:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3271:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3282:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3282:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3267:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3267:3:5"
																		},
																		"nativeSrc": "3267:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3267:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "3201:56:5",
																	"nodeType": "YulIdentifier",
																	"src": "3201:56:5"
																},
																"nativeSrc": "3201:84:5",
																"nodeType": "YulFunctionCall",
																"src": "3201:84:5"
															},
															"nativeSrc": "3201:84:5",
															"nodeType": "YulExpressionStatement",
															"src": "3201:84:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "3044:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3127:9:5",
														"nodeType": "YulTypedName",
														"src": "3127:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3139:6:5",
														"nodeType": "YulTypedName",
														"src": "3139:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3150:4:5",
														"nodeType": "YulTypedName",
														"src": "3150:4:5",
														"type": ""
													}
												],
												"src": "3044:248:5"
											},
											{
												"body": {
													"nativeSrc": "3381:391:5",
													"nodeType": "YulBlock",
													"src": "3381:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3427:83:5",
																"nodeType": "YulBlock",
																"src": "3427:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3429:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3429:77:5"
																			},
																			"nativeSrc": "3429:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3429:79:5"
																		},
																		"nativeSrc": "3429:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3429:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3402:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3402:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3411:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3411:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3398:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3398:3:5"
																		},
																		"nativeSrc": "3398:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3398:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3423:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3423:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3394:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:5"
																},
																"nativeSrc": "3394:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3394:32:5"
															},
															"nativeSrc": "3391:119:5",
															"nodeType": "YulIf",
															"src": "3391:119:5"
														},
														{
															"nativeSrc": "3520:117:5",
															"nodeType": "YulBlock",
															"src": "3520:117:5",
															"statements": [
																{
																	"nativeSrc": "3535:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3535:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3549:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3549:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3539:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3539:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3564:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3564:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3599:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3599:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3610:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3610:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3595:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3595:3:5"
																				},
																				"nativeSrc": "3595:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3595:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3619:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3619:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3574:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3574:20:5"
																		},
																		"nativeSrc": "3574:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3574:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3564:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3564:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3647:118:5",
															"nodeType": "YulBlock",
															"src": "3647:118:5",
															"statements": [
																{
																	"nativeSrc": "3662:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3662:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3676:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3676:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3666:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3666:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3692:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3692:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3727:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3727:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3738:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3738:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3723:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:5"
																				},
																				"nativeSrc": "3723:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3723:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3747:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3747:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3702:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3702:20:5"
																		},
																		"nativeSrc": "3702:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3702:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3692:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3692:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3298:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3343:9:5",
														"nodeType": "YulTypedName",
														"src": "3343:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3354:7:5",
														"nodeType": "YulTypedName",
														"src": "3354:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3366:6:5",
														"nodeType": "YulTypedName",
														"src": "3366:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3374:6:5",
														"nodeType": "YulTypedName",
														"src": "3374:6:5",
														"type": ""
													}
												],
												"src": "3298:474:5"
											},
											{
												"body": {
													"nativeSrc": "3874:73:5",
													"nodeType": "YulBlock",
													"src": "3874:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3891:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3891:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3896:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3896:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3884:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3884:6:5"
																},
																"nativeSrc": "3884:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3884:19:5"
															},
															"nativeSrc": "3884:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3884:19:5"
														},
														{
															"nativeSrc": "3912:29:5",
															"nodeType": "YulAssignment",
															"src": "3912:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3931:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3931:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3936:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3927:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3927:3:5"
																},
																"nativeSrc": "3927:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3927:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3912:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "3912:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3778:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3846:3:5",
														"nodeType": "YulTypedName",
														"src": "3846:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3851:6:5",
														"nodeType": "YulTypedName",
														"src": "3851:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3862:11:5",
														"nodeType": "YulTypedName",
														"src": "3862:11:5",
														"type": ""
													}
												],
												"src": "3778:169:5"
											},
											{
												"body": {
													"nativeSrc": "4059:114:5",
													"nodeType": "YulBlock",
													"src": "4059:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4081:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4081:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4089:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4089:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4077:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4077:3:5"
																		},
																		"nativeSrc": "4077:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4077:14:5"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "4093:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4093:34:5",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4070:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4070:6:5"
																},
																"nativeSrc": "4070:58:5",
																"nodeType": "YulFunctionCall",
																"src": "4070:58:5"
															},
															"nativeSrc": "4070:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "4070:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4149:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4149:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4157:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4157:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4145:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4145:3:5"
																		},
																		"nativeSrc": "4145:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4145:15:5"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "4162:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4162:3:5",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4138:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:5"
																},
																"nativeSrc": "4138:28:5",
																"nodeType": "YulFunctionCall",
																"src": "4138:28:5"
															},
															"nativeSrc": "4138:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "4138:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
												"nativeSrc": "3953:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4051:6:5",
														"nodeType": "YulTypedName",
														"src": "4051:6:5",
														"type": ""
													}
												],
												"src": "3953:220:5"
											},
											{
												"body": {
													"nativeSrc": "4325:220:5",
													"nodeType": "YulBlock",
													"src": "4325:220:5",
													"statements": [
														{
															"nativeSrc": "4335:74:5",
															"nodeType": "YulAssignment",
															"src": "4335:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4401:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4401:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4406:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4342:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4342:58:5"
																},
																"nativeSrc": "4342:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4342:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4335:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4335:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4507:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4507:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																	"nativeSrc": "4418:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4418:88:5"
																},
																"nativeSrc": "4418:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4418:93:5"
															},
															"nativeSrc": "4418:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4418:93:5"
														},
														{
															"nativeSrc": "4520:19:5",
															"nodeType": "YulAssignment",
															"src": "4520:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4531:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4531:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4536:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4536:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4527:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:5"
																},
																"nativeSrc": "4527:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4527:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4520:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4179:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4313:3:5",
														"nodeType": "YulTypedName",
														"src": "4313:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4321:3:5",
														"nodeType": "YulTypedName",
														"src": "4321:3:5",
														"type": ""
													}
												],
												"src": "4179:366:5"
											},
											{
												"body": {
													"nativeSrc": "4722:248:5",
													"nodeType": "YulBlock",
													"src": "4722:248:5",
													"statements": [
														{
															"nativeSrc": "4732:26:5",
															"nodeType": "YulAssignment",
															"src": "4732:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4744:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4744:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4755:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4755:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4740:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:5"
																},
																"nativeSrc": "4740:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4740:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4732:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4732:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4779:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4779:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4790:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4790:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4775:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4775:3:5"
																		},
																		"nativeSrc": "4775:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4775:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4798:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4798:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4804:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4794:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:5"
																		},
																		"nativeSrc": "4794:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4794:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4768:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:5"
																},
																"nativeSrc": "4768:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4768:47:5"
															},
															"nativeSrc": "4768:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4768:47:5"
														},
														{
															"nativeSrc": "4824:139:5",
															"nodeType": "YulAssignment",
															"src": "4824:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4958:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4958:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4832:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4832:124:5"
																},
																"nativeSrc": "4832:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4832:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4824:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4824:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4551:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4702:9:5",
														"nodeType": "YulTypedName",
														"src": "4702:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4717:4:5",
														"nodeType": "YulTypedName",
														"src": "4717:4:5",
														"type": ""
													}
												],
												"src": "4551:419:5"
											},
											{
												"body": {
													"nativeSrc": "5082:62:5",
													"nodeType": "YulBlock",
													"src": "5082:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5104:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5104:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5112:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5112:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5100:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:5"
																		},
																		"nativeSrc": "5100:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5100:14:5"
																	},
																	{
																		"hexValue": "47616d65206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "5116:20:5",
																		"nodeType": "YulLiteral",
																		"src": "5116:20:5",
																		"type": "",
																		"value": "Game is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5093:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5093:6:5"
																},
																"nativeSrc": "5093:44:5",
																"nodeType": "YulFunctionCall",
																"src": "5093:44:5"
															},
															"nativeSrc": "5093:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "5093:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844",
												"nativeSrc": "4976:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5074:6:5",
														"nodeType": "YulTypedName",
														"src": "5074:6:5",
														"type": ""
													}
												],
												"src": "4976:168:5"
											},
											{
												"body": {
													"nativeSrc": "5296:220:5",
													"nodeType": "YulBlock",
													"src": "5296:220:5",
													"statements": [
														{
															"nativeSrc": "5306:74:5",
															"nodeType": "YulAssignment",
															"src": "5306:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5372:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5372:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5377:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5377:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5313:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5313:58:5"
																},
																"nativeSrc": "5313:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5313:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5306:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5306:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5478:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5478:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844",
																	"nativeSrc": "5389:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5389:88:5"
																},
																"nativeSrc": "5389:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5389:93:5"
															},
															"nativeSrc": "5389:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5389:93:5"
														},
														{
															"nativeSrc": "5491:19:5",
															"nodeType": "YulAssignment",
															"src": "5491:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5502:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5502:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5507:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5507:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5498:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5498:3:5"
																},
																"nativeSrc": "5498:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5498:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5491:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5491:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5150:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5284:3:5",
														"nodeType": "YulTypedName",
														"src": "5284:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5292:3:5",
														"nodeType": "YulTypedName",
														"src": "5292:3:5",
														"type": ""
													}
												],
												"src": "5150:366:5"
											},
											{
												"body": {
													"nativeSrc": "5693:248:5",
													"nodeType": "YulBlock",
													"src": "5693:248:5",
													"statements": [
														{
															"nativeSrc": "5703:26:5",
															"nodeType": "YulAssignment",
															"src": "5703:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5715:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5715:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5726:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5726:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5711:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5711:3:5"
																},
																"nativeSrc": "5711:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5711:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5703:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5703:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5750:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5750:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5761:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5761:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5746:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5746:3:5"
																		},
																		"nativeSrc": "5746:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5746:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5769:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5769:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5775:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5775:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5765:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5765:3:5"
																		},
																		"nativeSrc": "5765:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5765:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5739:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5739:6:5"
																},
																"nativeSrc": "5739:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5739:47:5"
															},
															"nativeSrc": "5739:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5739:47:5"
														},
														{
															"nativeSrc": "5795:139:5",
															"nodeType": "YulAssignment",
															"src": "5795:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5929:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5803:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5803:124:5"
																},
																"nativeSrc": "5803:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5803:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5795:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5795:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5522:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5673:9:5",
														"nodeType": "YulTypedName",
														"src": "5673:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5688:4:5",
														"nodeType": "YulTypedName",
														"src": "5688:4:5",
														"type": ""
													}
												],
												"src": "5522:419:5"
											},
											{
												"body": {
													"nativeSrc": "5975:152:5",
													"nodeType": "YulBlock",
													"src": "5975:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5992:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5992:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5995:77:5",
																		"nodeType": "YulLiteral",
																		"src": "5995:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5985:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5985:6:5"
																},
																"nativeSrc": "5985:88:5",
																"nodeType": "YulFunctionCall",
																"src": "5985:88:5"
															},
															"nativeSrc": "5985:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "5985:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6089:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6089:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6092:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6092:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6082:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6082:6:5"
																},
																"nativeSrc": "6082:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6082:15:5"
															},
															"nativeSrc": "6082:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6082:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6113:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6113:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6116:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6116:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6106:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6106:6:5"
																},
																"nativeSrc": "6106:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6106:15:5"
															},
															"nativeSrc": "6106:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6106:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5947:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5947:180:5"
											},
											{
												"body": {
													"nativeSrc": "6177:147:5",
													"nodeType": "YulBlock",
													"src": "6177:147:5",
													"statements": [
														{
															"nativeSrc": "6187:25:5",
															"nodeType": "YulAssignment",
															"src": "6187:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6210:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6210:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6192:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6192:17:5"
																},
																"nativeSrc": "6192:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6192:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6187:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6187:1:5"
																}
															]
														},
														{
															"nativeSrc": "6221:25:5",
															"nodeType": "YulAssignment",
															"src": "6221:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6244:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6244:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6226:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6226:17:5"
																},
																"nativeSrc": "6226:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6226:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6221:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6221:1:5"
																}
															]
														},
														{
															"nativeSrc": "6255:16:5",
															"nodeType": "YulAssignment",
															"src": "6255:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6266:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6266:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6269:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6269:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6262:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6262:3:5"
																},
																"nativeSrc": "6262:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6262:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6255:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6255:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6295:22:5",
																"nodeType": "YulBlock",
																"src": "6295:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6297:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6297:16:5"
																			},
																			"nativeSrc": "6297:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6297:18:5"
																		},
																		"nativeSrc": "6297:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6297:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6287:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6287:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6290:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6284:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6284:2:5"
																},
																"nativeSrc": "6284:10:5",
																"nodeType": "YulFunctionCall",
																"src": "6284:10:5"
															},
															"nativeSrc": "6281:36:5",
															"nodeType": "YulIf",
															"src": "6281:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6133:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6164:1:5",
														"nodeType": "YulTypedName",
														"src": "6164:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6167:1:5",
														"nodeType": "YulTypedName",
														"src": "6167:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6173:3:5",
														"nodeType": "YulTypedName",
														"src": "6173:3:5",
														"type": ""
													}
												],
												"src": "6133:191:5"
											},
											{
												"body": {
													"nativeSrc": "6436:66:5",
													"nodeType": "YulBlock",
													"src": "6436:66:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6458:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6458:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6466:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6466:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6454:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6454:3:5"
																		},
																		"nativeSrc": "6454:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6454:14:5"
																	},
																	{
																		"hexValue": "47616d6520686173206e6f7420656e64656420796574",
																		"kind": "string",
																		"nativeSrc": "6470:24:5",
																		"nodeType": "YulLiteral",
																		"src": "6470:24:5",
																		"type": "",
																		"value": "Game has not ended yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6447:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6447:6:5"
																},
																"nativeSrc": "6447:48:5",
																"nodeType": "YulFunctionCall",
																"src": "6447:48:5"
															},
															"nativeSrc": "6447:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "6447:48:5"
														}
													]
												},
												"name": "store_literal_in_memory_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f",
												"nativeSrc": "6330:172:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6428:6:5",
														"nodeType": "YulTypedName",
														"src": "6428:6:5",
														"type": ""
													}
												],
												"src": "6330:172:5"
											},
											{
												"body": {
													"nativeSrc": "6654:220:5",
													"nodeType": "YulBlock",
													"src": "6654:220:5",
													"statements": [
														{
															"nativeSrc": "6664:74:5",
															"nodeType": "YulAssignment",
															"src": "6664:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6730:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6730:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6735:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6671:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6671:58:5"
																},
																"nativeSrc": "6671:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6671:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6664:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6664:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6836:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6836:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f",
																	"nativeSrc": "6747:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6747:88:5"
																},
																"nativeSrc": "6747:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6747:93:5"
															},
															"nativeSrc": "6747:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6747:93:5"
														},
														{
															"nativeSrc": "6849:19:5",
															"nodeType": "YulAssignment",
															"src": "6849:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6860:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6860:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6865:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6865:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6856:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6856:3:5"
																},
																"nativeSrc": "6856:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6856:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6849:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6849:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6508:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6642:3:5",
														"nodeType": "YulTypedName",
														"src": "6642:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6650:3:5",
														"nodeType": "YulTypedName",
														"src": "6650:3:5",
														"type": ""
													}
												],
												"src": "6508:366:5"
											},
											{
												"body": {
													"nativeSrc": "7051:248:5",
													"nodeType": "YulBlock",
													"src": "7051:248:5",
													"statements": [
														{
															"nativeSrc": "7061:26:5",
															"nodeType": "YulAssignment",
															"src": "7061:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7073:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7073:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7084:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7084:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7069:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:5"
																},
																"nativeSrc": "7069:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7069:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7061:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7061:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7108:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7108:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7119:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7119:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7104:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7104:3:5"
																		},
																		"nativeSrc": "7104:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7104:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7127:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7127:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7133:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7133:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7123:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7123:3:5"
																		},
																		"nativeSrc": "7123:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7123:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7097:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7097:6:5"
																},
																"nativeSrc": "7097:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7097:47:5"
															},
															"nativeSrc": "7097:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7097:47:5"
														},
														{
															"nativeSrc": "7153:139:5",
															"nodeType": "YulAssignment",
															"src": "7153:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7287:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7287:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7161:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7161:124:5"
																},
																"nativeSrc": "7161:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7161:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7153:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7153:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6880:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7031:9:5",
														"nodeType": "YulTypedName",
														"src": "7031:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7046:4:5",
														"nodeType": "YulTypedName",
														"src": "7046:4:5",
														"type": ""
													}
												],
												"src": "6880:419:5"
											},
											{
												"body": {
													"nativeSrc": "7368:80:5",
													"nodeType": "YulBlock",
													"src": "7368:80:5",
													"statements": [
														{
															"nativeSrc": "7378:22:5",
															"nodeType": "YulAssignment",
															"src": "7378:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7393:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7393:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7387:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7387:5:5"
																},
																"nativeSrc": "7387:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7387:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7378:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7378:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7436:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7436:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7409:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "7409:26:5"
																},
																"nativeSrc": "7409:33:5",
																"nodeType": "YulFunctionCall",
																"src": "7409:33:5"
															},
															"nativeSrc": "7409:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "7409:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7305:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7346:6:5",
														"nodeType": "YulTypedName",
														"src": "7346:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7354:3:5",
														"nodeType": "YulTypedName",
														"src": "7354:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7362:5:5",
														"nodeType": "YulTypedName",
														"src": "7362:5:5",
														"type": ""
													}
												],
												"src": "7305:143:5"
											},
											{
												"body": {
													"nativeSrc": "7531:274:5",
													"nodeType": "YulBlock",
													"src": "7531:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7577:83:5",
																"nodeType": "YulBlock",
																"src": "7577:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7579:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7579:77:5"
																			},
																			"nativeSrc": "7579:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7579:79:5"
																		},
																		"nativeSrc": "7579:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7579:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7552:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7552:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7561:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7561:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7548:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7548:3:5"
																		},
																		"nativeSrc": "7548:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7548:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7573:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7573:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7544:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7544:3:5"
																},
																"nativeSrc": "7544:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7544:32:5"
															},
															"nativeSrc": "7541:119:5",
															"nodeType": "YulIf",
															"src": "7541:119:5"
														},
														{
															"nativeSrc": "7670:128:5",
															"nodeType": "YulBlock",
															"src": "7670:128:5",
															"statements": [
																{
																	"nativeSrc": "7685:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7685:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7699:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7699:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7689:6:5",
																			"nodeType": "YulTypedName",
																			"src": "7689:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7714:74:5",
																	"nodeType": "YulAssignment",
																	"src": "7714:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7760:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7760:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7771:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7771:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7756:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7756:3:5"
																				},
																				"nativeSrc": "7756:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7756:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7780:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7780:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7724:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "7724:31:5"
																		},
																		"nativeSrc": "7724:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7724:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7714:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7714:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7454:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7501:9:5",
														"nodeType": "YulTypedName",
														"src": "7501:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7512:7:5",
														"nodeType": "YulTypedName",
														"src": "7512:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7524:6:5",
														"nodeType": "YulTypedName",
														"src": "7524:6:5",
														"type": ""
													}
												],
												"src": "7454:351:5"
											},
											{
												"body": {
													"nativeSrc": "7917:64:5",
													"nodeType": "YulBlock",
													"src": "7917:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7939:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7939:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7947:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7947:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7935:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7935:3:5"
																		},
																		"nativeSrc": "7935:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7935:14:5"
																	},
																	{
																		"hexValue": "47616d65206973207374696c6c20616374697665",
																		"kind": "string",
																		"nativeSrc": "7951:22:5",
																		"nodeType": "YulLiteral",
																		"src": "7951:22:5",
																		"type": "",
																		"value": "Game is still active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7928:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7928:6:5"
																},
																"nativeSrc": "7928:46:5",
																"nodeType": "YulFunctionCall",
																"src": "7928:46:5"
															},
															"nativeSrc": "7928:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "7928:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4",
												"nativeSrc": "7811:170:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7909:6:5",
														"nodeType": "YulTypedName",
														"src": "7909:6:5",
														"type": ""
													}
												],
												"src": "7811:170:5"
											},
											{
												"body": {
													"nativeSrc": "8133:220:5",
													"nodeType": "YulBlock",
													"src": "8133:220:5",
													"statements": [
														{
															"nativeSrc": "8143:74:5",
															"nodeType": "YulAssignment",
															"src": "8143:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8209:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8209:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8214:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8214:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8150:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8150:58:5"
																},
																"nativeSrc": "8150:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8150:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8143:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8143:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8315:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8315:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4",
																	"nativeSrc": "8226:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8226:88:5"
																},
																"nativeSrc": "8226:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8226:93:5"
															},
															"nativeSrc": "8226:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8226:93:5"
														},
														{
															"nativeSrc": "8328:19:5",
															"nodeType": "YulAssignment",
															"src": "8328:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8339:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8339:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8344:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8344:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8335:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8335:3:5"
																},
																"nativeSrc": "8335:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8335:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8328:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8328:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7987:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8121:3:5",
														"nodeType": "YulTypedName",
														"src": "8121:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8129:3:5",
														"nodeType": "YulTypedName",
														"src": "8129:3:5",
														"type": ""
													}
												],
												"src": "7987:366:5"
											},
											{
												"body": {
													"nativeSrc": "8530:248:5",
													"nodeType": "YulBlock",
													"src": "8530:248:5",
													"statements": [
														{
															"nativeSrc": "8540:26:5",
															"nodeType": "YulAssignment",
															"src": "8540:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8552:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8552:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8563:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8563:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8548:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8548:3:5"
																},
																"nativeSrc": "8548:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8548:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8540:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8540:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8587:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8598:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8598:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8612:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8612:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8602:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8602:3:5"
																		},
																		"nativeSrc": "8602:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8576:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:5"
																},
																"nativeSrc": "8576:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8576:47:5"
															},
															"nativeSrc": "8576:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8576:47:5"
														},
														{
															"nativeSrc": "8632:139:5",
															"nodeType": "YulAssignment",
															"src": "8632:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8766:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8766:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8640:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8640:124:5"
																},
																"nativeSrc": "8640:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8640:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8632:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8632:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8359:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8510:9:5",
														"nodeType": "YulTypedName",
														"src": "8510:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8525:4:5",
														"nodeType": "YulTypedName",
														"src": "8525:4:5",
														"type": ""
													}
												],
												"src": "8359:419:5"
											},
											{
												"body": {
													"nativeSrc": "8890:72:5",
													"nodeType": "YulBlock",
													"src": "8890:72:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8912:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8912:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8920:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8920:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8908:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8908:3:5"
																		},
																		"nativeSrc": "8908:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8908:14:5"
																	},
																	{
																		"hexValue": "4f6e6c792077696e6e65722063616e20636c61696d20726577617264",
																		"kind": "string",
																		"nativeSrc": "8924:30:5",
																		"nodeType": "YulLiteral",
																		"src": "8924:30:5",
																		"type": "",
																		"value": "Only winner can claim reward"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8901:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8901:6:5"
																},
																"nativeSrc": "8901:54:5",
																"nodeType": "YulFunctionCall",
																"src": "8901:54:5"
															},
															"nativeSrc": "8901:54:5",
															"nodeType": "YulExpressionStatement",
															"src": "8901:54:5"
														}
													]
												},
												"name": "store_literal_in_memory_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b",
												"nativeSrc": "8784:178:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8882:6:5",
														"nodeType": "YulTypedName",
														"src": "8882:6:5",
														"type": ""
													}
												],
												"src": "8784:178:5"
											},
											{
												"body": {
													"nativeSrc": "9114:220:5",
													"nodeType": "YulBlock",
													"src": "9114:220:5",
													"statements": [
														{
															"nativeSrc": "9124:74:5",
															"nodeType": "YulAssignment",
															"src": "9124:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9190:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9190:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9195:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9195:2:5",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9131:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9131:58:5"
																},
																"nativeSrc": "9131:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9131:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9124:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9124:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9296:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9296:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b",
																	"nativeSrc": "9207:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9207:88:5"
																},
																"nativeSrc": "9207:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9207:93:5"
															},
															"nativeSrc": "9207:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9207:93:5"
														},
														{
															"nativeSrc": "9309:19:5",
															"nodeType": "YulAssignment",
															"src": "9309:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9320:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9320:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9325:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9325:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9316:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9316:3:5"
																},
																"nativeSrc": "9316:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9316:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9309:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9309:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8968:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9102:3:5",
														"nodeType": "YulTypedName",
														"src": "9102:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9110:3:5",
														"nodeType": "YulTypedName",
														"src": "9110:3:5",
														"type": ""
													}
												],
												"src": "8968:366:5"
											},
											{
												"body": {
													"nativeSrc": "9511:248:5",
													"nodeType": "YulBlock",
													"src": "9511:248:5",
													"statements": [
														{
															"nativeSrc": "9521:26:5",
															"nodeType": "YulAssignment",
															"src": "9521:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9533:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9533:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9544:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9544:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9529:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:5"
																},
																"nativeSrc": "9529:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9529:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9521:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9521:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9568:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9579:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9579:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9564:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:5"
																		},
																		"nativeSrc": "9564:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9564:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9587:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9593:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9593:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9583:3:5"
																		},
																		"nativeSrc": "9583:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9583:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9557:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:5"
																},
																"nativeSrc": "9557:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9557:47:5"
															},
															"nativeSrc": "9557:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9557:47:5"
														},
														{
															"nativeSrc": "9613:139:5",
															"nodeType": "YulAssignment",
															"src": "9613:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9747:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9747:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9621:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9621:124:5"
																},
																"nativeSrc": "9621:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9621:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9613:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9613:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9340:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9491:9:5",
														"nodeType": "YulTypedName",
														"src": "9491:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9506:4:5",
														"nodeType": "YulTypedName",
														"src": "9506:4:5",
														"type": ""
													}
												],
												"src": "9340:419:5"
											},
											{
												"body": {
													"nativeSrc": "9871:66:5",
													"nodeType": "YulBlock",
													"src": "9871:66:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9893:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9893:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9901:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9901:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9889:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9889:3:5"
																		},
																		"nativeSrc": "9889:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9889:14:5"
																	},
																	{
																		"hexValue": "52657761726420616c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "9905:24:5",
																		"nodeType": "YulLiteral",
																		"src": "9905:24:5",
																		"type": "",
																		"value": "Reward already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9882:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9882:6:5"
																},
																"nativeSrc": "9882:48:5",
																"nodeType": "YulFunctionCall",
																"src": "9882:48:5"
															},
															"nativeSrc": "9882:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "9882:48:5"
														}
													]
												},
												"name": "store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c",
												"nativeSrc": "9765:172:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9863:6:5",
														"nodeType": "YulTypedName",
														"src": "9863:6:5",
														"type": ""
													}
												],
												"src": "9765:172:5"
											},
											{
												"body": {
													"nativeSrc": "10089:220:5",
													"nodeType": "YulBlock",
													"src": "10089:220:5",
													"statements": [
														{
															"nativeSrc": "10099:74:5",
															"nodeType": "YulAssignment",
															"src": "10099:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10165:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10165:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10170:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10170:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10106:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10106:58:5"
																},
																"nativeSrc": "10106:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10106:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10099:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10099:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10271:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10271:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c",
																	"nativeSrc": "10182:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10182:88:5"
																},
																"nativeSrc": "10182:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10182:93:5"
															},
															"nativeSrc": "10182:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10182:93:5"
														},
														{
															"nativeSrc": "10284:19:5",
															"nodeType": "YulAssignment",
															"src": "10284:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10295:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10295:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10300:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10300:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10291:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10291:3:5"
																},
																"nativeSrc": "10291:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10291:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10284:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10284:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9943:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10077:3:5",
														"nodeType": "YulTypedName",
														"src": "10077:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10085:3:5",
														"nodeType": "YulTypedName",
														"src": "10085:3:5",
														"type": ""
													}
												],
												"src": "9943:366:5"
											},
											{
												"body": {
													"nativeSrc": "10486:248:5",
													"nodeType": "YulBlock",
													"src": "10486:248:5",
													"statements": [
														{
															"nativeSrc": "10496:26:5",
															"nodeType": "YulAssignment",
															"src": "10496:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10508:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10508:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10519:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10519:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10504:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10504:3:5"
																},
																"nativeSrc": "10504:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10504:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10496:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10496:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10543:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10543:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10554:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10554:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10539:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10539:3:5"
																		},
																		"nativeSrc": "10539:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10539:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10562:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10562:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10568:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10568:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10558:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10558:3:5"
																		},
																		"nativeSrc": "10558:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10558:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10532:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10532:6:5"
																},
																"nativeSrc": "10532:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10532:47:5"
															},
															"nativeSrc": "10532:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10532:47:5"
														},
														{
															"nativeSrc": "10588:139:5",
															"nodeType": "YulAssignment",
															"src": "10588:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10722:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10722:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10596:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10596:124:5"
																},
																"nativeSrc": "10596:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10596:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10588:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10588:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10315:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10466:9:5",
														"nodeType": "YulTypedName",
														"src": "10466:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10481:4:5",
														"nodeType": "YulTypedName",
														"src": "10481:4:5",
														"type": ""
													}
												],
												"src": "10315:419:5"
											},
											{
												"body": {
													"nativeSrc": "10846:72:5",
													"nodeType": "YulBlock",
													"src": "10846:72:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10868:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10868:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10876:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10876:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10864:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10864:3:5"
																		},
																		"nativeSrc": "10864:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10864:14:5"
																	},
																	{
																		"hexValue": "43757272656e742067616d65206973207374696c6c20616374697665",
																		"kind": "string",
																		"nativeSrc": "10880:30:5",
																		"nodeType": "YulLiteral",
																		"src": "10880:30:5",
																		"type": "",
																		"value": "Current game is still active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10857:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10857:6:5"
																},
																"nativeSrc": "10857:54:5",
																"nodeType": "YulFunctionCall",
																"src": "10857:54:5"
															},
															"nativeSrc": "10857:54:5",
															"nodeType": "YulExpressionStatement",
															"src": "10857:54:5"
														}
													]
												},
												"name": "store_literal_in_memory_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef",
												"nativeSrc": "10740:178:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10838:6:5",
														"nodeType": "YulTypedName",
														"src": "10838:6:5",
														"type": ""
													}
												],
												"src": "10740:178:5"
											},
											{
												"body": {
													"nativeSrc": "11070:220:5",
													"nodeType": "YulBlock",
													"src": "11070:220:5",
													"statements": [
														{
															"nativeSrc": "11080:74:5",
															"nodeType": "YulAssignment",
															"src": "11080:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11146:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11146:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11151:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11151:2:5",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11087:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11087:58:5"
																},
																"nativeSrc": "11087:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11087:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11080:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11080:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11252:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11252:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef",
																	"nativeSrc": "11163:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11163:88:5"
																},
																"nativeSrc": "11163:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11163:93:5"
															},
															"nativeSrc": "11163:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11163:93:5"
														},
														{
															"nativeSrc": "11265:19:5",
															"nodeType": "YulAssignment",
															"src": "11265:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11276:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11276:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11281:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11281:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11272:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11272:3:5"
																},
																"nativeSrc": "11272:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11272:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11265:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11265:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10924:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11058:3:5",
														"nodeType": "YulTypedName",
														"src": "11058:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11066:3:5",
														"nodeType": "YulTypedName",
														"src": "11066:3:5",
														"type": ""
													}
												],
												"src": "10924:366:5"
											},
											{
												"body": {
													"nativeSrc": "11467:248:5",
													"nodeType": "YulBlock",
													"src": "11467:248:5",
													"statements": [
														{
															"nativeSrc": "11477:26:5",
															"nodeType": "YulAssignment",
															"src": "11477:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11489:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11489:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11500:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11500:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11485:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11485:3:5"
																},
																"nativeSrc": "11485:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11485:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11477:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11477:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11524:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11524:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11535:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11535:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11520:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11520:3:5"
																		},
																		"nativeSrc": "11520:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11520:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11543:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11543:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11549:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11549:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11539:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11539:3:5"
																		},
																		"nativeSrc": "11539:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11539:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11513:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11513:6:5"
																},
																"nativeSrc": "11513:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11513:47:5"
															},
															"nativeSrc": "11513:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11513:47:5"
														},
														{
															"nativeSrc": "11569:139:5",
															"nodeType": "YulAssignment",
															"src": "11569:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11703:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11703:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11577:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11577:124:5"
																},
																"nativeSrc": "11577:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11577:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11569:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11569:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11296:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11447:9:5",
														"nodeType": "YulTypedName",
														"src": "11447:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11462:4:5",
														"nodeType": "YulTypedName",
														"src": "11462:4:5",
														"type": ""
													}
												],
												"src": "11296:419:5"
											},
											{
												"body": {
													"nativeSrc": "11827:70:5",
													"nodeType": "YulBlock",
													"src": "11827:70:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11849:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11849:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11857:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11857:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11845:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11845:3:5"
																		},
																		"nativeSrc": "11845:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11845:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11861:28:5",
																		"nodeType": "YulLiteral",
																		"src": "11861:28:5",
																		"type": "",
																		"value": "Insufficient token balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11838:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11838:6:5"
																},
																"nativeSrc": "11838:52:5",
																"nodeType": "YulFunctionCall",
																"src": "11838:52:5"
															},
															"nativeSrc": "11838:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "11838:52:5"
														}
													]
												},
												"name": "store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
												"nativeSrc": "11721:176:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11819:6:5",
														"nodeType": "YulTypedName",
														"src": "11819:6:5",
														"type": ""
													}
												],
												"src": "11721:176:5"
											},
											{
												"body": {
													"nativeSrc": "12049:220:5",
													"nodeType": "YulBlock",
													"src": "12049:220:5",
													"statements": [
														{
															"nativeSrc": "12059:74:5",
															"nodeType": "YulAssignment",
															"src": "12059:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12125:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12125:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12130:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12130:2:5",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12066:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "12066:58:5"
																},
																"nativeSrc": "12066:67:5",
																"nodeType": "YulFunctionCall",
																"src": "12066:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12059:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12059:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12231:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12231:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																	"nativeSrc": "12142:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "12142:88:5"
																},
																"nativeSrc": "12142:93:5",
																"nodeType": "YulFunctionCall",
																"src": "12142:93:5"
															},
															"nativeSrc": "12142:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "12142:93:5"
														},
														{
															"nativeSrc": "12244:19:5",
															"nodeType": "YulAssignment",
															"src": "12244:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12255:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12255:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12260:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12260:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12251:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12251:3:5"
																},
																"nativeSrc": "12251:12:5",
																"nodeType": "YulFunctionCall",
																"src": "12251:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12244:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12244:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11903:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12037:3:5",
														"nodeType": "YulTypedName",
														"src": "12037:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12045:3:5",
														"nodeType": "YulTypedName",
														"src": "12045:3:5",
														"type": ""
													}
												],
												"src": "11903:366:5"
											},
											{
												"body": {
													"nativeSrc": "12446:248:5",
													"nodeType": "YulBlock",
													"src": "12446:248:5",
													"statements": [
														{
															"nativeSrc": "12456:26:5",
															"nodeType": "YulAssignment",
															"src": "12456:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12468:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12468:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12479:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12479:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12464:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12464:3:5"
																},
																"nativeSrc": "12464:18:5",
																"nodeType": "YulFunctionCall",
																"src": "12464:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12456:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12456:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12503:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12503:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12514:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12514:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12499:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12499:3:5"
																		},
																		"nativeSrc": "12499:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12499:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12522:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "12522:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12528:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12528:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12518:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12518:3:5"
																		},
																		"nativeSrc": "12518:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12518:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12492:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12492:6:5"
																},
																"nativeSrc": "12492:47:5",
																"nodeType": "YulFunctionCall",
																"src": "12492:47:5"
															},
															"nativeSrc": "12492:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "12492:47:5"
														},
														{
															"nativeSrc": "12548:139:5",
															"nodeType": "YulAssignment",
															"src": "12548:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12682:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12682:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12556:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "12556:124:5"
																},
																"nativeSrc": "12556:131:5",
																"nodeType": "YulFunctionCall",
																"src": "12556:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12548:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12548:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12275:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12426:9:5",
														"nodeType": "YulTypedName",
														"src": "12426:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12441:4:5",
														"nodeType": "YulTypedName",
														"src": "12441:4:5",
														"type": ""
													}
												],
												"src": "12275:419:5"
											},
											{
												"body": {
													"nativeSrc": "12806:71:5",
													"nodeType": "YulBlock",
													"src": "12806:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12828:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12828:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12836:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12836:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12824:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12824:3:5"
																		},
																		"nativeSrc": "12824:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12824:14:5"
																	},
																	{
																		"hexValue": "50726576696f757320726577617264206e6f7420636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "12840:29:5",
																		"nodeType": "YulLiteral",
																		"src": "12840:29:5",
																		"type": "",
																		"value": "Previous reward not claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12817:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12817:6:5"
																},
																"nativeSrc": "12817:53:5",
																"nodeType": "YulFunctionCall",
																"src": "12817:53:5"
															},
															"nativeSrc": "12817:53:5",
															"nodeType": "YulExpressionStatement",
															"src": "12817:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e",
												"nativeSrc": "12700:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12798:6:5",
														"nodeType": "YulTypedName",
														"src": "12798:6:5",
														"type": ""
													}
												],
												"src": "12700:177:5"
											},
											{
												"body": {
													"nativeSrc": "13029:220:5",
													"nodeType": "YulBlock",
													"src": "13029:220:5",
													"statements": [
														{
															"nativeSrc": "13039:74:5",
															"nodeType": "YulAssignment",
															"src": "13039:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13105:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13105:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13110:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13110:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13046:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "13046:58:5"
																},
																"nativeSrc": "13046:67:5",
																"nodeType": "YulFunctionCall",
																"src": "13046:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13039:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13039:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13211:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13211:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e",
																	"nativeSrc": "13122:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "13122:88:5"
																},
																"nativeSrc": "13122:93:5",
																"nodeType": "YulFunctionCall",
																"src": "13122:93:5"
															},
															"nativeSrc": "13122:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "13122:93:5"
														},
														{
															"nativeSrc": "13224:19:5",
															"nodeType": "YulAssignment",
															"src": "13224:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13235:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13235:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13240:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13240:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13231:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13231:3:5"
																},
																"nativeSrc": "13231:12:5",
																"nodeType": "YulFunctionCall",
																"src": "13231:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13224:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13224:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12883:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13017:3:5",
														"nodeType": "YulTypedName",
														"src": "13017:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13025:3:5",
														"nodeType": "YulTypedName",
														"src": "13025:3:5",
														"type": ""
													}
												],
												"src": "12883:366:5"
											},
											{
												"body": {
													"nativeSrc": "13426:248:5",
													"nodeType": "YulBlock",
													"src": "13426:248:5",
													"statements": [
														{
															"nativeSrc": "13436:26:5",
															"nodeType": "YulAssignment",
															"src": "13436:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13448:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13448:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13459:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13459:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13444:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13444:3:5"
																},
																"nativeSrc": "13444:18:5",
																"nodeType": "YulFunctionCall",
																"src": "13444:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13436:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13436:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13483:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13483:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13494:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13494:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13479:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13479:3:5"
																		},
																		"nativeSrc": "13479:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13479:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13502:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "13502:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13508:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13508:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13498:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13498:3:5"
																		},
																		"nativeSrc": "13498:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13498:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13472:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13472:6:5"
																},
																"nativeSrc": "13472:47:5",
																"nodeType": "YulFunctionCall",
																"src": "13472:47:5"
															},
															"nativeSrc": "13472:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "13472:47:5"
														},
														{
															"nativeSrc": "13528:139:5",
															"nodeType": "YulAssignment",
															"src": "13528:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13662:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "13662:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13536:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "13536:124:5"
																},
																"nativeSrc": "13536:131:5",
																"nodeType": "YulFunctionCall",
																"src": "13536:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13528:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13528:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13255:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13406:9:5",
														"nodeType": "YulTypedName",
														"src": "13406:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13421:4:5",
														"nodeType": "YulTypedName",
														"src": "13421:4:5",
														"type": ""
													}
												],
												"src": "13255:419:5"
											},
											{
												"body": {
													"nativeSrc": "13723:190:5",
													"nodeType": "YulBlock",
													"src": "13723:190:5",
													"statements": [
														{
															"nativeSrc": "13733:33:5",
															"nodeType": "YulAssignment",
															"src": "13733:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13760:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13760:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13742:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "13742:17:5"
																},
																"nativeSrc": "13742:24:5",
																"nodeType": "YulFunctionCall",
																"src": "13742:24:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13733:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "13733:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13856:22:5",
																"nodeType": "YulBlock",
																"src": "13856:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13858:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "13858:16:5"
																			},
																			"nativeSrc": "13858:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13858:18:5"
																		},
																		"nativeSrc": "13858:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "13858:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13781:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13781:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13788:66:5",
																		"nodeType": "YulLiteral",
																		"src": "13788:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13778:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "13778:2:5"
																},
																"nativeSrc": "13778:77:5",
																"nodeType": "YulFunctionCall",
																"src": "13778:77:5"
															},
															"nativeSrc": "13775:103:5",
															"nodeType": "YulIf",
															"src": "13775:103:5"
														},
														{
															"nativeSrc": "13887:20:5",
															"nodeType": "YulAssignment",
															"src": "13887:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13898:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13898:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13905:1:5",
																		"nodeType": "YulLiteral",
																		"src": "13905:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13894:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13894:3:5"
																},
																"nativeSrc": "13894:13:5",
																"nodeType": "YulFunctionCall",
																"src": "13894:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13887:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13887:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "13680:233:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13709:5:5",
														"nodeType": "YulTypedName",
														"src": "13709:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13719:3:5",
														"nodeType": "YulTypedName",
														"src": "13719:3:5",
														"type": ""
													}
												],
												"src": "13680:233:5"
											},
											{
												"body": {
													"nativeSrc": "14025:58:5",
													"nodeType": "YulBlock",
													"src": "14025:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14047:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14047:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14055:1:5",
																				"nodeType": "YulLiteral",
																				"src": "14055:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14043:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14043:3:5"
																		},
																		"nativeSrc": "14043:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14043:14:5"
																	},
																	{
																		"hexValue": "47616d652068617320656e646564",
																		"kind": "string",
																		"nativeSrc": "14059:16:5",
																		"nodeType": "YulLiteral",
																		"src": "14059:16:5",
																		"type": "",
																		"value": "Game has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14036:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14036:6:5"
																},
																"nativeSrc": "14036:40:5",
																"nodeType": "YulFunctionCall",
																"src": "14036:40:5"
															},
															"nativeSrc": "14036:40:5",
															"nodeType": "YulExpressionStatement",
															"src": "14036:40:5"
														}
													]
												},
												"name": "store_literal_in_memory_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea",
												"nativeSrc": "13919:164:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14017:6:5",
														"nodeType": "YulTypedName",
														"src": "14017:6:5",
														"type": ""
													}
												],
												"src": "13919:164:5"
											},
											{
												"body": {
													"nativeSrc": "14235:220:5",
													"nodeType": "YulBlock",
													"src": "14235:220:5",
													"statements": [
														{
															"nativeSrc": "14245:74:5",
															"nodeType": "YulAssignment",
															"src": "14245:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14311:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14311:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14316:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14316:2:5",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14252:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "14252:58:5"
																},
																"nativeSrc": "14252:67:5",
																"nodeType": "YulFunctionCall",
																"src": "14252:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14245:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14245:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14417:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14417:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea",
																	"nativeSrc": "14328:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "14328:88:5"
																},
																"nativeSrc": "14328:93:5",
																"nodeType": "YulFunctionCall",
																"src": "14328:93:5"
															},
															"nativeSrc": "14328:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "14328:93:5"
														},
														{
															"nativeSrc": "14430:19:5",
															"nodeType": "YulAssignment",
															"src": "14430:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14441:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14441:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14446:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14446:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14437:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14437:3:5"
																},
																"nativeSrc": "14437:12:5",
																"nodeType": "YulFunctionCall",
																"src": "14437:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14430:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14430:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14089:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14223:3:5",
														"nodeType": "YulTypedName",
														"src": "14223:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14231:3:5",
														"nodeType": "YulTypedName",
														"src": "14231:3:5",
														"type": ""
													}
												],
												"src": "14089:366:5"
											},
											{
												"body": {
													"nativeSrc": "14632:248:5",
													"nodeType": "YulBlock",
													"src": "14632:248:5",
													"statements": [
														{
															"nativeSrc": "14642:26:5",
															"nodeType": "YulAssignment",
															"src": "14642:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14654:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "14654:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14665:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14665:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14650:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14650:3:5"
																},
																"nativeSrc": "14650:18:5",
																"nodeType": "YulFunctionCall",
																"src": "14650:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14642:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14642:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14689:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14689:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14700:1:5",
																				"nodeType": "YulLiteral",
																				"src": "14700:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14685:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14685:3:5"
																		},
																		"nativeSrc": "14685:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14685:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14708:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "14708:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14714:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14714:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14704:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14704:3:5"
																		},
																		"nativeSrc": "14704:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14704:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14678:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14678:6:5"
																},
																"nativeSrc": "14678:47:5",
																"nodeType": "YulFunctionCall",
																"src": "14678:47:5"
															},
															"nativeSrc": "14678:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "14678:47:5"
														},
														{
															"nativeSrc": "14734:139:5",
															"nodeType": "YulAssignment",
															"src": "14734:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14868:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "14868:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14742:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "14742:124:5"
																},
																"nativeSrc": "14742:131:5",
																"nodeType": "YulFunctionCall",
																"src": "14742:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14734:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14734:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14461:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14612:9:5",
														"nodeType": "YulTypedName",
														"src": "14612:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14627:4:5",
														"nodeType": "YulTypedName",
														"src": "14627:4:5",
														"type": ""
													}
												],
												"src": "14461:419:5"
											},
											{
												"body": {
													"nativeSrc": "14928:52:5",
													"nodeType": "YulBlock",
													"src": "14928:52:5",
													"statements": [
														{
															"nativeSrc": "14938:35:5",
															"nodeType": "YulAssignment",
															"src": "14938:35:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14963:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14963:2:5",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14967:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "14967:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14959:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14959:3:5"
																},
																"nativeSrc": "14959:14:5",
																"nodeType": "YulFunctionCall",
																"src": "14959:14:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14938:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "14938:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "14886:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14909:5:5",
														"nodeType": "YulTypedName",
														"src": "14909:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14919:8:5",
														"nodeType": "YulTypedName",
														"src": "14919:8:5",
														"type": ""
													}
												],
												"src": "14886:94:5"
											},
											{
												"body": {
													"nativeSrc": "15033:47:5",
													"nodeType": "YulBlock",
													"src": "15033:47:5",
													"statements": [
														{
															"nativeSrc": "15043:31:5",
															"nodeType": "YulAssignment",
															"src": "15043:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15068:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "15068:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "15054:13:5",
																	"nodeType": "YulIdentifier",
																	"src": "15054:13:5"
																},
																"nativeSrc": "15054:20:5",
																"nodeType": "YulFunctionCall",
																"src": "15054:20:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15043:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "15043:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "14986:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15015:5:5",
														"nodeType": "YulTypedName",
														"src": "15015:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15025:7:5",
														"nodeType": "YulTypedName",
														"src": "15025:7:5",
														"type": ""
													}
												],
												"src": "14986:94:5"
											},
											{
												"body": {
													"nativeSrc": "15133:53:5",
													"nodeType": "YulBlock",
													"src": "15133:53:5",
													"statements": [
														{
															"nativeSrc": "15143:37:5",
															"nodeType": "YulAssignment",
															"src": "15143:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15174:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "15174:5:5"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "15154:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "15154:19:5"
																},
																"nativeSrc": "15154:26:5",
																"nodeType": "YulFunctionCall",
																"src": "15154:26:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15143:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "15143:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "15086:100:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15115:5:5",
														"nodeType": "YulTypedName",
														"src": "15115:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15125:7:5",
														"nodeType": "YulTypedName",
														"src": "15125:7:5",
														"type": ""
													}
												],
												"src": "15086:100:5"
											},
											{
												"body": {
													"nativeSrc": "15275:74:5",
													"nodeType": "YulBlock",
													"src": "15275:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15292:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "15292:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15335:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "15335:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "15317:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "15317:17:5"
																				},
																				"nativeSrc": "15317:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "15317:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "15297:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "15297:19:5"
																		},
																		"nativeSrc": "15297:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15297:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15285:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "15285:6:5"
																},
																"nativeSrc": "15285:58:5",
																"nodeType": "YulFunctionCall",
																"src": "15285:58:5"
															},
															"nativeSrc": "15285:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "15285:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "15192:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15263:5:5",
														"nodeType": "YulTypedName",
														"src": "15263:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15270:3:5",
														"nodeType": "YulTypedName",
														"src": "15270:3:5",
														"type": ""
													}
												],
												"src": "15192:157:5"
											},
											{
												"body": {
													"nativeSrc": "15402:32:5",
													"nodeType": "YulBlock",
													"src": "15402:32:5",
													"statements": [
														{
															"nativeSrc": "15412:16:5",
															"nodeType": "YulAssignment",
															"src": "15412:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "15423:5:5",
																"nodeType": "YulIdentifier",
																"src": "15423:5:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15412:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "15412:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "15355:79:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15384:5:5",
														"nodeType": "YulTypedName",
														"src": "15384:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15394:7:5",
														"nodeType": "YulTypedName",
														"src": "15394:7:5",
														"type": ""
													}
												],
												"src": "15355:79:5"
											},
											{
												"body": {
													"nativeSrc": "15523:74:5",
													"nodeType": "YulBlock",
													"src": "15523:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15540:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "15540:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15583:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "15583:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15565:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "15565:17:5"
																				},
																				"nativeSrc": "15565:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "15565:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "15545:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "15545:19:5"
																		},
																		"nativeSrc": "15545:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15545:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15533:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "15533:6:5"
																},
																"nativeSrc": "15533:58:5",
																"nodeType": "YulFunctionCall",
																"src": "15533:58:5"
															},
															"nativeSrc": "15533:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "15533:58:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "15440:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15511:5:5",
														"nodeType": "YulTypedName",
														"src": "15511:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15518:3:5",
														"nodeType": "YulTypedName",
														"src": "15518:3:5",
														"type": ""
													}
												],
												"src": "15440:157:5"
											},
											{
												"body": {
													"nativeSrc": "15747:253:5",
													"nodeType": "YulBlock",
													"src": "15747:253:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15820:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15820:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15829:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "15829:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "15758:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "15758:61:5"
																},
																"nativeSrc": "15758:75:5",
																"nodeType": "YulFunctionCall",
																"src": "15758:75:5"
															},
															"nativeSrc": "15758:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "15758:75:5"
														},
														{
															"nativeSrc": "15842:19:5",
															"nodeType": "YulAssignment",
															"src": "15842:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15853:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "15853:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15858:2:5",
																		"nodeType": "YulLiteral",
																		"src": "15858:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15849:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15849:3:5"
																},
																"nativeSrc": "15849:12:5",
																"nodeType": "YulFunctionCall",
																"src": "15849:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15842:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15842:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15933:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15933:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15942:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "15942:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "15871:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "15871:61:5"
																},
																"nativeSrc": "15871:75:5",
																"nodeType": "YulFunctionCall",
																"src": "15871:75:5"
															},
															"nativeSrc": "15871:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "15871:75:5"
														},
														{
															"nativeSrc": "15955:19:5",
															"nodeType": "YulAssignment",
															"src": "15955:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15966:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "15966:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15971:2:5",
																		"nodeType": "YulLiteral",
																		"src": "15971:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15962:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15962:3:5"
																},
																"nativeSrc": "15962:12:5",
																"nodeType": "YulFunctionCall",
																"src": "15962:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15955:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15955:3:5"
																}
															]
														},
														{
															"nativeSrc": "15984:10:5",
															"nodeType": "YulAssignment",
															"src": "15984:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "15991:3:5",
																"nodeType": "YulIdentifier",
																"src": "15991:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15984:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15984:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15603:397:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15718:3:5",
														"nodeType": "YulTypedName",
														"src": "15718:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15724:6:5",
														"nodeType": "YulTypedName",
														"src": "15724:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15732:6:5",
														"nodeType": "YulTypedName",
														"src": "15732:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15743:3:5",
														"nodeType": "YulTypedName",
														"src": "15743:3:5",
														"type": ""
													}
												],
												"src": "15603:397:5"
											},
											{
												"body": {
													"nativeSrc": "16132:206:5",
													"nodeType": "YulBlock",
													"src": "16132:206:5",
													"statements": [
														{
															"nativeSrc": "16142:26:5",
															"nodeType": "YulAssignment",
															"src": "16142:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16154:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "16154:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16165:2:5",
																		"nodeType": "YulLiteral",
																		"src": "16165:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16150:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16150:3:5"
																},
																"nativeSrc": "16150:18:5",
																"nodeType": "YulFunctionCall",
																"src": "16150:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16142:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "16142:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16222:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16222:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16235:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "16235:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16246:1:5",
																				"nodeType": "YulLiteral",
																				"src": "16246:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16231:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "16231:3:5"
																		},
																		"nativeSrc": "16231:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16231:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16178:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "16178:43:5"
																},
																"nativeSrc": "16178:71:5",
																"nodeType": "YulFunctionCall",
																"src": "16178:71:5"
															},
															"nativeSrc": "16178:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "16178:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16303:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16303:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16316:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "16316:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16327:2:5",
																				"nodeType": "YulLiteral",
																				"src": "16327:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16312:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "16312:3:5"
																		},
																		"nativeSrc": "16312:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16312:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16259:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "16259:43:5"
																},
																"nativeSrc": "16259:72:5",
																"nodeType": "YulFunctionCall",
																"src": "16259:72:5"
															},
															"nativeSrc": "16259:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "16259:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16006:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16096:9:5",
														"nodeType": "YulTypedName",
														"src": "16096:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16108:6:5",
														"nodeType": "YulTypedName",
														"src": "16108:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16116:6:5",
														"nodeType": "YulTypedName",
														"src": "16116:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16127:4:5",
														"nodeType": "YulTypedName",
														"src": "16127:4:5",
														"type": ""
													}
												],
												"src": "16006:332:5"
											},
											{
												"body": {
													"nativeSrc": "16498:288:5",
													"nodeType": "YulBlock",
													"src": "16498:288:5",
													"statements": [
														{
															"nativeSrc": "16508:26:5",
															"nodeType": "YulAssignment",
															"src": "16508:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16520:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "16520:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16531:2:5",
																		"nodeType": "YulLiteral",
																		"src": "16531:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16516:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16516:3:5"
																},
																"nativeSrc": "16516:18:5",
																"nodeType": "YulFunctionCall",
																"src": "16516:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16508:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "16508:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16588:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16588:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16601:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "16601:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16612:1:5",
																				"nodeType": "YulLiteral",
																				"src": "16612:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16597:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "16597:3:5"
																		},
																		"nativeSrc": "16597:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16597:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16544:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "16544:43:5"
																},
																"nativeSrc": "16544:71:5",
																"nodeType": "YulFunctionCall",
																"src": "16544:71:5"
															},
															"nativeSrc": "16544:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "16544:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16669:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16669:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16682:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "16682:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16693:2:5",
																				"nodeType": "YulLiteral",
																				"src": "16693:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16678:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "16678:3:5"
																		},
																		"nativeSrc": "16678:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16678:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16625:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "16625:43:5"
																},
																"nativeSrc": "16625:72:5",
																"nodeType": "YulFunctionCall",
																"src": "16625:72:5"
															},
															"nativeSrc": "16625:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "16625:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16751:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16751:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16764:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "16764:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16775:2:5",
																				"nodeType": "YulLiteral",
																				"src": "16775:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16760:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "16760:3:5"
																		},
																		"nativeSrc": "16760:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16760:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16707:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "16707:43:5"
																},
																"nativeSrc": "16707:72:5",
																"nodeType": "YulFunctionCall",
																"src": "16707:72:5"
															},
															"nativeSrc": "16707:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "16707:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16344:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16454:9:5",
														"nodeType": "YulTypedName",
														"src": "16454:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16466:6:5",
														"nodeType": "YulTypedName",
														"src": "16466:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16474:6:5",
														"nodeType": "YulTypedName",
														"src": "16474:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16482:6:5",
														"nodeType": "YulTypedName",
														"src": "16482:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16493:4:5",
														"nodeType": "YulTypedName",
														"src": "16493:4:5",
														"type": ""
													}
												],
												"src": "16344:442:5"
											},
											{
												"body": {
													"nativeSrc": "16832:76:5",
													"nodeType": "YulBlock",
													"src": "16832:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "16886:16:5",
																"nodeType": "YulBlock",
																"src": "16886:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16895:1:5",
																					"nodeType": "YulLiteral",
																					"src": "16895:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16898:1:5",
																					"nodeType": "YulLiteral",
																					"src": "16898:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16888:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "16888:6:5"
																			},
																			"nativeSrc": "16888:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "16888:12:5"
																		},
																		"nativeSrc": "16888:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "16888:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16855:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "16855:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16877:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "16877:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "16862:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "16862:14:5"
																				},
																				"nativeSrc": "16862:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "16862:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16852:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "16852:2:5"
																		},
																		"nativeSrc": "16852:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "16852:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16845:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "16845:6:5"
																},
																"nativeSrc": "16845:40:5",
																"nodeType": "YulFunctionCall",
																"src": "16845:40:5"
															},
															"nativeSrc": "16842:60:5",
															"nodeType": "YulIf",
															"src": "16842:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "16792:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16825:5:5",
														"nodeType": "YulTypedName",
														"src": "16825:5:5",
														"type": ""
													}
												],
												"src": "16792:116:5"
											},
											{
												"body": {
													"nativeSrc": "16974:77:5",
													"nodeType": "YulBlock",
													"src": "16974:77:5",
													"statements": [
														{
															"nativeSrc": "16984:22:5",
															"nodeType": "YulAssignment",
															"src": "16984:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16999:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "16999:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16993:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "16993:5:5"
																},
																"nativeSrc": "16993:13:5",
																"nodeType": "YulFunctionCall",
																"src": "16993:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16984:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "16984:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17039:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "17039:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "17015:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "17015:23:5"
																},
																"nativeSrc": "17015:30:5",
																"nodeType": "YulFunctionCall",
																"src": "17015:30:5"
															},
															"nativeSrc": "17015:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "17015:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "16914:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16952:6:5",
														"nodeType": "YulTypedName",
														"src": "16952:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16960:3:5",
														"nodeType": "YulTypedName",
														"src": "16960:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16968:5:5",
														"nodeType": "YulTypedName",
														"src": "16968:5:5",
														"type": ""
													}
												],
												"src": "16914:137:5"
											},
											{
												"body": {
													"nativeSrc": "17131:271:5",
													"nodeType": "YulBlock",
													"src": "17131:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "17177:83:5",
																"nodeType": "YulBlock",
																"src": "17177:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17179:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "17179:77:5"
																			},
																			"nativeSrc": "17179:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "17179:79:5"
																		},
																		"nativeSrc": "17179:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "17179:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17152:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "17152:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17161:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "17161:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17148:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "17148:3:5"
																		},
																		"nativeSrc": "17148:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "17148:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17173:2:5",
																		"nodeType": "YulLiteral",
																		"src": "17173:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17144:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "17144:3:5"
																},
																"nativeSrc": "17144:32:5",
																"nodeType": "YulFunctionCall",
																"src": "17144:32:5"
															},
															"nativeSrc": "17141:119:5",
															"nodeType": "YulIf",
															"src": "17141:119:5"
														},
														{
															"nativeSrc": "17270:125:5",
															"nodeType": "YulBlock",
															"src": "17270:125:5",
															"statements": [
																{
																	"nativeSrc": "17285:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17285:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17299:1:5",
																		"nodeType": "YulLiteral",
																		"src": "17299:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17289:6:5",
																			"nodeType": "YulTypedName",
																			"src": "17289:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17314:71:5",
																	"nodeType": "YulAssignment",
																	"src": "17314:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17357:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "17357:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17368:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "17368:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17353:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "17353:3:5"
																				},
																				"nativeSrc": "17353:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "17353:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17377:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "17377:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "17324:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "17324:28:5"
																		},
																		"nativeSrc": "17324:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "17324:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17314:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "17314:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "17057:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17101:9:5",
														"nodeType": "YulTypedName",
														"src": "17101:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17112:7:5",
														"nodeType": "YulTypedName",
														"src": "17112:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17124:6:5",
														"nodeType": "YulTypedName",
														"src": "17124:6:5",
														"type": ""
													}
												],
												"src": "17057:345:5"
											},
											{
												"body": {
													"nativeSrc": "17466:40:5",
													"nodeType": "YulBlock",
													"src": "17466:40:5",
													"statements": [
														{
															"nativeSrc": "17477:22:5",
															"nodeType": "YulAssignment",
															"src": "17477:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17493:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "17493:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17487:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "17487:5:5"
																},
																"nativeSrc": "17487:12:5",
																"nodeType": "YulFunctionCall",
																"src": "17487:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "17477:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "17477:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "17408:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17449:5:5",
														"nodeType": "YulTypedName",
														"src": "17449:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "17459:6:5",
														"nodeType": "YulTypedName",
														"src": "17459:6:5",
														"type": ""
													}
												],
												"src": "17408:98:5"
											},
											{
												"body": {
													"nativeSrc": "17625:34:5",
													"nodeType": "YulBlock",
													"src": "17625:34:5",
													"statements": [
														{
															"nativeSrc": "17635:18:5",
															"nodeType": "YulAssignment",
															"src": "17635:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "17650:3:5",
																"nodeType": "YulIdentifier",
																"src": "17650:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17635:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "17635:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17512:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17597:3:5",
														"nodeType": "YulTypedName",
														"src": "17597:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17602:6:5",
														"nodeType": "YulTypedName",
														"src": "17602:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17613:11:5",
														"nodeType": "YulTypedName",
														"src": "17613:11:5",
														"type": ""
													}
												],
												"src": "17512:147:5"
											},
											{
												"body": {
													"nativeSrc": "17727:77:5",
													"nodeType": "YulBlock",
													"src": "17727:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "17744:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "17744:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "17749:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "17749:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17754:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "17754:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "17738:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "17738:5:5"
																},
																"nativeSrc": "17738:23:5",
																"nodeType": "YulFunctionCall",
																"src": "17738:23:5"
															},
															"nativeSrc": "17738:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "17738:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "17781:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "17781:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "17786:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "17786:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17777:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "17777:3:5"
																		},
																		"nativeSrc": "17777:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "17777:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17795:1:5",
																		"nodeType": "YulLiteral",
																		"src": "17795:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17770:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "17770:6:5"
																},
																"nativeSrc": "17770:27:5",
																"nodeType": "YulFunctionCall",
																"src": "17770:27:5"
															},
															"nativeSrc": "17770:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "17770:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "17665:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "17709:3:5",
														"nodeType": "YulTypedName",
														"src": "17709:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "17714:3:5",
														"nodeType": "YulTypedName",
														"src": "17714:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17719:6:5",
														"nodeType": "YulTypedName",
														"src": "17719:6:5",
														"type": ""
													}
												],
												"src": "17665:139:5"
											},
											{
												"body": {
													"nativeSrc": "17918:278:5",
													"nodeType": "YulBlock",
													"src": "17918:278:5",
													"statements": [
														{
															"nativeSrc": "17928:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "17928:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17974:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "17974:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "17942:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "17942:31:5"
																},
																"nativeSrc": "17942:38:5",
																"nodeType": "YulFunctionCall",
																"src": "17942:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17932:6:5",
																	"nodeType": "YulTypedName",
																	"src": "17932:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17989:95:5",
															"nodeType": "YulAssignment",
															"src": "17989:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18072:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "18072:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18077:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "18077:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17996:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "17996:75:5"
																},
																"nativeSrc": "17996:88:5",
																"nodeType": "YulFunctionCall",
																"src": "17996:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17989:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "17989:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18132:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "18132:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18139:4:5",
																				"nodeType": "YulLiteral",
																				"src": "18139:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18128:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "18128:3:5"
																		},
																		"nativeSrc": "18128:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "18128:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18146:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "18146:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18151:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "18151:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18093:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "18093:34:5"
																},
																"nativeSrc": "18093:65:5",
																"nodeType": "YulFunctionCall",
																"src": "18093:65:5"
															},
															"nativeSrc": "18093:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "18093:65:5"
														},
														{
															"nativeSrc": "18167:23:5",
															"nodeType": "YulAssignment",
															"src": "18167:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18178:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "18178:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18183:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "18183:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18174:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "18174:3:5"
																},
																"nativeSrc": "18174:16:5",
																"nodeType": "YulFunctionCall",
																"src": "18174:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18167:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "18167:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17810:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17899:5:5",
														"nodeType": "YulTypedName",
														"src": "17899:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17906:3:5",
														"nodeType": "YulTypedName",
														"src": "17906:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17914:3:5",
														"nodeType": "YulTypedName",
														"src": "17914:3:5",
														"type": ""
													}
												],
												"src": "17810:386:5"
											},
											{
												"body": {
													"nativeSrc": "18336:137:5",
													"nodeType": "YulBlock",
													"src": "18336:137:5",
													"statements": [
														{
															"nativeSrc": "18347:100:5",
															"nodeType": "YulAssignment",
															"src": "18347:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18434:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "18434:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18443:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "18443:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18354:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "18354:79:5"
																},
																"nativeSrc": "18354:93:5",
																"nodeType": "YulFunctionCall",
																"src": "18354:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18347:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "18347:3:5"
																}
															]
														},
														{
															"nativeSrc": "18457:10:5",
															"nodeType": "YulAssignment",
															"src": "18457:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "18464:3:5",
																"nodeType": "YulIdentifier",
																"src": "18464:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18457:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "18457:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18202:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18315:3:5",
														"nodeType": "YulTypedName",
														"src": "18315:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18321:6:5",
														"nodeType": "YulTypedName",
														"src": "18321:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18332:3:5",
														"nodeType": "YulTypedName",
														"src": "18332:3:5",
														"type": ""
													}
												],
												"src": "18202:271:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game has not ended yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game is still active\")\n\n    }\n\n    function abi_encode_t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only winner can claim reward\")\n\n    }\n\n    function abi_encode_t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Current game is still active\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Previous reward not claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063aa9bbc0c116100c1578063dfbf53ae1161007a578063dfbf53ae1461034a578063e1f0c37614610368578063efc2937214610386578063f020044f146103a4578063f30d9470146103c2578063fd636322146103de57610156565b8063aa9bbc0c146102ac578063b88a802f146102ca578063b97dd9e2146102d4578063c010ce68146102f2578063d94504b914610310578063dd49756e1461032e57610156565b806356bf87411161011357806356bf87411461020c57806358830d6c1461022a5780636cbc2ded146102485780636f9fb98a146102525780638da5cb5b146102705780638e7ea5b21461028e57610156565b806301b62b781461015a5780630d7d559914610178578063228cb73314610196578063315a095d146101b45780633804c73d146101d05780633d18b912146101ee575b5f80fd5b6101626103e8565b60405161016f91906112f6565b60405180910390f35b6101806103fa565b60405161018d919061134e565b60405180910390f35b61019e61041f565b6040516101ab919061137f565b60405180910390f35b6101ce60048036038101906101c991906113c6565b610425565b005b6101d8610502565b6040516101e5919061137f565b60405180910390f35b6101f6610508565b604051610203919061137f565b60405180910390f35b610214610511565b604051610221919061144c565b60405180910390f35b610232610537565b60405161023f919061137f565b60405180910390f35b61025061053d565b005b61025a6106e7565b604051610267919061137f565b60405180910390f35b610278610787565b604051610285919061134e565b60405180910390f35b6102966107aa565b6040516102a3919061134e565b60405180910390f35b6102b46107d3565b6040516102c1919061137f565b60405180910390f35b6102d26107d9565b005b6102dc610994565b6040516102e9919061137f565b60405180910390f35b6102fa61099d565b60405161030791906112f6565b60405180910390f35b6103186109b2565b604051610325919061137f565b60405180910390f35b610348600480360381019061034391906113c6565b6109bb565b005b610352610a9a565b60405161035f919061134e565b60405180910390f35b610370610ac0565b60405161037d919061137f565b60405180910390f35b61038e610ac6565b60405161039b919061134e565b60405180910390f35b6103ac610aee565b6040516103b991906112f6565b60405180910390f35b6103dc60048036038101906103d79190611465565b610b00565b005b6103e6610e1c565b005b60085f9054906101000a900460ff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a990611523565b60405180910390fd5b6104ff3382600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f979092919063ffffffff16565b50565b60025481565b5f600754905090565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c190611523565b60405180910390fd5b60065f9054906101000a900460ff16610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f9061158b565b60405180910390fd5b60035460025461062891906115d6565b43101561066a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066190611653565b60405180910390fd5b5f60065f6101000a81548160ff02191690831515021790555060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610743919061134e565b602060405180830381865afa15801561075e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107829190611685565b905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b60065f9054906101000a900460ff1615610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f906116fa565b60405180910390fd5b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af90611762565b60405180910390fd5b60085f9054906101000a900460ff1615610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe906117ca565b60405180910390fd5b600160085f6101000a81548160ff021916908315150217905550610992600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600754600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f979092919063ffffffff16565b565b5f600154905090565b5f60085f9054906101000a900460ff16905090565b5f600554905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90611523565b60405180910390fd5b610a97333083600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611016909392919063ffffffff16565b50565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b5f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065f9054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8490611523565b60405180910390fd5b60065f9054906101000a900460ff1615610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd390611832565b60405180910390fd5b80600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c38919061134e565b602060405180830381865afa158015610c53573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c779190611685565b1015610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf9061189a565b60405180910390fd5b5f6001541115610d115760085f9054906101000a900460ff16610d10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0790611902565b60405180910390fd5b5b60015f815480929190610d2390611920565b919050555043600281905550816003819055505f60045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600581905550600160065f6101000a81548160ff0219169083151502179055505f600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806007819055505f60085f6101000a81548160ff0219169083151502179055505050565b60065f9054906101000a900460ff16610e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e619061158b565b60405180910390fd5b600354600254610e7a91906115d6565b4310610ebb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb2906119b1565b60405180910390fd5b5f33600154604051602001610ed1929190611a34565b604051602081830303815290604052805190602001205f1c90505f73ffffffffffffffffffffffffffffffffffffffff1660045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f47575060055481105b15610f94573360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055505b50565b611011838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610fca929190611a5f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611098565b505050565b611092848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161104b93929190611a86565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611098565b50505050565b5f6110c2828473ffffffffffffffffffffffffffffffffffffffff1661112d90919063ffffffff16565b90505f8151141580156110e65750808060200190518101906110e49190611ae5565b155b1561112857826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161111f919061134e565b60405180910390fd5b505050565b606061113a83835f611142565b905092915050565b60608147101561118957306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611180919061134e565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516111b19190611b62565b5f6040518083038185875af1925050503d805f81146111eb576040519150601f19603f3d011682016040523d82523d5f602084013e6111f0565b606091505b509150915061120086838361120b565b925050509392505050565b6060826112205761121b82611298565b611290565b5f825114801561124657505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561128857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161127f919061134e565b60405180910390fd5b819050611291565b5b9392505050565b5f815111156112aa5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8115159050919050565b6112f0816112dc565b82525050565b5f6020820190506113095f8301846112e7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113388261130f565b9050919050565b6113488161132e565b82525050565b5f6020820190506113615f83018461133f565b92915050565b5f819050919050565b61137981611367565b82525050565b5f6020820190506113925f830184611370565b92915050565b5f80fd5b6113a581611367565b81146113af575f80fd5b50565b5f813590506113c08161139c565b92915050565b5f602082840312156113db576113da611398565b5b5f6113e8848285016113b2565b91505092915050565b5f819050919050565b5f61141461140f61140a8461130f565b6113f1565b61130f565b9050919050565b5f611425826113fa565b9050919050565b5f6114368261141b565b9050919050565b6114468161142c565b82525050565b5f60208201905061145f5f83018461143d565b92915050565b5f806040838503121561147b5761147a611398565b5b5f611488858286016113b2565b9250506020611499858286016113b2565b9150509250929050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61150d6021836114a3565b9150611518826114b3565b604082019050919050565b5f6020820190508181035f83015261153a81611501565b9050919050565b7f47616d65206973206e6f742061637469766500000000000000000000000000005f82015250565b5f6115756012836114a3565b915061158082611541565b602082019050919050565b5f6020820190508181035f8301526115a281611569565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e082611367565b91506115eb83611367565b9250828201905080821115611603576116026115a9565b5b92915050565b7f47616d6520686173206e6f7420656e64656420796574000000000000000000005f82015250565b5f61163d6016836114a3565b915061164882611609565b602082019050919050565b5f6020820190508181035f83015261166a81611631565b9050919050565b5f8151905061167f8161139c565b92915050565b5f6020828403121561169a57611699611398565b5b5f6116a784828501611671565b91505092915050565b7f47616d65206973207374696c6c206163746976650000000000000000000000005f82015250565b5f6116e46014836114a3565b91506116ef826116b0565b602082019050919050565b5f6020820190508181035f830152611711816116d8565b9050919050565b7f4f6e6c792077696e6e65722063616e20636c61696d20726577617264000000005f82015250565b5f61174c601c836114a3565b915061175782611718565b602082019050919050565b5f6020820190508181035f83015261177981611740565b9050919050565b7f52657761726420616c726561647920636c61696d6564000000000000000000005f82015250565b5f6117b46016836114a3565b91506117bf82611780565b602082019050919050565b5f6020820190508181035f8301526117e1816117a8565b9050919050565b7f43757272656e742067616d65206973207374696c6c20616374697665000000005f82015250565b5f61181c601c836114a3565b9150611827826117e8565b602082019050919050565b5f6020820190508181035f83015261184981611810565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e63650000000000005f82015250565b5f611884601a836114a3565b915061188f82611850565b602082019050919050565b5f6020820190508181035f8301526118b181611878565b9050919050565b7f50726576696f757320726577617264206e6f7420636c61696d656400000000005f82015250565b5f6118ec601b836114a3565b91506118f7826118b8565b602082019050919050565b5f6020820190508181035f830152611919816118e0565b9050919050565b5f61192a82611367565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361195c5761195b6115a9565b5b600182019050919050565b7f47616d652068617320656e6465640000000000000000000000000000000000005f82015250565b5f61199b600e836114a3565b91506119a682611967565b602082019050919050565b5f6020820190508181035f8301526119c88161198f565b9050919050565b5f8160601b9050919050565b5f6119e5826119cf565b9050919050565b5f6119f6826119db565b9050919050565b611a0e611a098261132e565b6119ec565b82525050565b5f819050919050565b611a2e611a2982611367565b611a14565b82525050565b5f611a3f82856119fd565b601482019150611a4f8284611a1d565b6020820191508190509392505050565b5f604082019050611a725f83018561133f565b611a7f6020830184611370565b9392505050565b5f606082019050611a995f83018661133f565b611aa6602083018561133f565b611ab36040830184611370565b949350505050565b611ac4816112dc565b8114611ace575f80fd5b50565b5f81519050611adf81611abb565b92915050565b5f60208284031215611afa57611af9611398565b5b5f611b0784828501611ad1565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f611b3c82611b10565b611b468185611b1a565b9350611b56818560208601611b24565b80840191505092915050565b5f611b6d8284611b32565b91508190509291505056fea2646970667358221220f6082913535f43b89bf9aebdea207fb259858c7488315dd82f1ad6880e9f0b2b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA9BBC0C GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xDFBF53AE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xE1F0C376 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xEFC29372 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xF020044F EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xF30D9470 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xFD636322 EQ PUSH2 0x3DE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0xAA9BBC0C EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xB97DD9E2 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC010CE68 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xD94504B9 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x32E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x56BF8741 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x56BF8741 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x58830D6C EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x6CBC2DED EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x28E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x1B62B78 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xD7D5599 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x228CB733 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3804C73D EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x53D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH2 0x7D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E6 PUSH2 0xE1C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A9 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FF CALLER DUP3 PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF97 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C1 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST NUMBER LT ISZERO PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x661 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x782 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81F SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x992 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF97 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA97 CALLER ADDRESS DUP4 PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1016 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB84 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD3 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST LT ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 SLOAD GT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD23 SWAP1 PUSH2 0x1920 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP NUMBER PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE61 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0xE7A SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST NUMBER LT PUSH2 0xEBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF47 JUMPI POP PUSH1 0x5 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0xF94 JUMPI CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1011 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xFCA SWAP3 SWAP2 SWAP1 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1098 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1092 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x104B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1098 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10C2 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1128 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x113A DUP4 DUP4 PUSH0 PUSH2 0x1142 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1189 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x11EB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1200 DUP7 DUP4 DUP4 PUSH2 0x120B JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1220 JUMPI PUSH2 0x121B DUP3 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1246 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1288 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127F SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1291 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x12AA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F0 DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1309 PUSH0 DUP4 ADD DUP5 PUSH2 0x12E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1338 DUP3 PUSH2 0x130F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1348 DUP2 PUSH2 0x132E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1361 PUSH0 DUP4 ADD DUP5 PUSH2 0x133F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1379 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1392 PUSH0 DUP4 ADD DUP5 PUSH2 0x1370 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13A5 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP2 EQ PUSH2 0x13AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C0 DUP2 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DB JUMPI PUSH2 0x13DA PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E8 DUP5 DUP3 DUP6 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1414 PUSH2 0x140F PUSH2 0x140A DUP5 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x13F1 JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1425 DUP3 PUSH2 0x13FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1436 DUP3 PUSH2 0x141B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1446 DUP2 PUSH2 0x142C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145F PUSH0 DUP4 ADD DUP5 PUSH2 0x143D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH2 0x147A PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1488 DUP6 DUP3 DUP7 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1499 DUP6 DUP3 DUP7 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x150D PUSH1 0x21 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1518 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x153A DUP2 PUSH2 0x1501 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D65206973206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1575 PUSH1 0x12 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1580 DUP3 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15A2 DUP2 PUSH2 0x1569 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15E0 DUP3 PUSH2 0x1367 JUMP JUMPDEST SWAP2 POP PUSH2 0x15EB DUP4 PUSH2 0x1367 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1603 JUMPI PUSH2 0x1602 PUSH2 0x15A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D6520686173206E6F7420656E6465642079657400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x163D PUSH1 0x16 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1648 DUP3 PUSH2 0x1609 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x166A DUP2 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x167F DUP2 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169A JUMPI PUSH2 0x1699 PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A7 DUP5 DUP3 DUP6 ADD PUSH2 0x1671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D65206973207374696C6C20616374697665000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16E4 PUSH1 0x14 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EF DUP3 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1711 DUP2 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792077696E6E65722063616E20636C61696D2072657761726400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x174C PUSH1 0x1C DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1757 DUP3 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1779 DUP2 PUSH2 0x1740 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420616C726561647920636C61696D656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17B4 PUSH1 0x16 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E1 DUP2 PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E742067616D65206973207374696C6C2061637469766500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181C PUSH1 0x1C DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1827 DUP3 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1849 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1884 PUSH1 0x1A DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x188F DUP3 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B1 DUP2 PUSH2 0x1878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726576696F757320726577617264206E6F7420636C61696D65640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18EC PUSH1 0x1B DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F7 DUP3 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1919 DUP2 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x192A DUP3 PUSH2 0x1367 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x195C JUMPI PUSH2 0x195B PUSH2 0x15A9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D652068617320656E646564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x199B PUSH1 0xE DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A6 DUP3 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C8 DUP2 PUSH2 0x198F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19E5 DUP3 PUSH2 0x19CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19F6 DUP3 PUSH2 0x19DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0E PUSH2 0x1A09 DUP3 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x19EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2E PUSH2 0x1A29 DUP3 PUSH2 0x1367 JUMP JUMPDEST PUSH2 0x1A14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3F DUP3 DUP6 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1A4F DUP3 DUP5 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A72 PUSH0 DUP4 ADD DUP6 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x1A7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1370 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A99 PUSH0 DUP4 ADD DUP7 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x1AA6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x1AB3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1370 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1AC4 DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1ACE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ADF DUP2 PUSH2 0x1ABB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AF9 PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B07 DUP5 DUP3 DUP6 ADD PUSH2 0x1AD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3C DUP3 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x1B46 DUP2 DUP6 PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x1B56 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B24 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6D DUP3 DUP5 PUSH2 0x1B32 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 ADDMOD 0x29 SGT MSTORE8 PUSH0 NUMBER 0xB8 SWAP12 0xF9 0xAE 0xBD 0xEA KECCAK256 PUSH32 0xB259858C7488315DD82F1AD6880E9F0B2B64736F6C634300081A003300000000 ",
							"sourceMap": "258:3919:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;587:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3062:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;385:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3795:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;653:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;494:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2202:263;;;:::i;:::-;;4061:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3665:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;356:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2492:316;;;:::i;:::-;;3531:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3931:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3385:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2862:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;559:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;421:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3232:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;530:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1062:706;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1776:418;;;:::i;:::-;;615:25;;;;;;;;;;;;;:::o;455:32::-;;;;;;;;;;;;;:::o;587:21::-;;;;:::o;3062:119::-;744:5;;;;;;;;;;730:19;;:10;:19;;;722:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3130:43:::1;3154:10;3166:6;3130:10;;;;;;;;;;;:23;;;;:43;;;;;:::i;:::-;3062:119:::0;:::o;385:29::-;;;;:::o;3795:83::-;3837:7;3864:6;;3857:13;;3795:83;:::o;653:24::-;;;;;;;;;;;;;:::o;494:29::-;;;;:::o;2202:263::-;744:5;;;;;;;;;;730:19;;:10;:19;;;722:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2257:10:::1;;;;;;;;;;;2249:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2342:12;;2325:14;;:29;;;;:::i;:::-;2309:12;:45;;2301:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2415:5;2402:10;;:18;;;;;;;;;;;;;;;;;;2440:17;;;;;;;;;;;2431:6;;:26;;;;;;;;;;;;;;;;;;2202:263::o:0;4061:113::-;4112:7;4135:10;;;;;;;;;;;:20;;;4164:4;4135:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4128:42;;4061:113;:::o;329:20::-;;;;;;;;;;;;:::o;3665:83::-;3707:7;3734:6;;;;;;;;;;;3727:13;;3665:83;:::o;356:22::-;;;;:::o;2492:316::-;2542:10;;;;;;;;;;;2541:11;2533:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2610:6;;;;;;;;;;;2596:20;;:10;:20;;;2588:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2669:13;;;;;;;;;;;2668:14;2660:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2746:4;2730:13;;:20;;;;;;;;;;;;;;;;;;2761:39;2785:6;;;;;;;;;;;2793;;2761:10;;;;;;;;;;;:23;;;;:39;;;;;:::i;:::-;2492:316::o;3531:90::-;3579:7;3606;;3599:14;;3531:90;:::o;3931:93::-;3979:4;4003:13;;;;;;;;;;;3996:20;;3931:93;:::o;3385:99::-;3435:7;3462:14;;3455:21;;3385:99;:::o;2862:137::-;744:5;;;;;;;;;;730:19;;:10;:19;;;722:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2929:62:::1;2957:10;2977:4;2984:6;2929:10;;;;;;;;;;;:27;;;;:62;;;;;;:::i;:::-;2862:137:::0;:::o;559:21::-;;;;;;;;;;;;;:::o;421:27::-;;;;:::o;3232:105::-;3285:7;3312:17;;;;;;;;;;;3305:24;;3232:105;:::o;530:22::-;;;;;;;;;;;;;:::o;1062:706::-;744:5;;;;;;;;;;730:19;;:10;:19;;;722:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1161:10:::1;;;;;;;;;;;1160:11;1152:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1293:7;1254:10;;;;;;;;;;;:20;;;1283:4;1254:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;1246:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1366:1;1356:7;;:11;1352:97;;;1392:13;;;;;;;;;;;1384:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1352:97;1469:7;;:9;;;;;;;;;:::i;:::-;;;;;;1506:12;1489:14;:29;;;;1544:13;1529:12;:28;;;;1596:1;1568:17;;:30;;;;;;;;;;;;;;;;;;1626:17;1609:14;:34;;;;1667:4;1654:10;;:17;;;;;;;;;;;;;;;;;;1699:1;1682:6;;:19;;;;;;;;;;;;;;;;;;1721:7;1712:6;:16;;;;1755:5;1739:13;;:21;;;;;;;;;;;;;;;;;;1062:706:::0;;:::o;1776:418::-;862:10;;;;;;;;;;;854:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1869:12:::1;;1852:14;;:29;;;;:::i;:::-;1837:12;:44;1829:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1921:18;1977:10;1989:7;;1960:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1950:48;;;;;;1942:57;;1921:78;;2053:1;2024:31;;:17;;;;;;;;;;;:31;;;:62;;;;2072:14;;2059:10;:27;2024:62;2020:167;;;2123:10;2103:17;;:30;;;;;;;;;;;;;;;;;;2165:10;2148:14;:27;;;;2020:167;1818:376;1776:418::o:0;1303:160:2:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1702:188::-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:90:5;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o;1020:77::-;1057:7;1086:5;1075:16;;1020:77;;;:::o;1103:118::-;1190:24;1208:5;1190:24;:::i;:::-;1185:3;1178:37;1103:118;;:::o;1227:222::-;1320:4;1358:2;1347:9;1343:18;1335:26;;1371:71;1439:1;1428:9;1424:17;1415:6;1371:71;:::i;:::-;1227:222;;;;:::o;1536:117::-;1645:1;1642;1635:12;1782:122;1855:24;1873:5;1855:24;:::i;:::-;1848:5;1845:35;1835:63;;1894:1;1891;1884:12;1835:63;1782:122;:::o;1910:139::-;1956:5;1994:6;1981:20;1972:29;;2010:33;2037:5;2010:33;:::i;:::-;1910:139;;;;:::o;2055:329::-;2114:6;2163:2;2151:9;2142:7;2138:23;2134:32;2131:119;;;2169:79;;:::i;:::-;2131:119;2289:1;2314:53;2359:7;2350:6;2339:9;2335:22;2314:53;:::i;:::-;2304:63;;2260:117;2055:329;;;;:::o;2390:60::-;2418:3;2439:5;2432:12;;2390:60;;;:::o;2456:142::-;2506:9;2539:53;2557:34;2566:24;2584:5;2566:24;:::i;:::-;2557:34;:::i;:::-;2539:53;:::i;:::-;2526:66;;2456:142;;;:::o;2604:126::-;2654:9;2687:37;2718:5;2687:37;:::i;:::-;2674:50;;2604:126;;;:::o;2736:139::-;2799:9;2832:37;2863:5;2832:37;:::i;:::-;2819:50;;2736:139;;;:::o;2881:157::-;2981:50;3025:5;2981:50;:::i;:::-;2976:3;2969:63;2881:157;;:::o;3044:248::-;3150:4;3188:2;3177:9;3173:18;3165:26;;3201:84;3282:1;3271:9;3267:17;3258:6;3201:84;:::i;:::-;3044:248;;;;:::o;3298:474::-;3366:6;3374;3423:2;3411:9;3402:7;3398:23;3394:32;3391:119;;;3429:79;;:::i;:::-;3391:119;3549:1;3574:53;3619:7;3610:6;3599:9;3595:22;3574:53;:::i;:::-;3564:63;;3520:117;3676:2;3702:53;3747:7;3738:6;3727:9;3723:22;3702:53;:::i;:::-;3692:63;;3647:118;3298:474;;;;;:::o;3778:169::-;3862:11;3896:6;3891:3;3884:19;3936:4;3931:3;3927:14;3912:29;;3778:169;;;;:::o;3953:220::-;4093:34;4089:1;4081:6;4077:14;4070:58;4162:3;4157:2;4149:6;4145:15;4138:28;3953:220;:::o;4179:366::-;4321:3;4342:67;4406:2;4401:3;4342:67;:::i;:::-;4335:74;;4418:93;4507:3;4418:93;:::i;:::-;4536:2;4531:3;4527:12;4520:19;;4179:366;;;:::o;4551:419::-;4717:4;4755:2;4744:9;4740:18;4732:26;;4804:9;4798:4;4794:20;4790:1;4779:9;4775:17;4768:47;4832:131;4958:4;4832:131;:::i;:::-;4824:139;;4551:419;;;:::o;4976:168::-;5116:20;5112:1;5104:6;5100:14;5093:44;4976:168;:::o;5150:366::-;5292:3;5313:67;5377:2;5372:3;5313:67;:::i;:::-;5306:74;;5389:93;5478:3;5389:93;:::i;:::-;5507:2;5502:3;5498:12;5491:19;;5150:366;;;:::o;5522:419::-;5688:4;5726:2;5715:9;5711:18;5703:26;;5775:9;5769:4;5765:20;5761:1;5750:9;5746:17;5739:47;5803:131;5929:4;5803:131;:::i;:::-;5795:139;;5522:419;;;:::o;5947:180::-;5995:77;5992:1;5985:88;6092:4;6089:1;6082:15;6116:4;6113:1;6106:15;6133:191;6173:3;6192:20;6210:1;6192:20;:::i;:::-;6187:25;;6226:20;6244:1;6226:20;:::i;:::-;6221:25;;6269:1;6266;6262:9;6255:16;;6290:3;6287:1;6284:10;6281:36;;;6297:18;;:::i;:::-;6281:36;6133:191;;;;:::o;6330:172::-;6470:24;6466:1;6458:6;6454:14;6447:48;6330:172;:::o;6508:366::-;6650:3;6671:67;6735:2;6730:3;6671:67;:::i;:::-;6664:74;;6747:93;6836:3;6747:93;:::i;:::-;6865:2;6860:3;6856:12;6849:19;;6508:366;;;:::o;6880:419::-;7046:4;7084:2;7073:9;7069:18;7061:26;;7133:9;7127:4;7123:20;7119:1;7108:9;7104:17;7097:47;7161:131;7287:4;7161:131;:::i;:::-;7153:139;;6880:419;;;:::o;7305:143::-;7362:5;7393:6;7387:13;7378:22;;7409:33;7436:5;7409:33;:::i;:::-;7305:143;;;;:::o;7454:351::-;7524:6;7573:2;7561:9;7552:7;7548:23;7544:32;7541:119;;;7579:79;;:::i;:::-;7541:119;7699:1;7724:64;7780:7;7771:6;7760:9;7756:22;7724:64;:::i;:::-;7714:74;;7670:128;7454:351;;;;:::o;7811:170::-;7951:22;7947:1;7939:6;7935:14;7928:46;7811:170;:::o;7987:366::-;8129:3;8150:67;8214:2;8209:3;8150:67;:::i;:::-;8143:74;;8226:93;8315:3;8226:93;:::i;:::-;8344:2;8339:3;8335:12;8328:19;;7987:366;;;:::o;8359:419::-;8525:4;8563:2;8552:9;8548:18;8540:26;;8612:9;8606:4;8602:20;8598:1;8587:9;8583:17;8576:47;8640:131;8766:4;8640:131;:::i;:::-;8632:139;;8359:419;;;:::o;8784:178::-;8924:30;8920:1;8912:6;8908:14;8901:54;8784:178;:::o;8968:366::-;9110:3;9131:67;9195:2;9190:3;9131:67;:::i;:::-;9124:74;;9207:93;9296:3;9207:93;:::i;:::-;9325:2;9320:3;9316:12;9309:19;;8968:366;;;:::o;9340:419::-;9506:4;9544:2;9533:9;9529:18;9521:26;;9593:9;9587:4;9583:20;9579:1;9568:9;9564:17;9557:47;9621:131;9747:4;9621:131;:::i;:::-;9613:139;;9340:419;;;:::o;9765:172::-;9905:24;9901:1;9893:6;9889:14;9882:48;9765:172;:::o;9943:366::-;10085:3;10106:67;10170:2;10165:3;10106:67;:::i;:::-;10099:74;;10182:93;10271:3;10182:93;:::i;:::-;10300:2;10295:3;10291:12;10284:19;;9943:366;;;:::o;10315:419::-;10481:4;10519:2;10508:9;10504:18;10496:26;;10568:9;10562:4;10558:20;10554:1;10543:9;10539:17;10532:47;10596:131;10722:4;10596:131;:::i;:::-;10588:139;;10315:419;;;:::o;10740:178::-;10880:30;10876:1;10868:6;10864:14;10857:54;10740:178;:::o;10924:366::-;11066:3;11087:67;11151:2;11146:3;11087:67;:::i;:::-;11080:74;;11163:93;11252:3;11163:93;:::i;:::-;11281:2;11276:3;11272:12;11265:19;;10924:366;;;:::o;11296:419::-;11462:4;11500:2;11489:9;11485:18;11477:26;;11549:9;11543:4;11539:20;11535:1;11524:9;11520:17;11513:47;11577:131;11703:4;11577:131;:::i;:::-;11569:139;;11296:419;;;:::o;11721:176::-;11861:28;11857:1;11849:6;11845:14;11838:52;11721:176;:::o;11903:366::-;12045:3;12066:67;12130:2;12125:3;12066:67;:::i;:::-;12059:74;;12142:93;12231:3;12142:93;:::i;:::-;12260:2;12255:3;12251:12;12244:19;;11903:366;;;:::o;12275:419::-;12441:4;12479:2;12468:9;12464:18;12456:26;;12528:9;12522:4;12518:20;12514:1;12503:9;12499:17;12492:47;12556:131;12682:4;12556:131;:::i;:::-;12548:139;;12275:419;;;:::o;12700:177::-;12840:29;12836:1;12828:6;12824:14;12817:53;12700:177;:::o;12883:366::-;13025:3;13046:67;13110:2;13105:3;13046:67;:::i;:::-;13039:74;;13122:93;13211:3;13122:93;:::i;:::-;13240:2;13235:3;13231:12;13224:19;;12883:366;;;:::o;13255:419::-;13421:4;13459:2;13448:9;13444:18;13436:26;;13508:9;13502:4;13498:20;13494:1;13483:9;13479:17;13472:47;13536:131;13662:4;13536:131;:::i;:::-;13528:139;;13255:419;;;:::o;13680:233::-;13719:3;13742:24;13760:5;13742:24;:::i;:::-;13733:33;;13788:66;13781:5;13778:77;13775:103;;13858:18;;:::i;:::-;13775:103;13905:1;13898:5;13894:13;13887:20;;13680:233;;;:::o;13919:164::-;14059:16;14055:1;14047:6;14043:14;14036:40;13919:164;:::o;14089:366::-;14231:3;14252:67;14316:2;14311:3;14252:67;:::i;:::-;14245:74;;14328:93;14417:3;14328:93;:::i;:::-;14446:2;14441:3;14437:12;14430:19;;14089:366;;;:::o;14461:419::-;14627:4;14665:2;14654:9;14650:18;14642:26;;14714:9;14708:4;14704:20;14700:1;14689:9;14685:17;14678:47;14742:131;14868:4;14742:131;:::i;:::-;14734:139;;14461:419;;;:::o;14886:94::-;14919:8;14967:5;14963:2;14959:14;14938:35;;14886:94;;;:::o;14986:::-;15025:7;15054:20;15068:5;15054:20;:::i;:::-;15043:31;;14986:94;;;:::o;15086:100::-;15125:7;15154:26;15174:5;15154:26;:::i;:::-;15143:37;;15086:100;;;:::o;15192:157::-;15297:45;15317:24;15335:5;15317:24;:::i;:::-;15297:45;:::i;:::-;15292:3;15285:58;15192:157;;:::o;15355:79::-;15394:7;15423:5;15412:16;;15355:79;;;:::o;15440:157::-;15545:45;15565:24;15583:5;15565:24;:::i;:::-;15545:45;:::i;:::-;15540:3;15533:58;15440:157;;:::o;15603:397::-;15743:3;15758:75;15829:3;15820:6;15758:75;:::i;:::-;15858:2;15853:3;15849:12;15842:19;;15871:75;15942:3;15933:6;15871:75;:::i;:::-;15971:2;15966:3;15962:12;15955:19;;15991:3;15984:10;;15603:397;;;;;:::o;16006:332::-;16127:4;16165:2;16154:9;16150:18;16142:26;;16178:71;16246:1;16235:9;16231:17;16222:6;16178:71;:::i;:::-;16259:72;16327:2;16316:9;16312:18;16303:6;16259:72;:::i;:::-;16006:332;;;;;:::o;16344:442::-;16493:4;16531:2;16520:9;16516:18;16508:26;;16544:71;16612:1;16601:9;16597:17;16588:6;16544:71;:::i;:::-;16625:72;16693:2;16682:9;16678:18;16669:6;16625:72;:::i;:::-;16707;16775:2;16764:9;16760:18;16751:6;16707:72;:::i;:::-;16344:442;;;;;;:::o;16792:116::-;16862:21;16877:5;16862:21;:::i;:::-;16855:5;16852:32;16842:60;;16898:1;16895;16888:12;16842:60;16792:116;:::o;16914:137::-;16968:5;16999:6;16993:13;16984:22;;17015:30;17039:5;17015:30;:::i;:::-;16914:137;;;;:::o;17057:345::-;17124:6;17173:2;17161:9;17152:7;17148:23;17144:32;17141:119;;;17179:79;;:::i;:::-;17141:119;17299:1;17324:61;17377:7;17368:6;17357:9;17353:22;17324:61;:::i;:::-;17314:71;;17270:125;17057:345;;;;:::o;17408:98::-;17459:6;17493:5;17487:12;17477:22;;17408:98;;;:::o;17512:147::-;17613:11;17650:3;17635:18;;17512:147;;;;:::o;17665:139::-;17754:6;17749:3;17744;17738:23;17795:1;17786:6;17781:3;17777:16;17770:27;17665:139;;;:::o;17810:386::-;17914:3;17942:38;17974:5;17942:38;:::i;:::-;17996:88;18077:6;18072:3;17996:88;:::i;:::-;17989:95;;18093:65;18151:6;18146:3;18139:4;18132:5;18128:16;18093:65;:::i;:::-;18183:6;18178:3;18174:16;18167:23;;17918:278;17810:386;;;;:::o;18202:271::-;18332:3;18354:93;18443:3;18434:6;18354:93;:::i;:::-;18347:100;;18464:3;18457:10;;18202:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1417200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimReward()": "infinite",
								"currentMinAddress()": "2554",
								"currentMinHash()": "2470",
								"depositTokens(uint256)": "infinite",
								"endGame()": "infinite",
								"epochId()": "2448",
								"gameActive()": "2554",
								"gameDuration()": "2469",
								"gameStartBlock()": "2537",
								"getContractBalance()": "infinite",
								"getCurrentEpoch()": "2499",
								"getCurrentMinAddress()": "2581",
								"getCurrentMinHash()": "2543",
								"getReward()": "2566",
								"getWinner()": "2699",
								"iambestone()": "infinite",
								"isRewardClaimed()": "2562",
								"luckyToken()": "infinite",
								"owner()": "2616",
								"reward()": "2493",
								"rewardClaimed()": "2490",
								"startNewGame(uint256,uint256)": "infinite",
								"winner()": "2581",
								"withdrawTokens(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 4177,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 923,
									"end": 1050,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 982,
									"end": 992,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 974,
									"end": 979,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 979,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 974,
									"end": 992,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 974,
									"end": 992,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 974,
									"end": 992,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 974,
									"end": 992,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1013,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1003,
									"end": 1013,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1042,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 4177,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6082913535f43b89bf9aebdea207fb259858c7488315dd82f1ad6880e9f0b2b64736f6c634300081a0033",
									".code": [
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "AA9BBC0C"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "DFBF53AE"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "DFBF53AE"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "E1F0C376"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "EFC29372"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "F020044F"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "F30D9470"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "FD636322"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "AA9BBC0C"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "B88A802F"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "B97DD9E2"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "C010CE68"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "D94504B9"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "DD49756E"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "56BF8741"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "56BF8741"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "58830D6C"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "6CBC2DED"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "6F9FB98A"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "8E7EA5B2"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1B62B78"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "D7D5599"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "228CB733"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "315A095D"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "3804C73D"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "3D18B912"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 258,
											"end": 4177,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 615,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 615,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 455,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 455,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 587,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 587,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3062,
											"end": 3181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3062,
											"end": 3181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 385,
											"end": 414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 385,
											"end": 414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3795,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3795,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 653,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 653,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 494,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 494,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2202,
											"end": 2465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4061,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4061,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 329,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 329,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3665,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3665,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 356,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 356,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2492,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3531,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3531,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3931,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3931,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3385,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3385,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2862,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2862,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 559,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 559,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 421,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 421,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3232,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3232,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 530,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 530,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1062,
											"end": 1768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1062,
											"end": 1768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1776,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 615,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 455,
											"end": 487,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 455,
											"end": 487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 587,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 740,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 722,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3154,
											"end": 3164,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3172,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3130,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3173,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3130,
											"end": 3173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 414,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 385,
											"end": 414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 653,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 494,
											"end": 523,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 494,
											"end": 523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2202,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 740,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 722,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2257,
											"end": 2267,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2249,
											"end": 2290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2249,
											"end": 2290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2342,
											"end": 2354,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2325,
											"end": 2354,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2354,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2325,
											"end": 2354,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2354,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2325,
											"end": 2354,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2321,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2354,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2354,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2301,
											"end": 2381,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2301,
											"end": 2381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2415,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2402,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2420,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2440,
											"end": 2457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2431,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4135,
											"end": 4155,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4135,
											"end": 4170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4135,
											"end": 4170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4135,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 349,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 356,
											"end": 378,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 356,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2552,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2533,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2533,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2606,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2588,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2588,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 2682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2660,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2660,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2730,
											"end": 2743,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2730,
											"end": 2743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2800,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2800,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2800,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2800,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2761,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3606,
											"end": 3613,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3599,
											"end": 3613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3599,
											"end": 3613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 3983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3435,
											"end": 3442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3476,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3462,
											"end": 3476,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 740,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 722,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2957,
											"end": 2967,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 2981,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 2990,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2929,
											"end": 2956,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2929,
											"end": 2956,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2929,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 559,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 448,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 421,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 530,
											"end": 552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 744,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 744,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 740,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 730,
											"end": 749,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 722,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 722,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 722,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1161,
											"end": 1171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1160,
											"end": 1171,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1152,
											"end": 1204,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1152,
											"end": 1204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1300,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1264,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1283,
											"end": 1287,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1254,
											"end": 1289,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1289,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1254,
											"end": 1289,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1254,
											"end": 1289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1300,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1246,
											"end": 1331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1246,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1356,
											"end": 1363,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1367,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1449,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1352,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1392,
											"end": 1405,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1384,
											"end": 1437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1384,
											"end": 1437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1352,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1469,
											"end": 1476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1469,
											"end": 1478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1518,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1489,
											"end": 1518,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1518,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1518,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1529,
											"end": 1557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1557,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1596,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1568,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1598,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1609,
											"end": 1623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1609,
											"end": 1643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1643,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1667,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1654,
											"end": 1664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1654,
											"end": 1664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1682,
											"end": 1688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1701,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1728,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1712,
											"end": 1728,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1728,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1739,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1776,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 862,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 862,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 862,
											"end": 872,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 862,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 862,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 862,
											"end": 872,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 862,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 862,
											"end": 872,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 862,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 862,
											"end": 872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 854,
											"end": 895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 895,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 854,
											"end": 895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 854,
											"end": 895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 854,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 854,
											"end": 895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 895,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 854,
											"end": 895,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 854,
											"end": 895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1869,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1852,
											"end": 1866,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1852,
											"end": 1881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1881,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1829,
											"end": 1900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1829,
											"end": 1900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1987,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1989,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1960,
											"end": 1997,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1998,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1998,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1998,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1998,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1998,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1999,
											"modifierDepth": 1,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1999,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2055,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2041,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2055,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2055,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2024,
											"end": 2086,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2072,
											"end": 2086,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2086,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2024,
											"end": 2086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2020,
											"end": 2187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2133,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2175,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2148,
											"end": 2175,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2175,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2020,
											"end": 2187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 434,
											"end": 560,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 434,
											"end": 560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 553,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 500,
											"end": 554,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 489,
											"end": 554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 434,
											"end": 560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 434,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 566,
											"end": 662,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 566,
											"end": 662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 603,
											"end": 610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 650,
											"end": 655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 632,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 656,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 621,
											"end": 656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 621,
											"end": 656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 566,
											"end": 662,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 566,
											"end": 662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 566,
											"end": 662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 566,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 668,
											"end": 786,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 668,
											"end": 786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 755,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 755,
											"end": 779,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 755,
											"end": 779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 750,
											"end": 753,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 743,
											"end": 780,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 668,
											"end": 786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 668,
											"end": 786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 668,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 885,
											"end": 889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 921,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 908,
											"end": 926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 900,
											"end": 926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 936,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 792,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1097,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1020,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1208,
											"end": 1213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1190,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1360,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1361,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1371,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1855,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1845,
											"end": 1880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1896,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1961,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2001,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2010,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2160,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2142,
											"end": 2149,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2169,
											"end": 2248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2314,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2390,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2598,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2456,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 2557,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2566,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2566,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2557,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2591,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2557,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2539,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2592,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 2539,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2526,
											"end": 2592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2526,
											"end": 2592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2730,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2604,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2687,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2724,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2687,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2730,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2875,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2736,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2832,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 2832,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3038,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2881,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 3025,
											"end": 3030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2981,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3031,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 2981,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 2979,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3032,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3292,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3044,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3201,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3285,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 3201,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3292,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3772,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3298,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3423,
											"end": 3425,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3409,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3421,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3426,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3510,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 3391,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 3429,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3429,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3508,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 3429,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3510,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 3391,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 3619,
											"end": 3626,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3574,
											"end": 3627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3627,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 3574,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3627,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 3736,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3702,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3755,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 3702,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3947,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3778,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 3894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3947,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4173,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3953,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4127,
											"name": "PUSH",
											"source": 5,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4077,
											"end": 4091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4165,
											"name": "PUSH",
											"source": 5,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4157,
											"end": 4159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4166,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4401,
											"end": 4404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4342,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4409,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 4342,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4409,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4507,
											"end": 4510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4418,
											"end": 4511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4511,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4418,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4538,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4531,
											"end": 4534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4520,
											"end": 4539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4520,
											"end": 4539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4179,
											"end": 4545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4757,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4788,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 4958,
											"end": 4962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4832,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4963,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 4832,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4824,
											"end": 4963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4824,
											"end": 4963,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 5144,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4976,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "PUSH",
											"source": 5,
											"value": "47616D65206973206E6F74206163746976650000000000000000000000000000"
										},
										{
											"begin": 5112,
											"end": 5113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5114,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 5144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 5144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5516,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 5150,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5292,
											"end": 5295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 5377,
											"end": 5379,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5372,
											"end": 5375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5313,
											"end": 5380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5380,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 5313,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5380,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 5389,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5482,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 5389,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5502,
											"end": 5505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5941,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5522,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5703,
											"end": 5729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5703,
											"end": 5729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5759,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5763,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5739,
											"end": 5786,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 5803,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5934,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 5803,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 6127,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5947,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5995,
											"end": 6072,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5992,
											"end": 5993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 6073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6092,
											"end": 6096,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6089,
											"end": 6090,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6082,
											"end": 6097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6121,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6324,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6133,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 6192,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6212,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6192,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6212,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 6244,
											"end": 6245,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 6226,
											"end": 6246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6246,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 6226,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6246,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6270,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6294,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6317,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 6281,
											"end": 6317,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6297,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6297,
											"end": 6315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6315,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6297,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6317,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 6281,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6324,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6502,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 6330,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6494,
											"name": "PUSH",
											"source": 5,
											"value": "47616D6520686173206E6F7420656E6465642079657400000000000000000000"
										},
										{
											"begin": 6466,
											"end": 6467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6874,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 6508,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6653,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 6730,
											"end": 6733,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6671,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6664,
											"end": 6738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6664,
											"end": 6738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6747,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 6836,
											"end": 6839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6747,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 6747,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6747,
											"end": 6840,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 6747,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 6863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6856,
											"end": 6868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7073,
											"end": 7082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7061,
											"end": 7087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7061,
											"end": 7087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7133,
											"end": 7142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7123,
											"end": 7143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7117,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7104,
											"end": 7121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7097,
											"end": 7144,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 7287,
											"end": 7291,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7161,
											"end": 7292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6880,
											"end": 7299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7448,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 7305,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7387,
											"end": 7400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 7436,
											"end": 7441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 7409,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7442,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 7409,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7448,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7805,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 7454,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7561,
											"end": 7570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7552,
											"end": 7559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7548,
											"end": 7571,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 7541,
											"end": 7660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7579,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 7579,
											"end": 7658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7658,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7579,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7660,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 7541,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7724,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 7780,
											"end": 7787,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7777,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7756,
											"end": 7778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7724,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 7724,
											"end": 7788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7724,
											"end": 7788,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 7724,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7714,
											"end": 7788,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7714,
											"end": 7788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7805,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7805,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7811,
											"end": 7981,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7811,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7951,
											"end": 7973,
											"name": "PUSH",
											"source": 5,
											"value": "47616D65206973207374696C6C20616374697665000000000000000000000000"
										},
										{
											"begin": 7947,
											"end": 7948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7935,
											"end": 7949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7928,
											"end": 7974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7811,
											"end": 7981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7811,
											"end": 7981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7987,
											"end": 8353,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7987,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8129,
											"end": 8132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 8214,
											"end": 8216,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 8209,
											"end": 8212,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8150,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 8150,
											"end": 8217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8150,
											"end": 8217,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 8150,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8143,
											"end": 8217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8143,
											"end": 8217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 8315,
											"end": 8318,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 8226,
											"end": 8319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8319,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 8226,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8344,
											"end": 8346,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8339,
											"end": 8342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7987,
											"end": 8353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7987,
											"end": 8353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7987,
											"end": 8353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7987,
											"end": 8353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8359,
											"end": 8778,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 8359,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8565,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8548,
											"end": 8566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8612,
											"end": 8621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8576,
											"end": 8623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8640,
											"end": 8771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 8766,
											"end": 8770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8640,
											"end": 8771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8640,
											"end": 8771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8640,
											"end": 8771,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 8640,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8359,
											"end": 8778,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8359,
											"end": 8778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8359,
											"end": 8778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8359,
											"end": 8778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8784,
											"end": 8962,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8784,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8954,
											"name": "PUSH",
											"source": 5,
											"value": "4F6E6C792077696E6E65722063616E20636C61696D2072657761726400000000"
										},
										{
											"begin": 8920,
											"end": 8921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8908,
											"end": 8922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8901,
											"end": 8955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8784,
											"end": 8962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8784,
											"end": 8962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 9195,
											"end": 9197,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 9190,
											"end": 9193,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9131,
											"end": 9198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9124,
											"end": 9198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9124,
											"end": 9198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 9296,
											"end": 9299,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 9207,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9325,
											"end": 9327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9320,
											"end": 9323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9316,
											"end": 9328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8968,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9529,
											"end": 9547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9593,
											"end": 9602,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9583,
											"end": 9603,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9577,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9564,
											"end": 9581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9557,
											"end": 9604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9621,
											"end": 9752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9765,
											"end": 9937,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 9765,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9905,
											"end": 9929,
											"name": "PUSH",
											"source": 5,
											"value": "52657761726420616C726561647920636C61696D656400000000000000000000"
										},
										{
											"begin": 9901,
											"end": 9902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9893,
											"end": 9899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9889,
											"end": 9903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9882,
											"end": 9930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9765,
											"end": 9937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9765,
											"end": 9937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 10309,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9943,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 10170,
											"end": 10172,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 10106,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10173,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 10106,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 10271,
											"end": 10274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10182,
											"end": 10275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10275,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 10182,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10300,
											"end": 10302,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10295,
											"end": 10298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10291,
											"end": 10303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10284,
											"end": 10303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10284,
											"end": 10303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 10309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 10309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 10309,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 10309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10734,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 10315,
											"end": 10734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10504,
											"end": 10522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10558,
											"end": 10578,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10543,
											"end": 10552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10596,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 10722,
											"end": 10726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10596,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10596,
											"end": 10727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10596,
											"end": 10727,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 10596,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10588,
											"end": 10727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10588,
											"end": 10727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10740,
											"end": 10918,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 10740,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 10910,
											"name": "PUSH",
											"source": 5,
											"value": "43757272656E742067616D65206973207374696C6C2061637469766500000000"
										},
										{
											"begin": 10876,
											"end": 10877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 10878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10857,
											"end": 10911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10740,
											"end": 10918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10740,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11066,
											"end": 11069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 11151,
											"end": 11153,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 11146,
											"end": 11149,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11087,
											"end": 11154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 11087,
											"end": 11154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11087,
											"end": 11154,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 11087,
											"end": 11154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11080,
											"end": 11154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11080,
											"end": 11154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11163,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 11252,
											"end": 11255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11163,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 11163,
											"end": 11256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11163,
											"end": 11256,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 11163,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11281,
											"end": 11283,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11276,
											"end": 11279,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11272,
											"end": 11284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11265,
											"end": 11284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11265,
											"end": 11284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 11290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11462,
											"end": 11466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11500,
											"end": 11502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11489,
											"end": 11498,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11485,
											"end": 11503,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11477,
											"end": 11503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11477,
											"end": 11503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11549,
											"end": 11558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11543,
											"end": 11547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11539,
											"end": 11559,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11535,
											"end": 11536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11524,
											"end": 11533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11520,
											"end": 11537,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11513,
											"end": 11560,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11577,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 11703,
											"end": 11707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11577,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 11577,
											"end": 11708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11577,
											"end": 11708,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 11577,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11569,
											"end": 11708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11569,
											"end": 11708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11296,
											"end": 11715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11721,
											"end": 11897,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11721,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11861,
											"end": 11889,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E7420746F6B656E2062616C616E6365000000000000"
										},
										{
											"begin": 11857,
											"end": 11858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11845,
											"end": 11859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11838,
											"end": 11890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11721,
											"end": 11897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11721,
											"end": 11897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11903,
											"end": 12269,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11903,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12045,
											"end": 12048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12066,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12130,
											"end": 12132,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 12125,
											"end": 12128,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12066,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 12066,
											"end": 12133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12066,
											"end": 12133,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12066,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12059,
											"end": 12133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12059,
											"end": 12133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12142,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 12231,
											"end": 12234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12142,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 12142,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12142,
											"end": 12235,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 12142,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12260,
											"end": 12262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12255,
											"end": 12258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12251,
											"end": 12263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12244,
											"end": 12263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12244,
											"end": 12263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11903,
											"end": 12269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11903,
											"end": 12269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11903,
											"end": 12269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11903,
											"end": 12269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12694,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 12275,
											"end": 12694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12441,
											"end": 12445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12481,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12468,
											"end": 12477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12464,
											"end": 12482,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12456,
											"end": 12482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12456,
											"end": 12482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12537,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12522,
											"end": 12526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12518,
											"end": 12538,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12514,
											"end": 12515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12512,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12499,
											"end": 12516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12492,
											"end": 12539,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12556,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 12682,
											"end": 12686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12556,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 12556,
											"end": 12687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12556,
											"end": 12687,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 12556,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12548,
											"end": 12687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12548,
											"end": 12687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12700,
											"end": 12877,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 12700,
											"end": 12877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12840,
											"end": 12869,
											"name": "PUSH",
											"source": 5,
											"value": "50726576696F757320726577617264206E6F7420636C61696D65640000000000"
										},
										{
											"begin": 12836,
											"end": 12837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12828,
											"end": 12834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12817,
											"end": 12870,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12700,
											"end": 12877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12700,
											"end": 12877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13025,
											"end": 13028,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13046,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 13110,
											"end": 13112,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 13105,
											"end": 13108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13046,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 13046,
											"end": 13113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13046,
											"end": 13113,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 13046,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13039,
											"end": 13113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13039,
											"end": 13113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13122,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 13211,
											"end": 13214,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13122,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 13122,
											"end": 13215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13122,
											"end": 13215,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 13122,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13242,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13238,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13231,
											"end": 13243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13224,
											"end": 13243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13224,
											"end": 13243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12883,
											"end": 13249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12883,
											"end": 13249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13421,
											"end": 13425,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13459,
											"end": 13461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13448,
											"end": 13457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13444,
											"end": 13462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13436,
											"end": 13462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13436,
											"end": 13462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13508,
											"end": 13517,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13502,
											"end": 13506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13498,
											"end": 13518,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13494,
											"end": 13495,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13483,
											"end": 13492,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13479,
											"end": 13496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13472,
											"end": 13519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13536,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 13662,
											"end": 13666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13536,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 13536,
											"end": 13667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13536,
											"end": 13667,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 13536,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13528,
											"end": 13667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13528,
											"end": 13667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13680,
											"end": 13913,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 13680,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13719,
											"end": 13722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13742,
											"end": 13766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 13760,
											"end": 13765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13742,
											"end": 13766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 13742,
											"end": 13766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13742,
											"end": 13766,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 13742,
											"end": 13766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13733,
											"end": 13766,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13733,
											"end": 13766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13788,
											"end": 13854,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13781,
											"end": 13786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13778,
											"end": 13855,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13775,
											"end": 13878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 13775,
											"end": 13878,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13858,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 13858,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 13858,
											"end": 13876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13858,
											"end": 13876,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 13858,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13775,
											"end": 13878,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 13775,
											"end": 13878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13905,
											"end": 13906,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 13898,
											"end": 13903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13894,
											"end": 13907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13680,
											"end": 13913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13680,
											"end": 13913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13680,
											"end": 13913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13680,
											"end": 13913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13919,
											"end": 14083,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 13919,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH",
											"source": 5,
											"value": "47616D652068617320656E646564000000000000000000000000000000000000"
										},
										{
											"begin": 14055,
											"end": 14056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14047,
											"end": 14053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14036,
											"end": 14076,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13919,
											"end": 14083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13919,
											"end": 14083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14089,
											"end": 14455,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 14089,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14231,
											"end": 14234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14252,
											"end": 14319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 14316,
											"end": 14318,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 14311,
											"end": 14314,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 14252,
											"end": 14319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14319,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 14252,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14245,
											"end": 14319,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14245,
											"end": 14319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14328,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 14417,
											"end": 14420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14328,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 14328,
											"end": 14421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14328,
											"end": 14421,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 14328,
											"end": 14421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14446,
											"end": 14448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14441,
											"end": 14444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14437,
											"end": 14449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14430,
											"end": 14449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14430,
											"end": 14449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14089,
											"end": 14455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14089,
											"end": 14455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14089,
											"end": 14455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14089,
											"end": 14455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14880,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 14461,
											"end": 14880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14627,
											"end": 14631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14667,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14654,
											"end": 14663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14650,
											"end": 14668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14642,
											"end": 14668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14642,
											"end": 14668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14714,
											"end": 14723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14708,
											"end": 14712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14704,
											"end": 14724,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14700,
											"end": 14701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14689,
											"end": 14698,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14685,
											"end": 14702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14742,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 14868,
											"end": 14872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14742,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 14742,
											"end": 14873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14742,
											"end": 14873,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 14742,
											"end": 14873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14734,
											"end": 14873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14734,
											"end": 14873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14886,
											"end": 14980,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 14886,
											"end": 14980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14919,
											"end": 14927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 14972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14963,
											"end": 14965,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 14959,
											"end": 14973,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 14938,
											"end": 14973,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14938,
											"end": 14973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14886,
											"end": 14980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14886,
											"end": 14980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14886,
											"end": 14980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14886,
											"end": 14980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14986,
											"end": 15080,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 14986,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15025,
											"end": 15032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15054,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 15068,
											"end": 15073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15054,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 15054,
											"end": 15074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15054,
											"end": 15074,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 15054,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15043,
											"end": 15074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15043,
											"end": 15074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14986,
											"end": 15080,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14986,
											"end": 15080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14986,
											"end": 15080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14986,
											"end": 15080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15086,
											"end": 15186,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 15086,
											"end": 15186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15125,
											"end": 15132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 15174,
											"end": 15179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15154,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 15154,
											"end": 15180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15154,
											"end": 15180,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 15154,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15143,
											"end": 15180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15143,
											"end": 15180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15086,
											"end": 15186,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15086,
											"end": 15186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15086,
											"end": 15186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15086,
											"end": 15186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15349,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 15192,
											"end": 15349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15297,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 15317,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 15335,
											"end": 15340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 15317,
											"end": 15341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15341,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 15317,
											"end": 15341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15297,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 15297,
											"end": 15342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15297,
											"end": 15342,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 15297,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15285,
											"end": 15343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15355,
											"end": 15434,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 15355,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15394,
											"end": 15401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15423,
											"end": 15428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15412,
											"end": 15428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15412,
											"end": 15428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15355,
											"end": 15434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15355,
											"end": 15434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15355,
											"end": 15434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15355,
											"end": 15434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15440,
											"end": 15597,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 15440,
											"end": 15597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15545,
											"end": 15590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 15565,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 15583,
											"end": 15588,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15565,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 15565,
											"end": 15589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15565,
											"end": 15589,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 15565,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15545,
											"end": 15590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 15545,
											"end": 15590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15545,
											"end": 15590,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 15545,
											"end": 15590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15540,
											"end": 15543,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15533,
											"end": 15591,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15440,
											"end": 15597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15440,
											"end": 15597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15440,
											"end": 15597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 16000,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 15603,
											"end": 16000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15758,
											"end": 15833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 15829,
											"end": 15832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15820,
											"end": 15826,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15758,
											"end": 15833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 15758,
											"end": 15833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15758,
											"end": 15833,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 15758,
											"end": 15833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15860,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 15853,
											"end": 15856,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15849,
											"end": 15861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15842,
											"end": 15861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15842,
											"end": 15861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15871,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 15942,
											"end": 15945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15933,
											"end": 15939,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15871,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 15871,
											"end": 15946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15871,
											"end": 15946,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 15871,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15971,
											"end": 15973,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15966,
											"end": 15969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15962,
											"end": 15974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15955,
											"end": 15974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15955,
											"end": 15974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15991,
											"end": 15994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15984,
											"end": 15994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15984,
											"end": 15994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 16000,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 16000,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 16000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 16000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 16000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15603,
											"end": 16000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16006,
											"end": 16338,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 16006,
											"end": 16338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16127,
											"end": 16131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16165,
											"end": 16167,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16154,
											"end": 16163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16150,
											"end": 16168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16142,
											"end": 16168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16142,
											"end": 16168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16178,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 16246,
											"end": 16247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16235,
											"end": 16244,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16231,
											"end": 16248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16222,
											"end": 16228,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16178,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16178,
											"end": 16249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16178,
											"end": 16249,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 16178,
											"end": 16249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16259,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 16327,
											"end": 16329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16316,
											"end": 16325,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16303,
											"end": 16309,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16259,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 16259,
											"end": 16331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16259,
											"end": 16331,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 16259,
											"end": 16331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16006,
											"end": 16338,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16006,
											"end": 16338,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16006,
											"end": 16338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16006,
											"end": 16338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16006,
											"end": 16338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16006,
											"end": 16338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16344,
											"end": 16786,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 16344,
											"end": 16786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16493,
											"end": 16497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16531,
											"end": 16533,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 16520,
											"end": 16529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16516,
											"end": 16534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16508,
											"end": 16534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16508,
											"end": 16534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16544,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 16612,
											"end": 16613,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16610,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16597,
											"end": 16614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16588,
											"end": 16594,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 16544,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16544,
											"end": 16615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16544,
											"end": 16615,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 16544,
											"end": 16615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16625,
											"end": 16697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 16693,
											"end": 16695,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16678,
											"end": 16696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16669,
											"end": 16675,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16625,
											"end": 16697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16625,
											"end": 16697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16625,
											"end": 16697,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 16625,
											"end": 16697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16707,
											"end": 16779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 16775,
											"end": 16777,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16764,
											"end": 16773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16760,
											"end": 16778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16751,
											"end": 16757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16707,
											"end": 16779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 16707,
											"end": 16779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16707,
											"end": 16779,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 16707,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16344,
											"end": 16786,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 16344,
											"end": 16786,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16344,
											"end": 16786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16344,
											"end": 16786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16344,
											"end": 16786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16344,
											"end": 16786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16344,
											"end": 16786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16792,
											"end": 16908,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 16792,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16862,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 16877,
											"end": 16882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16862,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 16862,
											"end": 16883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16862,
											"end": 16883,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 16862,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16855,
											"end": 16860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16852,
											"end": 16884,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16842,
											"end": 16902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 16842,
											"end": 16902,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16898,
											"end": 16899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16895,
											"end": 16896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16888,
											"end": 16900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16842,
											"end": 16902,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 16842,
											"end": 16902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16792,
											"end": 16908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16792,
											"end": 16908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16914,
											"end": 17051,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 16914,
											"end": 17051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16968,
											"end": 16973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16999,
											"end": 17005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16984,
											"end": 17006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16984,
											"end": 17006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17015,
											"end": 17045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 17039,
											"end": 17044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17015,
											"end": 17045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 17015,
											"end": 17045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17015,
											"end": 17045,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 17015,
											"end": 17045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16914,
											"end": 17051,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16914,
											"end": 17051,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16914,
											"end": 17051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16914,
											"end": 17051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16914,
											"end": 17051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17057,
											"end": 17402,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 17057,
											"end": 17402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17124,
											"end": 17130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17173,
											"end": 17175,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17161,
											"end": 17170,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17152,
											"end": 17159,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17148,
											"end": 17171,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17176,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 17141,
											"end": 17260,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17141,
											"end": 17260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 17141,
											"end": 17260,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17179,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 17179,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 17179,
											"end": 17258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17179,
											"end": 17258,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 17179,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17141,
											"end": 17260,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 17141,
											"end": 17260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17299,
											"end": 17300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17324,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 17377,
											"end": 17384,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17368,
											"end": 17374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17357,
											"end": 17366,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17353,
											"end": 17375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17324,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 17324,
											"end": 17385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17324,
											"end": 17385,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 17324,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17314,
											"end": 17385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17314,
											"end": 17385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17270,
											"end": 17395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17057,
											"end": 17402,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17057,
											"end": 17402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17057,
											"end": 17402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17057,
											"end": 17402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17057,
											"end": 17402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17408,
											"end": 17506,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 17408,
											"end": 17506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17459,
											"end": 17465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17493,
											"end": 17498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17487,
											"end": 17499,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17477,
											"end": 17499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17477,
											"end": 17499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17408,
											"end": 17506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17408,
											"end": 17506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17408,
											"end": 17506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17408,
											"end": 17506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17512,
											"end": 17659,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 17512,
											"end": 17659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17613,
											"end": 17624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17650,
											"end": 17653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17635,
											"end": 17653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17635,
											"end": 17653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17512,
											"end": 17659,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17512,
											"end": 17659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17512,
											"end": 17659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17512,
											"end": 17659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17512,
											"end": 17659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17754,
											"end": 17760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17749,
											"end": 17752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17744,
											"end": 17747,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17738,
											"end": 17761,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 17795,
											"end": 17796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17786,
											"end": 17792,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17781,
											"end": 17784,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17777,
											"end": 17793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17770,
											"end": 17797,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17665,
											"end": 17804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17810,
											"end": 18196,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 17810,
											"end": 18196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17914,
											"end": 17917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17942,
											"end": 17980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 17974,
											"end": 17979,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17942,
											"end": 17980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 17942,
											"end": 17980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17942,
											"end": 17980,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 17942,
											"end": 17980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17996,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 18077,
											"end": 18083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18072,
											"end": 18075,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17996,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 17996,
											"end": 18084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17996,
											"end": 18084,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 17996,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17989,
											"end": 18084,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17989,
											"end": 18084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18093,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 18151,
											"end": 18157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18146,
											"end": 18149,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 18139,
											"end": 18143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18132,
											"end": 18137,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 18128,
											"end": 18144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18093,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 18093,
											"end": 18158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18093,
											"end": 18158,
											"name": "tag",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 18093,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18183,
											"end": 18189,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18178,
											"end": 18181,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 18174,
											"end": 18190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18167,
											"end": 18190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18167,
											"end": 18190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17918,
											"end": 18196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17810,
											"end": 18196,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17810,
											"end": 18196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17810,
											"end": 18196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17810,
											"end": 18196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17810,
											"end": 18196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18202,
											"end": 18473,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 18202,
											"end": 18473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18332,
											"end": 18335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 18443,
											"end": 18446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18434,
											"end": 18440,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 18354,
											"end": 18447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "tag",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18347,
											"end": 18447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18347,
											"end": 18447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18464,
											"end": 18467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18457,
											"end": 18467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18457,
											"end": 18467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18202,
											"end": 18473,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 18202,
											"end": 18473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18202,
											"end": 18473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18202,
											"end": 18473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18202,
											"end": 18473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/MinHashCameContract_v3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimReward()": "b88a802f",
							"currentMinAddress()": "0d7d5599",
							"currentMinHash()": "58830d6c",
							"depositTokens(uint256)": "dd49756e",
							"endGame()": "6cbc2ded",
							"epochId()": "aa9bbc0c",
							"gameActive()": "f020044f",
							"gameDuration()": "e1f0c376",
							"gameStartBlock()": "3804c73d",
							"getContractBalance()": "6f9fb98a",
							"getCurrentEpoch()": "b97dd9e2",
							"getCurrentMinAddress()": "efc29372",
							"getCurrentMinHash()": "d94504b9",
							"getReward()": "3d18b912",
							"getWinner()": "8e7ea5b2",
							"iambestone()": "fd636322",
							"isRewardClaimed()": "c010ce68",
							"luckyToken()": "56bf8741",
							"owner()": "8da5cb5b",
							"reward()": "228cb733",
							"rewardClaimed()": "01b62b78",
							"startNewGame(uint256,uint256)": "f30d9470",
							"winner()": "dfbf53ae",
							"withdrawTokens(uint256)": "315a095d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_luckyTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMinAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMinHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameStartBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentMinAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentMinHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iambestone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRewardClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"startNewGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MinHashCameContract_v3.sol\":\"MinHashGameContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/MinHashCameContract_v3.sol\":{\"keccak256\":\"0x97e72786820393d81559dc77d4a2600f0571f17fdfa11461845ee04d28538f17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://639bff082900663df665f974e6fe44510b5c65649546cc126175ff9d7e97cdc1\",\"dweb:/ipfs/QmbGyrrYXvwHLtdDo9XSSenrAuFqUSpkKWqW7yehBcYNc6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 666,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 668,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "epochId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 670,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "gameStartBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 672,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "gameDuration",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 674,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "currentMinAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 676,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "currentMinHash",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 678,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "gameActive",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 680,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "winner",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 682,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "reward",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 684,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "rewardClaimed",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 687,
								"contract": "contracts/MinHashCameContract_v3.sol:MinHashGameContract",
								"label": "luckyToken",
								"offset": 1,
								"slot": "8",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"contracts/MinHashCameContract_v3.sol": {
				"ast": {
					"absolutePath": "contracts/MinHashCameContract_v3.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"MinHashGameContract": [
							1024
						],
						"SafeERC20": [
							403
						]
					},
					"id": 1025,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 78,
							"src": "131:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 404,
							"src": "189:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MinHashGameContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1024,
							"linearizedBaseContracts": [
								1024
							],
							"name": "MinHashGameContract",
							"nameLocation": "267:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 664,
									"libraryName": {
										"id": 661,
										"name": "SafeERC20",
										"nameLocations": [
											"300:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "300:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "294:27:4",
									"typeName": {
										"id": 663,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 662,
											"name": "IERC20",
											"nameLocations": [
												"314:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "314:6:4"
										},
										"referencedDeclaration": 77,
										"src": "314:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 666,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "344:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "329:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 665,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aa9bbc0c",
									"id": 668,
									"mutability": "mutable",
									"name": "epochId",
									"nameLocation": "371:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "356:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 667,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "356:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3804c73d",
									"id": 670,
									"mutability": "mutable",
									"name": "gameStartBlock",
									"nameLocation": "400:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "385:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 669,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1f0c376",
									"id": 672,
									"mutability": "mutable",
									"name": "gameDuration",
									"nameLocation": "436:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "421:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 671,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "421:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d7d5599",
									"id": 674,
									"mutability": "mutable",
									"name": "currentMinAddress",
									"nameLocation": "470:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "455:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 673,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "455:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58830d6c",
									"id": 676,
									"mutability": "mutable",
									"name": "currentMinHash",
									"nameLocation": "509:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "494:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 675,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "494:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f020044f",
									"id": 678,
									"mutability": "mutable",
									"name": "gameActive",
									"nameLocation": "542:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "530:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 677,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "530:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dfbf53ae",
									"id": 680,
									"mutability": "mutable",
									"name": "winner",
									"nameLocation": "574:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "559:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 679,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "228cb733",
									"id": 682,
									"mutability": "mutable",
									"name": "reward",
									"nameLocation": "602:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "587:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 681,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01b62b78",
									"id": 684,
									"mutability": "mutable",
									"name": "rewardClaimed",
									"nameLocation": "627:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "615:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 683,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "615:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56bf8741",
									"id": 687,
									"mutability": "mutable",
									"name": "luckyToken",
									"nameLocation": "667:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "653:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 686,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 685,
											"name": "IERC20",
											"nameLocations": [
												"653:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "653:6:4"
										},
										"referencedDeclaration": 77,
										"src": "653:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "711:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 690,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "730:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "734:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "730:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 692,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "744:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "730:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "751:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "722:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "722:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "722:65:4"
											},
											{
												"id": 697,
												"nodeType": "PlaceholderStatement",
												"src": "798:1:4"
											}
										]
									},
									"id": 699,
									"name": "onlyOwner",
									"nameLocation": "699:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:2:4"
									},
									"src": "690:117:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "843:72:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 702,
															"name": "gameActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "862:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206973206e6f7420616374697665",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "874:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844",
																"typeString": "literal_string \"Game is not active\""
															},
															"value": "Game is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844",
																"typeString": "literal_string \"Game is not active\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "854:41:4"
											},
											{
												"id": 706,
												"nodeType": "PlaceholderStatement",
												"src": "906:1:4"
											}
										]
									},
									"id": 708,
									"name": "gameIsActive",
									"nameLocation": "828:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:4"
									},
									"src": "819:96:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "963:87:4",
										"statements": [
											{
												"expression": {
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 713,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "974:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 714,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "982:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "986:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "982:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "974:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "974:18:4"
											},
											{
												"expression": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 718,
														"name": "luckyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "1003:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 720,
																"name": "_luckyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "1023:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 719,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1016:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1016:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1003:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "1003:39:4"
											}
										]
									},
									"id": 725,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "_luckyTokenAddress",
												"nameLocation": "943:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "935:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:28:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "963:0:4"
									},
									"scope": 1024,
									"src": "923:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "1141:627:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1160:11:4",
															"subExpression": {
																"id": 735,
																"name": "gameActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "1161:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e742067616d65206973207374696c6c20616374697665",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1173:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef",
																"typeString": "literal_string \"Current game is still active\""
															},
															"value": "Current game is still active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b67c917cb07f2fe719bfd2ed5144d2be17df4eaddc534013851a23dc7b170ef",
																"typeString": "literal_string \"Current game is still active\""
															}
														],
														"id": 734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1152:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1152:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "1152:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 745,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1283:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MinHashGameContract_$1024",
																					"typeString": "contract MinHashGameContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MinHashGameContract_$1024",
																					"typeString": "contract MinHashGameContract"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1275:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1275:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1275:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 741,
																		"name": "luckyToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "1254:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1265:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1254:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1254:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 748,
																"name": "_reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "1293:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1254:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1302:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															},
															"value": "Insufficient token balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1246:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1246:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "1246:85:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 753,
														"name": "epochId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "1356:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1366:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1356:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "1352:97:4",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "1369:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 757,
																		"name": "rewardClaimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "1392:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726576696f757320726577617264206e6f7420636c61696d6564",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1407:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e",
																			"typeString": "literal_string \"Previous reward not claimed\""
																		},
																		"value": "Previous reward not claimed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dee92613c439a4fc172c44a44a597245408f8eac6200c5bdf98c58bb9e85c00e",
																			"typeString": "literal_string \"Previous reward not claimed\""
																		}
																	],
																	"id": 756,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1384:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1384:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 760,
															"nodeType": "ExpressionStatement",
															"src": "1384:53:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1469:9:4",
													"subExpression": {
														"id": 763,
														"name": "epochId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "1469:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "1469:9:4"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 766,
														"name": "gameStartBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "1489:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 767,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1506:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:4",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "1506:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1489:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "1489:29:4"
											},
											{
												"expression": {
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 771,
														"name": "gameDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1529:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 772,
														"name": "_gameDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "1544:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1529:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "1529:28:4"
											},
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 775,
														"name": "currentMinAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "1568:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1596:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1588:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1588:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1588:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1568:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "1568:30:4"
											},
											{
												"expression": {
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 782,
														"name": "currentMinHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "1609:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1631:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 784,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1631:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 783,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1626:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1626:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1640:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1626:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1609:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "1609:34:4"
											},
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 790,
														"name": "gameActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "1654:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1667:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1654:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "1654:17:4"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 794,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "1682:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1699:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1691:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 795,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1691:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1691:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1682:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "1682:19:4"
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 801,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1712:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "1721:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1712:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "1712:16:4"
											},
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "rewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1739:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1755:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1739:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "1739:21:4"
											}
										]
									},
									"functionSelector": "f30d9470",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 732,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 731,
												"name": "onlyOwner",
												"nameLocations": [
													"1131:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "1131:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1131:9:4"
										}
									],
									"name": "startNewGame",
									"nameLocation": "1071:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "_gameDuration",
												"nameLocation": "1092:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1084:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "_reward",
												"nameLocation": "1115:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1107:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:40:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1141:0:4"
									},
									"scope": 1024,
									"src": "1062:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "1818:376:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 816,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1837:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1843:6:4",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "1837:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 818,
																	"name": "gameStartBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "1852:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 819,
																	"name": "gameDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "1869:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1852:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1837:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d652068617320656e646564",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1883:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea",
																"typeString": "literal_string \"Game has ended\""
															},
															"value": "Game has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea",
																"typeString": "literal_string \"Game has ended\""
															}
														],
														"id": 815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1829:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "1829:71:4"
											},
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "playerHash",
														"nameLocation": "1929:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "1921:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1921:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 832,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1977:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1981:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1977:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 834,
																			"name": "epochId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "1989:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 830,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1960:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1964:12:4",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1960:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1960:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 829,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1950:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1950:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1942:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 827,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1942:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1921:78:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 839,
															"name": "currentMinAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "2024:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2053:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2045:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2045:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2045:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2024:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 845,
															"name": "playerHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "2059:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 846,
															"name": "currentMinHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "2072:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2059:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2024:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "2020:167:4",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "2088:99:4",
													"statements": [
														{
															"expression": {
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 849,
																	"name": "currentMinAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "2103:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 850,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2123:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2127:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2123:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2103:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 853,
															"nodeType": "ExpressionStatement",
															"src": "2103:30:4"
														},
														{
															"expression": {
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 854,
																	"name": "currentMinHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "2148:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 855,
																	"name": "playerHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "2165:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2148:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 857,
															"nodeType": "ExpressionStatement",
															"src": "2148:27:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "fd636322",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 813,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 812,
												"name": "gameIsActive",
												"nameLocations": [
													"1805:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "1805:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1805:12:4"
										}
									],
									"name": "iambestone",
									"nameLocation": "1785:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:2:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:4"
									},
									"scope": 1024,
									"src": "1776:418:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "2238:227:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "gameActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2257:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206973206e6f7420616374697665",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2269:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844",
																"typeString": "literal_string \"Game is not active\""
															},
															"value": "Game is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e71ba3195e4d3c62ed010f012f27e7e545984771c63ab7bd38156e6266fdb844",
																"typeString": "literal_string \"Game is not active\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2249:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "2249:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 872,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2309:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2315:6:4",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "2309:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "gameStartBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "2325:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 875,
																	"name": "gameDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "2342:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2325:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2309:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520686173206e6f7420656e64656420796574",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2356:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f",
																"typeString": "literal_string \"Game has not ended yet\""
															},
															"value": "Game has not ended yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f",
																"typeString": "literal_string \"Game has not ended yet\""
															}
														],
														"id": 871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2301:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2301:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "2301:80:4"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 881,
														"name": "gameActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2402:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2402:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "2402:18:4"
											},
											{
												"expression": {
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 885,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "2431:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 886,
														"name": "currentMinAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "2440:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2431:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "2431:26:4"
											}
										]
									},
									"functionSelector": "6cbc2ded",
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 864,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 863,
												"name": "onlyOwner",
												"nameLocations": [
													"2228:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "2228:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2228:9:4"
										}
									],
									"name": "endGame",
									"nameLocation": "2211:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2218:2:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2238:0:4"
									},
									"scope": 1024,
									"src": "2202:263:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "2522:286:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2541:11:4",
															"subExpression": {
																"id": 894,
																"name": "gameActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "2542:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206973207374696c6c20616374697665",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2554:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4",
																"typeString": "literal_string \"Game is still active\""
															},
															"value": "Game is still active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c892f110307649e9660139ae779b14f217cd1657703326d2cb484bfa23001f4",
																"typeString": "literal_string \"Game is still active\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2533:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "2533:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 900,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2596:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2600:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2596:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 902,
																"name": "winner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "2610:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2596:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792077696e6e65722063616e20636c61696d20726577617264",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2618:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b",
																"typeString": "literal_string \"Only winner can claim reward\""
															},
															"value": "Only winner can claim reward"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24459bcafffcba6cde731e2b5ff07ecee41e92021e0f8e75c3b658fb283c925b",
																"typeString": "literal_string \"Only winner can claim reward\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2588:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "2588:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2668:14:4",
															"subExpression": {
																"id": 908,
																"name": "rewardClaimed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "2669:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420616c726561647920636c61696d6564",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2684:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c",
																"typeString": "literal_string \"Reward already claimed\""
															},
															"value": "Reward already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c",
																"typeString": "literal_string \"Reward already claimed\""
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2660:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2660:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "2660:49:4"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "rewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "2730:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2746:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2730:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "2730:20:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "2785:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "2793:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 917,
															"name": "luckyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2761:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2772:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "2761:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2761:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "2761:39:4"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "2501:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:2:4"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2522:0:4"
									},
									"scope": 1024,
									"src": "2492:316:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "2918:81:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 935,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2957:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2961:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2957:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 939,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2977:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MinHashGameContract_$1024",
																		"typeString": "contract MinHashGameContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MinHashGameContract_$1024",
																		"typeString": "contract MinHashGameContract"
																	}
																],
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2969:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 937,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2969:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2969:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "2984:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 932,
															"name": "luckyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2929:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2940:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "2929:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2929:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "2929:62:4"
											}
										]
									},
									"functionSelector": "dd49756e",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 930,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 929,
												"name": "onlyOwner",
												"nameLocations": [
													"2908:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "2908:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2908:9:4"
										}
									],
									"name": "depositTokens",
									"nameLocation": "2871:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2893:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2885:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2884:16:4"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2918:0:4"
									},
									"scope": 1024,
									"src": "2862:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "3119:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 955,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3154:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3158:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3154:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "3166:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 952,
															"name": "luckyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3130:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3141:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "3130:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3130:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "3130:43:4"
											}
										]
									},
									"functionSelector": "315a095d",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 950,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 949,
												"name": "onlyOwner",
												"nameLocations": [
													"3109:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "3109:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3109:9:4"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "3071:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3094:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3086:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:16:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3119:0:4"
									},
									"scope": 1024,
									"src": "3062:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "3294:43:4",
										"statements": [
											{
												"expression": {
													"id": 966,
													"name": "currentMinAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 674,
													"src": "3312:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 965,
												"id": 967,
												"nodeType": "Return",
												"src": "3305:24:4"
											}
										]
									},
									"functionSelector": "efc29372",
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentMinAddress",
									"nameLocation": "3241:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3261:2:4"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3285:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3285:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3284:9:4"
									},
									"scope": 1024,
									"src": "3232:105:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "3444:40:4",
										"statements": [
											{
												"expression": {
													"id": 974,
													"name": "currentMinHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 676,
													"src": "3462:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 973,
												"id": 975,
												"nodeType": "Return",
												"src": "3455:21:4"
											}
										]
									},
									"functionSelector": "d94504b9",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentMinHash",
									"nameLocation": "3394:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3411:2:4"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "3435:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3434:9:4"
									},
									"scope": 1024,
									"src": "3385:99:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "3588:33:4",
										"statements": [
											{
												"expression": {
													"id": 982,
													"name": "epochId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 668,
													"src": "3606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 981,
												"id": 983,
												"nodeType": "Return",
												"src": "3599:14:4"
											}
										]
									},
									"functionSelector": "b97dd9e2",
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentEpoch",
									"nameLocation": "3540:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3555:2:4"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3579:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3579:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3578:9:4"
									},
									"scope": 1024,
									"src": "3531:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "3716:32:4",
										"statements": [
											{
												"expression": {
													"id": 990,
													"name": "winner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 680,
													"src": "3734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 989,
												"id": 991,
												"nodeType": "Return",
												"src": "3727:13:4"
											}
										]
									},
									"functionSelector": "8e7ea5b2",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWinner",
									"nameLocation": "3674:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3683:2:4"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3707:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3707:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:9:4"
									},
									"scope": 1024,
									"src": "3665:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "3846:32:4",
										"statements": [
											{
												"expression": {
													"id": 998,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "3864:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 997,
												"id": 999,
												"nodeType": "Return",
												"src": "3857:13:4"
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nameLocation": "3804:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3813:2:4"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3837:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3837:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3836:9:4"
									},
									"scope": 1024,
									"src": "3795:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "3985:39:4",
										"statements": [
											{
												"expression": {
													"id": 1006,
													"name": "rewardClaimed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 684,
													"src": "4003:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1007,
												"nodeType": "Return",
												"src": "3996:20:4"
											}
										]
									},
									"functionSelector": "c010ce68",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRewardClaimed",
									"nameLocation": "3940:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:4"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3979:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3979:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:6:4"
									},
									"scope": 1024,
									"src": "3931:93:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "4121:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1018,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4164:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MinHashGameContract_$1024",
																		"typeString": "contract MinHashGameContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MinHashGameContract_$1024",
																		"typeString": "contract MinHashGameContract"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4156:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4156:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4156:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1014,
															"name": "luckyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "4135:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4146:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "4135:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4135:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1021,
												"nodeType": "Return",
												"src": "4128:42:4"
											}
										]
									},
									"functionSelector": "6f9fb98a",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nameLocation": "4070:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4088:2:4"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "4112:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4112:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4111:9:4"
									},
									"scope": 1024,
									"src": "4061:113:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1025,
							"src": "258:3919:4",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "104:4073:4"
				},
				"id": 4
			}
		}
	}
}